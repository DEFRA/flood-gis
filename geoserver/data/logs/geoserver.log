2020-02-15 16:01:51,499 INFO [org.geoserver] - Loaded style 'point'
2020-02-15 16:01:51,501 INFO [org.geoserver] - Loaded style 'generic'
2020-02-15 16:01:51,502 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-02-15 16:01:51,503 INFO [org.geoserver] - Loaded style 'raster'
2020-02-15 16:01:51,503 INFO [org.geoserver] - Loaded style 'line'
2020-02-15 16:01:51,504 INFO [org.geoserver] - Loaded style 'polygon'
2020-02-15 16:01:51,505 INFO [org.geoserver] - Loaded default workspace flood
2020-02-15 16:01:51,508 INFO [org.geoserver] - Loaded workspace 'flood'
2020-02-15 16:01:51,513 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-02-15 16:01:51,514 INFO [org.geoserver] - Loaded style 'world'
2020-02-15 16:01:51,515 INFO [org.geoserver] - Loaded style 'stations'
2020-02-15 16:01:51,516 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-02-15 16:01:51,518 INFO [org.geoserver] - Loaded style 'clustered'
2020-02-15 16:01:51,519 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-02-15 16:01:51,519 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-02-15 16:01:51,520 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-02-15 16:01:51,521 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-02-15 16:01:51,522 INFO [org.geoserver] - Loaded style 'HFM'
2020-02-15 16:01:51,523 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-02-15 16:01:51,523 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-02-15 16:01:51,524 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-02-15 16:01:51,525 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-02-15 16:01:51,525 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-02-15 16:01:51,526 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-02-15 16:01:51,802 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-02-15 16:01:51,804 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-02-15 16:01:52,967 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-02-15 16:01:52,971 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-15 16:01:53,456 INFO [org.geoserver] - Loaded layer 'stations'
2020-02-15 16:01:53,459 INFO [org.geoserver] - Loaded feature type 'england_010k', enabled
2020-02-15 16:01:53,459 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-15 16:01:54,061 INFO [org.geoserver] - Loaded layer 'england_010k'
2020-02-15 16:01:54,065 INFO [org.geoserver] - Loaded feature type 'stations_clustered', enabled
2020-02-15 16:01:54,066 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-15 16:01:54,332 INFO [org.geoserver] - Loaded layer 'stations_clustered'
2020-02-15 16:01:54,338 INFO [org.geoserver] - Loaded feature type 'world', enabled
2020-02-15 16:01:54,338 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-15 16:01:54,560 INFO [org.geoserver] - Loaded layer 'world'
2020-02-15 16:01:54,564 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-02-15 16:01:54,565 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-15 16:01:54,834 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-02-15 16:01:54,838 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert_centroid', enabled
2020-02-15 16:01:54,839 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-15 16:01:55,105 INFO [org.geoserver] - Loaded layer 'flood_warning_alert_centroid'
2020-02-15 16:01:55,114 INFO [org.geoserver] - Loaded layer group 'england_world'
2020-02-15 16:01:55,279 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-02-15 16:01:55,292 INFO [org.geoserver] - Loaded service 'WFSInfoImpl-5885e6c6:1704995be57:-8000', enabled
2020-02-15 16:01:55,297 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-02-15 16:01:55,312 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-02-15 16:01:55,323 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-15 16:01:55,337 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-15 16:01:55,337 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-15 16:01:55,338 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-15 16:01:55,374 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-15 16:01:55,374 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-02-15 16:01:55,374 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-02-15 16:01:55,374 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-15 16:01:55,447 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-02-15 16:01:55,447 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-02-15 16:01:55,448 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-02-15 16:01:55,455 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-02-15 16:01:55,456 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-02-15 16:01:55,456 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-02-15 16:01:55,456 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-02-15 16:01:55,456 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-02-15 16:01:55,473 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-15 16:01:55,473 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-02-15 16:01:55,473 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-15 16:01:55,506 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-02-15 16:01:55,571 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-02-15 16:01:55,571 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-02-15 16:01:55,578 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-02-15 16:01:56,414 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-02-15 16:01:56,415 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-02-15 16:01:56,415 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-02-15 16:01:56,529 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-15 16:01:56,540 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-15 16:01:56,545 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-15 16:01:56,547 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-02-15 16:01:56,547 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-02-15 16:01:56,549 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-02-15 16:01:56,561 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-02-15 16:01:56,704 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-02-15 16:01:56,705 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-02-15 16:01:56,888 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-02-15 16:01:56,888 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-02-15 16:01:56,889 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-02-15 16:01:59,134 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-02-15 16:01:59,160 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-02-15 16:01:59,168 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-02-15 16:01:59,169 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-02-15 16:01:59,214 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-02-15 16:01:59,223 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-02-15 16:01:59,223 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-02-15 16:01:59,253 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-15 16:01:59,502 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-02-15 16:01:59,502 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-02-15 16:01:59,547 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-02-15 16:01:59,547 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-02-15 16:01:59,700 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-02-15 16:01:59,702 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-02-15 16:01:59,788 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-02-15 16:01:59,788 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-02-15 16:02:32,716 INFO [geoserver.security] - Strong cryptography is available
2020-02-15 16:06:16,747 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-15 16:06:16,748 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-15 16:06:23,824 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-15 16:06:23,926 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: The requested Style can not be used with this layer.  The style specifies an attribute of severity_description and the layer is: flood:flood_warning_alert
	at org.geoserver.wms.map.GetMapKvpRequestReader.checkStyle(GetMapKvpRequestReader.java:1235)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:454)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:85)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1488)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:674)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-02-15 16:06:39,827 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-15 16:06:39,965 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Width = 20
	Height = 20
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	FeatureType = null
	Layers = [null]
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Locale = null
	Format = image/png
	Rules = [null]
	Strict = false
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=unhighlight_fwa, WIDTH=20, HEIGHT=20}
	RequestCharset = null
	Version = 1.0.0
	Request = GetLegendGraphic
2020-02-15 16:07:25,144 INFO [gwc.layer] - Truncating layer 'flood:flood_warning_alert' due to a change in style 'unhighlight_fwa'
2020-02-15 16:07:25,145 WARN [catalog.impl] - Catalog listener threw exception handling event.
java.lang.IllegalArgumentException: Thread 39 Unknown layer flood:flood_warning_alert. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.getTileLayerByName(GWC.java:1017)
	at org.geoserver.gwc.GWC.getCachedStyles(GWC.java:553)
	at org.geoserver.gwc.GWC.isStyleCached(GWC.java:541)
	at org.geoserver.gwc.GWC.truncateByLayerAndStyle(GWC.java:370)
	at org.geoserver.gwc.layer.CatalogStyleChangeListener.handleStyleChange(CatalogStyleChangeListener.java:220)
	at org.geoserver.gwc.layer.CatalogStyleChangeListener.handlePostModifyEvent(CatalogStyleChangeListener.java:161)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1512)
	at org.geoserver.catalog.impl.CatalogImpl.firePostModified(CatalogImpl.java:1489)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.afterSaved(AbstractCatalogFacade.java:104)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.saved(AbstractCatalogFacade.java:68)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:808)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:1403)
	at org.geoserver.security.SecureCatalogImpl.save(SecureCatalogImpl.java:1339)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.save(AbstractFilteredCatalog.java:764)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.save(AbstractCatalogDecorator.java:497)
	at org.geoserver.wms.web.data.StyleEditPage.onStyleFormSubmit(StyleEditPage.java:117)
	at org.geoserver.wms.web.data.AbstractStylePage$1.onSubmit(AbstractStylePage.java:143)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1313)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:974)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:795)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:708)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:216)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:865)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:158)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:205)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:157)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.geowebcache.GeoWebCacheException: Thread 39 Unknown layer flood:flood_warning_alert. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geoserver.gwc.GWC.getTileLayerByName(GWC.java:1015)
	... 136 more
2020-02-15 16:07:27,062 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-15 16:07:27,063 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-15 16:07:29,821 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-15 16:07:30,185 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-5.71707411229573 : 1.14454079449205, 50.0498548422415 : 55.0043102697652]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	StyleFormat = sld
	Transparent = false
	Interpolations = []
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = application/openlayers
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-5.71707411229573,50.0498548422415,1.14454079449205,55.0043102697652, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.0
	Request = GetMap
2020-02-15 16:07:30,456 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-15 16:07:31,427 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-6.50390625 : 1.93359375, 49.482421875 : 55.56884765625]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	StyleFormat = sld
	Transparent = true
	Interpolations = []
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-6.50390625,49.482421875,1.93359375,55.56884765625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-15 16:07:35,606 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-15 16:07:36,346 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-4.1143798828125 : 0.1043701171875, 50.3173828125 : 53.360595703125]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	StyleFormat = sld
	Transparent = true
	Interpolations = []
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-4.1143798828125,50.3173828125,0.1043701171875,53.360595703125, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-15 16:07:37,073 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-15 16:07:37,673 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-3.0816650390625 : -0.9722900390625, 50.71563720703125 : 52.23724365234375]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	StyleFormat = sld
	Transparent = true
	Interpolations = []
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-3.0816650390625,50.71563720703125,-0.9722900390625,52.23724365234375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-15 16:07:38,408 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-15 16:07:38,859 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-2.5653076171875 : -1.5106201171875, 50.9161376953125 : 51.67694091796875]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	StyleFormat = sld
	Transparent = true
	Interpolations = []
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-2.5653076171875,50.9161376953125,-1.5106201171875,51.67694091796875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-15 16:07:39,710 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-15 16:07:40,094 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[-2.0441436767578125 : -1.9054412841796875, 51.07887268066407 : 51.217575073242195]
 layers: flood:flood_warning_alert
 styles: unhighlight_fwa
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=flood:flood_warning_alert, REQUEST=GetFeatureInfo, SRS=EPSG:4326, BBOX=-2.0441436767578125,51.07887268066407,-1.9054412841796875,51.217575073242195, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=flood:flood_warning_alert, TRANSPARENT=true, FEATURE_COUNT=50}
	RequestCharset = null
	Version = 1.1.1
	Request = GetFeatureInfo
2020-02-15 16:07:40,159 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-15 16:07:40,177 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Width = 20
	Height = 20
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	FeatureType = null
	Layers = [SimpleFeatureTypeImpl http://apps.environment-agency.gov.uk/flood:flood_warning_alert identified extends Feature(id:id,ta_name:ta_name,severity_value:severity_value,severity:severity,geom:geom)]
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=flood_warning_alert, name=http://apps.environment-agency.gov.uk/flood:flood_warning_alert styleName=null, title=flood_warning_alert, legendInfo=null]]
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Locale = null
	Format = image/png
	Rules = [null]
	Strict = true
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {REQUEST=GetLegendGraphic, FORMAT=image/png, SERVICE=wms, WIDTH=20, HEIGHT=20, LAYER=flood_warning_alert}
	RequestCharset = null
	Version = 1.1.1
	Request = GetLegendGraphic
2020-02-15 16:07:41,940 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-15 16:07:42,667 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-4.954833984375 : -0.736083984375, 50.3009033203125 : 53.3441162109375]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	StyleFormat = sld
	Transparent = true
	Interpolations = []
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-4.954833984375,50.3009033203125,-0.736083984375,53.3441162109375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-15 16:07:43,495 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-15 16:07:43,912 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-15 16:07:44,164 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-4.28466796875 : -0.06591796875, 50.4107666015625 : 53.4539794921875]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	StyleFormat = sld
	Transparent = true
	Interpolations = []
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-4.28466796875,50.4107666015625,-0.06591796875,53.4539794921875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-15 16:07:44,878 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-7.3828125 : 1.0546875, 49.306640625 : 55.39306640625]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	StyleFormat = sld
	Transparent = true
	Interpolations = []
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-7.3828125,49.306640625,1.0546875,55.39306640625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-15 16:08:43,377 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:08:43,834 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@71005d3e (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:08:43,836 INFO [wfs.json] - about to encode JSON
2020-02-15 16:09:03,945 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:09:04,168 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@3e2661e5 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((51.64734115220003 -3.702351711606155, 51.64734115220003 -0.7002259935690297, 52.8267521484687 -0.7002259935690297, 52.8267521484687 -3.702351711606155, 51.64734115220003 -3.702351711606155)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((51.64734115220003 -3.702351711606155, 51.64734115220003 -0.7002259935690297, 52.8267521484687 -0.7002259935690297, 52.8267521484687 -3.702351711606155, 51.64734115220003 -3.702351711606155)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((51.64734115220003 -3.702351711606155, 51.64734115220003 -0.7002259935690297, 52.8267521484687 -0.7002259935690297, 52.8267521484687 -3.702351711606155, 51.64734115220003 -3.702351711606155)) ]
2020-02-15 16:09:04,170 INFO [wfs.json] - about to encode JSON
2020-02-15 16:10:05,553 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:10:05,745 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@381bde52 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:10:05,747 INFO [wfs.json] - about to encode JSON
2020-02-15 16:10:09,498 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:10:09,697 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6dada2d4 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((51.9754253342287 -2.3509681978021977, 51.9754253342287 -2.0684488021978016, 52.2840039417016 -2.0684488021978016, 52.2840039417016 -2.3509681978021977, 51.9754253342287 -2.3509681978021977)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((51.9754253342287 -2.3509681978021977, 51.9754253342287 -2.0684488021978016, 52.2840039417016 -2.0684488021978016, 52.2840039417016 -2.3509681978021977, 51.9754253342287 -2.3509681978021977)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((51.9754253342287 -2.3509681978021977, 51.9754253342287 -2.0684488021978016, 52.2840039417016 -2.0684488021978016, 52.2840039417016 -2.3509681978021977, 51.9754253342287 -2.3509681978021977)) ]
2020-02-15 16:10:09,701 INFO [wfs.json] - about to encode JSON
2020-02-15 16:11:18,093 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:11:18,739 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2b2357e (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:11:18,744 INFO [wfs.json] - about to encode JSON
2020-02-15 16:13:39,089 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:13:39,294 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2c859b17 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:13:39,295 INFO [wfs.json] - about to encode JSON
2020-02-15 16:13:43,581 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:13:43,817 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5e1ca3a1 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((51.96861994039415 -2.3571767142857145, 51.96861994039415 -2.062240285714286, 52.29076093569691 -2.062240285714286, 52.29076093569691 -2.3571767142857145, 51.96861994039415 -2.3571767142857145)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((51.96861994039415 -2.3571767142857145, 51.96861994039415 -2.062240285714286, 52.29076093569691 -2.062240285714286, 52.29076093569691 -2.3571767142857145, 51.96861994039415 -2.3571767142857145)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((51.96861994039415 -2.3571767142857145, 51.96861994039415 -2.062240285714286, 52.29076093569691 -2.062240285714286, 52.29076093569691 -2.3571767142857145, 51.96861994039415 -2.3571767142857145)) ]
2020-02-15 16:13:43,820 INFO [wfs.json] - about to encode JSON
2020-02-15 16:14:17,726 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:14:18,005 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5150dce4 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((51.96151461587229 -2.3636581978021978, 51.96151461587229 -2.0557588021978024, 52.29781429077866 -2.0557588021978024, 52.29781429077866 -2.3636581978021978, 51.96151461587229 -2.3636581978021978)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((51.96151461587229 -2.3636581978021978, 51.96151461587229 -2.0557588021978024, 52.29781429077866 -2.0557588021978024, 52.29781429077866 -2.3636581978021978, 51.96151461587229 -2.3636581978021978)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((51.96151461587229 -2.3636581978021978, 51.96151461587229 -2.0557588021978024, 52.29781429077866 -2.0557588021978024, 52.29781429077866 -2.3636581978021978, 51.96151461587229 -2.3636581978021978)) ]
2020-02-15 16:14:18,007 INFO [wfs.json] - about to encode JSON
2020-02-15 16:15:12,028 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:15:12,206 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
    maxFeatures = 50
    outputFormat = application/json
    resultType = results
2020-02-15 16:15:12,207 INFO [wfs.json] - about to encode JSON
2020-02-15 16:15:58,481 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-15 16:15:58,481 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-15 16:16:00,013 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:16:00,236 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7fe10f91 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:16:00,239 INFO [wfs.json] - about to encode JSON
2020-02-15 16:16:02,592 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:16:02,695 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 50
    outputFormat = application/json
    resultType = results
2020-02-15 16:16:02,696 INFO [wfs.json] - about to encode JSON
2020-02-15 16:16:10,960 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:16:11,082 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
    maxFeatures = 50
    outputFormat = application/json
    resultType = results
2020-02-15 16:16:11,083 INFO [wfs.json] - about to encode JSON
2020-02-15 16:16:35,188 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:16:35,410 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6dab5335 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:16:35,411 INFO [wfs.json] - about to encode JSON
2020-02-15 16:16:42,879 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:16:43,081 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@670c5a43 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((51.95409532900433 -2.3704245164835163, 51.95409532900433 -2.0489924835164834, 52.305175908079406 -2.0489924835164834, 52.305175908079406 -2.3704245164835163, 51.95409532900433 -2.3704245164835163)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((51.95409532900433 -2.3704245164835163, 51.95409532900433 -2.0489924835164834, 52.305175908079406 -2.0489924835164834, 52.305175908079406 -2.3704245164835163, 51.95409532900433 -2.3704245164835163)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((51.95409532900433 -2.3704245164835163, 51.95409532900433 -2.0489924835164834, 52.305175908079406 -2.0489924835164834, 52.305175908079406 -2.3704245164835163, 51.95409532900433 -2.3704245164835163)) ]
2020-02-15 16:16:43,086 INFO [wfs.json] - about to encode JSON
2020-02-15 16:16:58,051 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:16:58,247 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@20cda346 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((51.95409532900433 -2.6554275857142855, 51.95409532900433 -1.7639894142857142, 52.305175908079406 -1.7639894142857142, 52.305175908079406 -2.6554275857142855, 51.95409532900433 -2.6554275857142855)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((51.95409532900433 -2.6554275857142855, 51.95409532900433 -1.7639894142857142, 52.305175908079406 -1.7639894142857142, 52.305175908079406 -2.6554275857142855, 51.95409532900433 -2.6554275857142855)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((51.95409532900433 -2.6554275857142855, 51.95409532900433 -1.7639894142857142, 52.305175908079406 -1.7639894142857142, 52.305175908079406 -2.6554275857142855, 51.95409532900433 -2.6554275857142855)) ]
2020-02-15 16:16:58,250 INFO [wfs.json] - about to encode JSON
2020-02-15 16:17:11,976 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:17:12,173 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@57a20109 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((51.527773207437605 -3.887006570634512, 51.527773207437605 -0.6691144539277739, 52.794102237414336 -0.6691144539277739, 52.794102237414336 -3.887006570634512, 51.527773207437605 -3.887006570634512)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((51.527773207437605 -3.887006570634512, 51.527773207437605 -0.6691144539277739, 52.794102237414336 -0.6691144539277739, 52.794102237414336 -3.887006570634512, 51.527773207437605 -3.887006570634512)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((51.527773207437605 -3.887006570634512, 51.527773207437605 -0.6691144539277739, 52.794102237414336 -0.6691144539277739, 52.794102237414336 -3.887006570634512, 51.527773207437605 -3.887006570634512)) ]
2020-02-15 16:17:12,176 INFO [wfs.json] - about to encode JSON
2020-02-15 16:17:18,279 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:17:19,703 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5790430a (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.44455315441573 -1.6574565510238999, 52.44455315441573 -0.5083083846815628, 52.891637926924915 -0.5083083846815628, 52.891637926924915 -1.6574565510238999, 52.44455315441573 -1.6574565510238999)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.44455315441573 -1.6574565510238999, 52.44455315441573 -0.5083083846815628, 52.891637926924915 -0.5083083846815628, 52.891637926924915 -1.6574565510238999, 52.44455315441573 -1.6574565510238999)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.44455315441573 -1.6574565510238999, 52.44455315441573 -0.5083083846815628, 52.891637926924915 -0.5083083846815628, 52.891637926924915 -1.6574565510238999, 52.44455315441573 -1.6574565510238999)) ]
2020-02-15 16:17:19,703 INFO [wfs.json] - about to encode JSON
2020-02-15 16:20:30,140 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:20:30,347 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@26eb39b8 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:20:30,350 INFO [wfs.json] - about to encode JSON
2020-02-15 16:20:33,478 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:20:33,686 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6c8daf8b (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.66520166488155 -1.1752796834157662, 52.66520166488155 -0.8821383165842338, 52.779110581748 -0.8821383165842338, 52.779110581748 -1.1752796834157662, 52.66520166488155 -1.1752796834157662)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.66520166488155 -1.1752796834157662, 52.66520166488155 -0.8821383165842338, 52.779110581748 -0.8821383165842338, 52.779110581748 -1.1752796834157662, 52.66520166488155 -1.1752796834157662)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.66520166488155 -1.1752796834157662, 52.66520166488155 -0.8821383165842338, 52.779110581748 -0.8821383165842338, 52.779110581748 -1.1752796834157662, 52.66520166488155 -1.1752796834157662)) ]
2020-02-15 16:20:33,687 INFO [wfs.json] - about to encode JSON
2020-02-15 16:20:37,699 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:20:37,887 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@35329a10 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.483109984955405 -1.841859217244481, 52.483109984955405 -0.7293896249846128, 52.91561523186243 -0.7293896249846128, 52.91561523186243 -1.841859217244481, 52.483109984955405 -1.841859217244481)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.483109984955405 -1.841859217244481, 52.483109984955405 -0.7293896249846128, 52.91561523186243 -0.7293896249846128, 52.91561523186243 -1.841859217244481, 52.483109984955405 -1.841859217244481)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.483109984955405 -1.841859217244481, 52.483109984955405 -0.7293896249846128, 52.91561523186243 -0.7293896249846128, 52.91561523186243 -1.841859217244481, 52.483109984955405 -1.841859217244481)) ]
2020-02-15 16:20:37,888 INFO [wfs.json] - about to encode JSON
2020-02-15 16:20:41,806 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:20:42,016 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@45048f49 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.25568669415884 -2.679727108686793, 52.25568669415884 -0.0719243247391531, 53.26804616359357 -0.0719243247391531, 53.26804616359357 -2.679727108686793, 52.25568669415884 -2.679727108686793)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.25568669415884 -2.679727108686793, 52.25568669415884 -0.0719243247391531, 53.26804616359357 -0.0719243247391531, 53.26804616359357 -2.679727108686793, 52.25568669415884 -2.679727108686793)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.25568669415884 -2.679727108686793, 52.25568669415884 -0.0719243247391531, 53.26804616359357 -0.0719243247391531, 53.26804616359357 -2.679727108686793, 52.25568669415884 -2.679727108686793)) ]
2020-02-15 16:20:42,017 INFO [wfs.json] - about to encode JSON
2020-02-15 16:20:51,639 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:20:51,829 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@37a6608b (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.50303895859997 -1.9233548861186018, 52.50303895859997 -0.5928701138813982, 53.01956732493477 -0.5928701138813982, 53.01956732493477 -1.9233548861186018, 52.50303895859997 -1.9233548861186018)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.50303895859997 -1.9233548861186018, 52.50303895859997 -0.5928701138813982, 53.01956732493477 -0.5928701138813982, 53.01956732493477 -1.9233548861186018, 52.50303895859997 -1.9233548861186018)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.50303895859997 -1.9233548861186018, 52.50303895859997 -0.5928701138813982, 53.01956732493477 -0.5928701138813982, 53.01956732493477 -1.9233548861186018, 52.50303895859997 -1.9233548861186018)) ]
2020-02-15 16:20:51,831 INFO [wfs.json] - about to encode JSON
2020-02-15 16:22:46,501 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:22:46,683 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1a667fe8 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.539779275396 -1.8159598347609065, 52.539779275396 -0.4854750625237028, 53.055874350688754 -0.4854750625237028, 53.055874350688754 -1.8159598347609065, 52.539779275396 -1.8159598347609065)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.539779275396 -1.8159598347609065, 52.539779275396 -0.4854750625237028, 53.055874350688754 -0.4854750625237028, 53.055874350688754 -1.8159598347609065, 52.539779275396 -1.8159598347609065)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.539779275396 -1.8159598347609065, 52.539779275396 -0.4854750625237028, 53.055874350688754 -0.4854750625237028, 53.055874350688754 -1.8159598347609065, 52.539779275396 -1.8159598347609065)) ]
2020-02-15 16:22:46,684 INFO [wfs.json] - about to encode JSON
2020-02-15 16:23:17,036 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:23:17,748 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2143162e (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.52836708247577 -1.4011328571428572, 52.52836708247577 -0.9003021428571429, 53.067148899398745 -0.9003021428571429, 53.067148899398745 -1.4011328571428572, 52.52836708247577 -1.4011328571428572)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.52836708247577 -1.4011328571428572, 52.52836708247577 -0.9003021428571429, 53.067148899398745 -0.9003021428571429, 53.067148899398745 -1.4011328571428572, 52.52836708247577 -1.4011328571428572)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.52836708247577 -1.4011328571428572, 52.52836708247577 -0.9003021428571429, 53.067148899398745 -0.9003021428571429, 53.067148899398745 -1.4011328571428572, 52.52836708247577 -1.4011328571428572)) ]
2020-02-15 16:23:17,748 INFO [wfs.json] - about to encode JSON
2020-02-15 16:25:36,095 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:25:36,279 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2d2bb5c9 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.52836708247577 -1.845202757142857, 52.52836708247577 -0.456232242857143, 53.067148899398745 -0.456232242857143, 53.067148899398745 -1.845202757142857, 52.52836708247577 -1.845202757142857)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.52836708247577 -1.845202757142857, 52.52836708247577 -0.456232242857143, 53.067148899398745 -0.456232242857143, 53.067148899398745 -1.845202757142857, 52.52836708247577 -1.845202757142857)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.52836708247577 -1.845202757142857, 52.52836708247577 -0.456232242857143, 53.067148899398745 -0.456232242857143, 53.067148899398745 -1.845202757142857, 52.52836708247577 -1.845202757142857)) ]
2020-02-15 16:25:36,280 INFO [wfs.json] - about to encode JSON
2020-02-15 16:26:01,444 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:26:01,662 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6b8c1f0d (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.5228404465623 -1.8593610886758192, 52.5228404465623 -0.4420739113241808, 53.07260636439753 -0.4420739113241808, 53.07260636439753 -1.8593610886758192, 52.5228404465623 -1.8593610886758192)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.5228404465623 -1.8593610886758192, 52.5228404465623 -0.4420739113241808, 53.07260636439753 -0.4420739113241808, 53.07260636439753 -1.8593610886758192, 52.5228404465623 -1.8593610886758192)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.5228404465623 -1.8593610886758192, 52.5228404465623 -0.4420739113241808, 53.07260636439753 -0.4420739113241808, 53.07260636439753 -1.8593610886758192, 52.5228404465623 -1.8593610886758192)) ]
2020-02-15 16:26:01,663 INFO [wfs.json] - about to encode JSON
2020-02-15 16:26:12,003 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:26:12,188 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2768bbb6 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.51720096834788 -1.8738082095562225, 52.51720096834788 -0.4276267904437779, 53.078175027473776 -0.4276267904437779, 53.078175027473776 -1.8738082095562225, 52.51720096834788 -1.8738082095562225)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.51720096834788 -1.8738082095562225, 52.51720096834788 -0.4276267904437779, 53.078175027473776 -0.4276267904437779, 53.078175027473776 -1.8738082095562225, 52.51720096834788 -1.8738082095562225)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.51720096834788 -1.8738082095562225, 52.51720096834788 -0.4276267904437779, 53.078175027473776 -0.4276267904437779, 53.078175027473776 -1.8738082095562225, 52.51720096834788 -1.8738082095562225)) ]
2020-02-15 16:26:12,190 INFO [wfs.json] - about to encode JSON
2020-02-15 16:28:38,422 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:28:38,610 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7f0d2951 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.14709173223568 -2.2917484594172435, 52.14709173223568 0.6006143788076446, 53.27126157755055 0.6006143788076446, 53.27126157755055 -2.2917484594172435, 52.14709173223568 -2.2917484594172435)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.14709173223568 -2.2917484594172435, 52.14709173223568 0.6006143788076446, 53.27126157755055 0.6006143788076446, 53.27126157755055 -2.2917484594172435, 52.14709173223568 -2.2917484594172435)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.14709173223568 -2.2917484594172435, 52.14709173223568 0.6006143788076446, 53.27126157755055 0.6006143788076446, 53.27126157755055 -2.2917484594172435, 52.14709173223568 -2.2917484594172435)) ]
2020-02-15 16:28:38,611 INFO [wfs.json] - about to encode JSON
2020-02-15 16:31:05,311 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:31:17,598 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4590abbb (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:31:17,599 INFO [wfs.json] - about to encode JSON
2020-02-15 16:31:19,818 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:33:34,167 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:33:34,586 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@301f5f6 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:33:34,587 INFO [wfs.json] - about to encode JSON
2020-02-15 16:33:43,145 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:33:43,332 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4e215c1d (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.003781383539774 -2.4403335441297647, 52.003781383539774 0.6554584614470337, 53.20982640339204 0.6554584614470337, 53.20982640339204 -2.4403335441297647, 52.003781383539774 -2.4403335441297647)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.003781383539774 -2.4403335441297647, 52.003781383539774 0.6554584614470337, 53.20982640339204 0.6554584614470337, 53.20982640339204 -2.4403335441297647, 52.003781383539774 -2.4403335441297647)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.003781383539774 -2.4403335441297647, 52.003781383539774 0.6554584614470337, 53.20982640339204 0.6554584614470337, 53.20982640339204 -2.4403335441297647, 52.003781383539774 -2.4403335441297647)) ]
2020-02-15 16:33:43,333 INFO [wfs.json] - about to encode JSON
2020-02-15 16:33:54,327 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:33:54,504 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2ffa9e94 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.084460152790996 -2.46168283986487, 52.084460152790996 0.6341091657119284, 53.288312364338765 0.6341091657119284, 53.288312364338765 -2.46168283986487, 52.084460152790996 -2.46168283986487)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.084460152790996 -2.46168283986487, 52.084460152790996 0.6341091657119284, 53.288312364338765 0.6341091657119284, 53.288312364338765 -2.46168283986487, 52.084460152790996 -2.46168283986487)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.084460152790996 -2.46168283986487, 52.084460152790996 0.6341091657119284, 53.288312364338765 0.6341091657119284, 53.288312364338765 -2.46168283986487, 52.084460152790996 -2.46168283986487)) ]
2020-02-15 16:33:54,506 INFO [wfs.json] - about to encode JSON
2020-02-15 16:34:02,375 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:34:02,600 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@b348832 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.85318090486473 -2.9155850054416055, 52.85318090486473 0.2433226561406431, 54.05979886952875 0.2433226561406431, 54.05979886952875 -2.9155850054416055, 52.85318090486473 -2.9155850054416055)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.85318090486473 -2.9155850054416055, 52.85318090486473 0.2433226561406431, 54.05979886952875 0.2433226561406431, 54.05979886952875 -2.9155850054416055, 52.85318090486473 -2.9155850054416055)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.85318090486473 -2.9155850054416055, 52.85318090486473 0.2433226561406431, 54.05979886952875 0.2433226561406431, 54.05979886952875 -2.9155850054416055, 52.85318090486473 -2.9155850054416055)) ]
2020-02-15 16:34:02,605 INFO [wfs.json] - about to encode JSON
2020-02-15 16:34:08,453 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:34:08,624 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@22c6b61c (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.034205858195435 -2.7293755833289066, 53.034205858195435 0.4295320782533421, 54.235746095529834 0.4295320782533421, 54.235746095529834 -2.7293755833289066, 53.034205858195435 -2.7293755833289066)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.034205858195435 -2.7293755833289066, 53.034205858195435 0.4295320782533421, 54.235746095529834 0.4295320782533421, 54.235746095529834 -2.7293755833289066, 53.034205858195435 -2.7293755833289066)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.034205858195435 -2.7293755833289066, 53.034205858195435 0.4295320782533421, 54.235746095529834 0.4295320782533421, 54.235746095529834 -2.7293755833289066, 53.034205858195435 -2.7293755833289066)) ]
2020-02-15 16:34:08,625 INFO [wfs.json] - about to encode JSON
2020-02-15 16:34:40,741 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:34:40,919 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4e2010bf (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.64164151641401 -1.2881407006372676, 53.64164151641401 -0.8417732993627319, 53.81107068080604 -0.8417732993627319, 53.81107068080604 -1.2881407006372676, 53.64164151641401 -1.2881407006372676)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.64164151641401 -1.2881407006372676, 53.64164151641401 -0.8417732993627319, 53.81107068080604 -0.8417732993627319, 53.81107068080604 -1.2881407006372676, 53.64164151641401 -1.2881407006372676)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.64164151641401 -1.2881407006372676, 53.64164151641401 -0.8417732993627319, 53.81107068080604 -0.8417732993627319, 53.81107068080604 -1.2881407006372676, 53.64164151641401 -1.2881407006372676)) ]
2020-02-15 16:34:40,920 INFO [wfs.json] - about to encode JSON
2020-02-15 16:34:43,113 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:34:43,305 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4715e4a (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.46067518537055 -1.971680689832336, 53.46067518537055 -0.1904441046414722, 54.13561292812739 -0.1904441046414722, 54.13561292812739 -1.971680689832336, 53.46067518537055 -1.971680689832336)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.46067518537055 -1.971680689832336, 53.46067518537055 -0.1904441046414722, 54.13561292812739 -0.1904441046414722, 54.13561292812739 -1.971680689832336, 53.46067518537055 -1.971680689832336)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.46067518537055 -1.971680689832336, 53.46067518537055 -0.1904441046414722, 54.13561292812739 -0.1904441046414722, 54.13561292812739 -1.971680689832336, 53.46067518537055 -1.971680689832336)) ]
2020-02-15 16:34:43,307 INFO [wfs.json] - about to encode JSON
2020-02-15 16:34:51,327 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:34:51,502 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4d7b84d4 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.45880185729126 -1.9303156843339002, 53.45880185729126 -0.1934639808726073, 54.11708246733954 -0.1934639808726073, 54.11708246733954 -1.9303156843339002, 53.45880185729126 -1.9303156843339002)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.45880185729126 -1.9303156843339002, 53.45880185729126 -0.1934639808726073, 54.11708246733954 -0.1934639808726073, 54.11708246733954 -1.9303156843339002, 53.45880185729126 -1.9303156843339002)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.45880185729126 -1.9303156843339002, 53.45880185729126 -0.1934639808726073, 54.11708246733954 -0.1934639808726073, 54.11708246733954 -1.9303156843339002, 53.45880185729126 -1.9303156843339002)) ]
2020-02-15 16:34:51,503 INFO [wfs.json] - about to encode JSON
2020-02-15 16:36:34,100 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:36:34,194 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
    maxFeatures = 50
    outputFormat = application/json
    resultType = results
2020-02-15 16:36:34,194 INFO [wfs.json] - about to encode JSON
2020-02-15 16:37:34,578 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:37:34,767 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5d19b758 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:37:34,768 INFO [wfs.json] - about to encode JSON
2020-02-15 16:37:52,253 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:37:52,427 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@3394662f (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.34922460458614 -1.7663331832011693, 53.34922460458614 -1.0044728668776135, 54.15074210475629 -1.0044728668776135, 54.15074210475629 -1.7663331832011693, 53.34922460458614 -1.7663331832011693)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.34922460458614 -1.7663331832011693, 53.34922460458614 -1.0044728668776135, 54.15074210475629 -1.0044728668776135, 54.15074210475629 -1.7663331832011693, 53.34922460458614 -1.7663331832011693)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.34922460458614 -1.7663331832011693, 53.34922460458614 -1.0044728668776135, 54.15074210475629 -1.0044728668776135, 54.15074210475629 -1.7663331832011693, 53.34922460458614 -1.7663331832011693)) ]
2020-02-15 16:37:52,429 INFO [wfs.json] - about to encode JSON
2020-02-15 16:37:53,476 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:37:53,649 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@53447384 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.41813230684383 -1.6395172969096885, 53.41813230684383 -0.8776569805861328, 54.218346973458324 -0.8776569805861328, 54.218346973458324 -1.6395172969096885, 53.41813230684383 -1.6395172969096885)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.41813230684383 -1.6395172969096885, 53.41813230684383 -0.8776569805861328, 54.218346973458324 -0.8776569805861328, 54.218346973458324 -1.6395172969096885, 53.41813230684383 -1.6395172969096885)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.41813230684383 -1.6395172969096885, 53.41813230684383 -0.8776569805861328, 54.218346973458324 -0.8776569805861328, 54.218346973458324 -1.6395172969096885, 53.41813230684383 -1.6395172969096885)) ]
2020-02-15 16:37:53,650 INFO [wfs.json] - about to encode JSON
2020-02-15 16:38:03,608 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:38:03,789 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1bc18b65 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.516227512359364 -1.6620909359118676, 53.516227512359364 -0.9002306195883121, 54.3145855592054 -0.9002306195883121, 54.3145855592054 -1.6620909359118676, 53.516227512359364 -1.6620909359118676)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.516227512359364 -1.6620909359118676, 53.516227512359364 -0.9002306195883121, 54.3145855592054 -0.9002306195883121, 54.3145855592054 -1.6620909359118676, 53.516227512359364 -1.6620909359118676)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.516227512359364 -1.6620909359118676, 53.516227512359364 -0.9002306195883121, 54.3145855592054 -0.9002306195883121, 54.3145855592054 -1.6620909359118676, 53.516227512359364 -1.6620909359118676)) ]
2020-02-15 16:38:03,790 INFO [wfs.json] - about to encode JSON
2020-02-15 16:39:24,691 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:39:24,875 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1af9b926 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:39:24,876 INFO [wfs.json] - about to encode JSON
2020-02-15 16:39:30,026 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:39:30,304 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@32add45d (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((51.80599164020171 -3.4550624243176813, 51.80599164020171 -1.549990575682318, 52.55539967357129 -1.549990575682318, 52.55539967357129 -3.4550624243176813, 51.80599164020171 -3.4550624243176813)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((51.80599164020171 -3.4550624243176813, 51.80599164020171 -1.549990575682318, 52.55539967357129 -1.549990575682318, 52.55539967357129 -3.4550624243176813, 51.80599164020171 -3.4550624243176813)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((51.80599164020171 -3.4550624243176813, 51.80599164020171 -1.549990575682318, 52.55539967357129 -1.549990575682318, 52.55539967357129 -3.4550624243176813, 51.80599164020171 -3.4550624243176813)) ]
2020-02-15 16:39:30,305 INFO [wfs.json] - about to encode JSON
2020-02-15 16:39:53,355 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:39:53,626 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@33ee6d1 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.13194386877069 -2.2691586222009095, 52.13194386877069 -2.1895293777990905, 52.16329229495179 -2.1895293777990905, 52.16329229495179 -2.2691586222009095, 52.13194386877069 -2.2691586222009095)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.13194386877069 -2.2691586222009095, 52.13194386877069 -2.1895293777990905, 52.16329229495179 -2.1895293777990905, 52.16329229495179 -2.2691586222009095, 52.13194386877069 -2.2691586222009095)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.13194386877069 -2.2691586222009095, 52.13194386877069 -2.1895293777990905, 52.16329229495179 -2.1895293777990905, 52.16329229495179 -2.2691586222009095, 52.13194386877069 -2.2691586222009095)) ]
2020-02-15 16:39:53,628 INFO [wfs.json] - about to encode JSON
2020-02-15 16:40:03,869 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:40:04,078 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4a0f3082 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:40:04,079 INFO [wfs.json] - about to encode JSON
2020-02-15 16:44:25,785 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-15 16:44:25,973 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1108b6a8 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:44:25,973 INFO [wfs.json] - about to encode JSON
2020-02-15 16:48:04,551 WARN [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: Unable to obtain connection: The connection attempt failed.
2020-02-15 16:48:05,044 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5de6134a (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-15 16:48:05,045 INFO [wfs.json] - about to encode JSON
2020-02-15 16:48:48,534 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-02-15 16:48:48,535 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-02-15 16:48:48,539 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-02-15 16:48:48,539 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-02-15 16:48:48,540 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-02-15 16:48:48,540 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-02-15 16:48:48,540 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-02-15 16:48:48,540 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-02-15 16:48:48,541 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-02-15 16:48:48,541 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-02-15 16:48:48,541 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-02-15 16:48:48,551 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-02-17 08:40:20,039 INFO [org.geoserver] - Loaded style 'point'
2020-02-17 08:40:20,041 INFO [org.geoserver] - Loaded style 'generic'
2020-02-17 08:40:20,042 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-02-17 08:40:20,042 INFO [org.geoserver] - Loaded style 'raster'
2020-02-17 08:40:20,043 INFO [org.geoserver] - Loaded style 'line'
2020-02-17 08:40:20,044 INFO [org.geoserver] - Loaded style 'polygon'
2020-02-17 08:40:20,044 INFO [org.geoserver] - Loaded default workspace flood
2020-02-17 08:40:20,047 INFO [org.geoserver] - Loaded workspace 'flood'
2020-02-17 08:40:20,053 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-02-17 08:40:20,054 INFO [org.geoserver] - Loaded style 'world'
2020-02-17 08:40:20,055 INFO [org.geoserver] - Loaded style 'stations'
2020-02-17 08:40:20,057 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-02-17 08:40:20,059 INFO [org.geoserver] - Loaded style 'clustered'
2020-02-17 08:40:20,060 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-02-17 08:40:20,061 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-02-17 08:40:20,061 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-02-17 08:40:20,062 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-02-17 08:40:20,064 INFO [org.geoserver] - Loaded style 'HFM'
2020-02-17 08:40:20,065 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-02-17 08:40:20,065 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-02-17 08:40:20,066 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-02-17 08:40:20,068 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-02-17 08:40:20,069 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-02-17 08:40:20,070 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-02-17 08:40:20,330 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-02-17 08:40:20,332 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-02-17 08:40:21,510 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-02-17 08:40:21,515 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 08:40:21,976 INFO [org.geoserver] - Loaded layer 'stations'
2020-02-17 08:40:21,979 INFO [org.geoserver] - Loaded feature type 'england_010k', enabled
2020-02-17 08:40:21,980 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 08:40:22,534 INFO [org.geoserver] - Loaded layer 'england_010k'
2020-02-17 08:40:22,537 INFO [org.geoserver] - Loaded feature type 'stations_clustered', enabled
2020-02-17 08:40:22,538 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 08:40:22,784 INFO [org.geoserver] - Loaded layer 'stations_clustered'
2020-02-17 08:40:22,786 INFO [org.geoserver] - Loaded feature type 'world', enabled
2020-02-17 08:40:22,787 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 08:40:23,000 INFO [org.geoserver] - Loaded layer 'world'
2020-02-17 08:40:23,003 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-02-17 08:40:23,004 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 08:40:23,278 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-02-17 08:40:23,281 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert_centroid', enabled
2020-02-17 08:40:23,281 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 08:40:23,534 INFO [org.geoserver] - Loaded layer 'flood_warning_alert_centroid'
2020-02-17 08:40:23,545 INFO [org.geoserver] - Loaded layer group 'england_world'
2020-02-17 08:40:23,717 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-02-17 08:40:23,731 INFO [org.geoserver] - Loaded service 'WFSInfoImpl-1db6c092:170524e3baf:-8000', enabled
2020-02-17 08:40:23,735 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-02-17 08:40:23,752 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-02-17 08:40:23,768 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-17 08:40:23,784 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-17 08:40:23,784 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-17 08:40:23,784 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-17 08:40:23,829 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-17 08:40:23,829 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-02-17 08:40:23,829 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-02-17 08:40:23,829 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-17 08:40:23,978 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-02-17 08:40:23,978 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-02-17 08:40:23,979 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-02-17 08:40:23,986 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-02-17 08:40:23,986 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-02-17 08:40:23,986 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-02-17 08:40:23,986 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-02-17 08:40:23,986 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-02-17 08:40:23,996 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-17 08:40:23,996 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-02-17 08:40:23,996 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-17 08:40:24,031 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-02-17 08:40:24,133 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-02-17 08:40:24,134 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-02-17 08:40:24,145 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-02-17 08:40:25,069 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-02-17 08:40:25,069 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-02-17 08:40:25,070 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-02-17 08:40:25,178 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-17 08:40:25,190 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-17 08:40:25,197 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-17 08:40:25,199 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-02-17 08:40:25,199 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-02-17 08:40:25,201 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-02-17 08:40:25,213 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-02-17 08:40:25,398 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-02-17 08:40:25,398 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-02-17 08:40:25,589 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-02-17 08:40:25,590 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-02-17 08:40:25,590 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-02-17 08:40:27,924 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-02-17 08:40:27,950 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-02-17 08:40:27,958 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-02-17 08:40:27,960 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-02-17 08:40:28,015 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-02-17 08:40:28,030 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-02-17 08:40:28,031 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-02-17 08:40:28,060 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-17 08:40:28,352 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-02-17 08:40:28,353 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-02-17 08:40:28,407 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-02-17 08:40:28,407 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-02-17 08:40:28,579 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-02-17 08:40:28,581 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-02-17 08:40:28,685 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-02-17 08:40:28,685 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-02-17 08:40:30,254 INFO [geoserver.security] - Strong cryptography is available
2020-02-17 08:40:33,523 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 08:40:34,040 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@61a35fca (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-17 08:40:34,060 INFO [wfs.json] - about to encode JSON
2020-02-17 08:46:00,014 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 08:46:00,207 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@70b7be7e (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-17 08:46:00,210 INFO [wfs.json] - about to encode JSON
2020-02-17 09:01:00,006 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:01:00,243 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1ce119ea (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-17 09:01:00,244 INFO [wfs.json] - about to encode JSON
2020-02-17 09:16:00,010 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:16:00,233 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@26a0eb1a (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-17 09:16:00,234 INFO [wfs.json] - about to encode JSON
2020-02-17 09:31:00,010 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:31:00,220 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5ab164eb (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-17 09:31:00,221 INFO [wfs.json] - about to encode JSON
2020-02-17 09:46:00,010 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:46:00,216 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7513a58b (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-17 09:46:00,218 INFO [wfs.json] - about to encode JSON
2020-02-17 09:48:53,343 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:48:53,610 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@40c76c43 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.00423504031593 -2.842459556583961, 52.00423504031593 -2.604831443416039, 52.10180785828945 -2.604831443416039, 52.10180785828945 -2.842459556583961, 52.00423504031593 -2.842459556583961)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.00423504031593 -2.842459556583961, 52.00423504031593 -2.604831443416039, 52.10180785828945 -2.604831443416039, 52.10180785828945 -2.842459556583961, 52.00423504031593 -2.842459556583961)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.00423504031593 -2.842459556583961, 52.00423504031593 -2.604831443416039, 52.10180785828945 -2.604831443416039, 52.10180785828945 -2.842459556583961, 52.00423504031593 -2.842459556583961)) ]
2020-02-17 09:48:53,612 INFO [wfs.json] - about to encode JSON
2020-02-17 09:48:58,168 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:48:58,352 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5985ec59 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((51.883646792976975 -3.156405730141781, 51.883646792976975 -2.2841045749649624, 52.241743740218226 -2.2841045749649624, 52.241743740218226 -3.156405730141781, 51.883646792976975 -3.156405730141781)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((51.883646792976975 -3.156405730141781, 51.883646792976975 -2.2841045749649624, 52.241743740218226 -2.2841045749649624, 52.241743740218226 -3.156405730141781, 51.883646792976975 -3.156405730141781)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((51.883646792976975 -3.156405730141781, 51.883646792976975 -2.2841045749649624, 52.241743740218226 -2.2841045749649624, 52.241743740218226 -3.156405730141781, 51.883646792976975 -3.156405730141781)) ]
2020-02-17 09:48:58,353 INFO [wfs.json] - about to encode JSON
2020-02-17 09:48:59,355 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:48:59,849 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@213488ff (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((51.71680235569025 -3.588362552176455, 51.71680235569025 -1.8437602418228183, 52.43278720948089 -1.8437602418228183, 52.43278720948089 -3.588362552176455, 51.71680235569025 -3.588362552176455)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((51.71680235569025 -3.588362552176455, 51.71680235569025 -1.8437602418228183, 52.43278720948089 -1.8437602418228183, 52.43278720948089 -3.588362552176455, 51.71680235569025 -3.588362552176455)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((51.71680235569025 -3.588362552176455, 51.71680235569025 -1.8437602418228183, 52.43278720948089 -1.8437602418228183, 52.43278720948089 -3.588362552176455, 51.71680235569025 -3.588362552176455)) ]
2020-02-17 09:48:59,851 INFO [wfs.json] - about to encode JSON
2020-02-17 09:50:04,140 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:50:04,324 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@fb9b2f3 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((51.63862684276634 -2.915302396619188, 51.63862684276634 -1.1707000862655506, 52.35585483833097 -1.1707000862655506, 52.35585483833097 -2.915302396619188, 51.63862684276634 -2.915302396619188)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((51.63862684276634 -2.915302396619188, 51.63862684276634 -1.1707000862655506, 52.35585483833097 -1.1707000862655506, 52.35585483833097 -2.915302396619188, 51.63862684276634 -2.915302396619188)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((51.63862684276634 -2.915302396619188, 51.63862684276634 -1.1707000862655506, 52.35585483833097 -1.1707000862655506, 52.35585483833097 -2.915302396619188, 51.63862684276634 -2.915302396619188)) ]
2020-02-17 09:50:04,326 INFO [wfs.json] - about to encode JSON
2020-02-17 09:50:25,385 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:50:25,685 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2bce7b11 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.99837897963485 -1.0975369552524552, 53.99837897963485 0.6470653551011821, 54.67751871772566 0.6470653551011821, 54.67751871772566 -1.0975369552524552, 53.99837897963485 -1.0975369552524552)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.99837897963485 -1.0975369552524552, 53.99837897963485 0.6470653551011821, 54.67751871772566 0.6470653551011821, 54.67751871772566 -1.0975369552524552, 53.99837897963485 -1.0975369552524552)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.99837897963485 -1.0975369552524552, 53.99837897963485 0.6470653551011821, 54.67751871772566 0.6470653551011821, 54.67751871772566 -1.0975369552524552, 53.99837897963485 -1.0975369552524552)) ]
2020-02-17 09:50:25,687 INFO [wfs.json] - about to encode JSON
2020-02-17 09:55:14,404 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:55:14,902 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@9866325 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.03816122712766 -3.354499760123627, 53.03816122712766 -1.1427932398763736, 53.91703971865894 -1.1427932398763736, 53.91703971865894 -3.354499760123627, 53.03816122712766 -3.354499760123627)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.03816122712766 -3.354499760123627, 53.03816122712766 -1.1427932398763736, 53.91703971865894 -1.1427932398763736, 53.91703971865894 -3.354499760123627, 53.03816122712766 -3.354499760123627)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.03816122712766 -3.354499760123627, 53.03816122712766 -1.1427932398763736, 53.91703971865894 -1.1427932398763736, 53.91703971865894 -3.354499760123627, 53.03816122712766 -3.354499760123627)) ]
2020-02-17 09:55:14,904 INFO [wfs.json] - about to encode JSON
2020-02-17 09:57:49,652 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:57:49,833 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2c0af71a (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.31311903948827 -1.067873222968569, 53.31311903948827 -0.514946592906756, 53.53313004968345 -0.514946592906756, 53.53313004968345 -1.067873222968569, 53.31311903948827 -1.067873222968569)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.31311903948827 -1.067873222968569, 53.31311903948827 -0.514946592906756, 53.53313004968345 -0.514946592906756, 53.53313004968345 -1.067873222968569, 53.31311903948827 -1.067873222968569)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.31311903948827 -1.067873222968569, 53.31311903948827 -0.514946592906756, 53.53313004968345 -0.514946592906756, 53.53313004968345 -1.067873222968569, 53.31311903948827 -1.067873222968569)) ]
2020-02-17 09:57:49,834 INFO [wfs.json] - about to encode JSON
2020-02-17 09:58:03,162 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:58:03,336 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@491a80c (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.284828239335184 -0.728484690128032, 53.284828239335184 -0.1755580600662191, 53.50498524490163 -0.1755580600662191, 53.50498524490163 -0.728484690128032, 53.284828239335184 -0.728484690128032)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.284828239335184 -0.728484690128032, 53.284828239335184 -0.1755580600662191, 53.50498524490163 -0.1755580600662191, 53.50498524490163 -0.728484690128032, 53.284828239335184 -0.728484690128032)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.284828239335184 -0.728484690128032, 53.284828239335184 -0.1755580600662191, 53.50498524490163 -0.1755580600662191, 53.50498524490163 -0.728484690128032, 53.284828239335184 -0.728484690128032)) ]
2020-02-17 09:58:03,337 INFO [wfs.json] - about to encode JSON
2020-02-17 09:58:15,225 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:58:15,403 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@9cb7a8e (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.29154911092962 -0.3889532255522758, 53.29154911092962 0.1639734045095371, 53.511671438094794 0.1639734045095371, 53.511671438094794 -0.3889532255522758, 53.29154911092962 -0.3889532255522758)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.29154911092962 -0.3889532255522758, 53.29154911092962 0.1639734045095371, 53.511671438094794 0.1639734045095371, 53.511671438094794 -0.3889532255522758, 53.29154911092962 -0.3889532255522758)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.29154911092962 -0.3889532255522758, 53.29154911092962 0.1639734045095371, 53.511671438094794 0.1639734045095371, 53.511671438094794 -0.3889532255522758, 53.29154911092962 -0.3889532255522758)) ]
2020-02-17 09:58:15,405 INFO [wfs.json] - about to encode JSON
2020-02-17 09:58:16,777 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:58:16,957 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2fd9261e (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.318258518910596 -0.1031920907895428, 53.318258518910596 0.4497345392722701, 53.53824300098162 0.4497345392722701, 53.53824300098162 -0.1031920907895428, 53.318258518910596 -0.1031920907895428)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.318258518910596 -0.1031920907895428, 53.318258518910596 0.4497345392722701, 53.53824300098162 0.4497345392722701, 53.53824300098162 -0.1031920907895428, 53.318258518910596 -0.1031920907895428)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.318258518910596 -0.1031920907895428, 53.318258518910596 0.4497345392722701, 53.53824300098162 0.4497345392722701, 53.53824300098162 -0.1031920907895428, 53.318258518910596 -0.1031920907895428)) ]
2020-02-17 09:58:16,962 INFO [wfs.json] - about to encode JSON
2020-02-17 09:58:20,593 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:58:20,774 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@70ce97ba (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.235780004157306 -0.3007924730071458, 53.235780004157306 0.80506078711648, 53.675461872635054 0.80506078711648, 53.675461872635054 -0.3007924730071458, 53.235780004157306 -0.3007924730071458)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.235780004157306 -0.3007924730071458, 53.235780004157306 0.80506078711648, 53.675461872635054 0.80506078711648, 53.675461872635054 -0.3007924730071458, 53.235780004157306 -0.3007924730071458)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.235780004157306 -0.3007924730071458, 53.235780004157306 0.80506078711648, 53.675461872635054 0.80506078711648, 53.675461872635054 -0.3007924730071458, 53.235780004157306 -0.3007924730071458)) ]
2020-02-17 09:58:20,776 INFO [wfs.json] - about to encode JSON
2020-02-17 09:58:25,596 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 09:58:25,773 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6ebe173a (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.06963529988144 -0.6971747046006033, 53.06963529988144 1.5145318156466485, 53.947868411383325 1.5145318156466485, 53.947868411383325 -0.6971747046006033, 53.06963529988144 -0.6971747046006033)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.06963529988144 -0.6971747046006033, 53.06963529988144 1.5145318156466485, 53.947868411383325 1.5145318156466485, 53.947868411383325 -0.6971747046006033, 53.06963529988144 -0.6971747046006033)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.06963529988144 -0.6971747046006033, 53.06963529988144 1.5145318156466485, 53.947868411383325 1.5145318156466485, 53.947868411383325 -0.6971747046006033, 53.06963529988144 -0.6971747046006033)) ]
2020-02-17 09:58:25,775 INFO [wfs.json] - about to encode JSON
2020-02-17 10:01:00,006 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 10:01:00,272 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1904495f (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-17 10:01:00,273 INFO [wfs.json] - about to encode JSON
2020-02-17 10:16:00,010 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 10:16:00,221 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6bb4a5e5 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-17 10:16:00,224 INFO [wfs.json] - about to encode JSON
2020-02-17 10:24:58,707 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 10:24:58,917 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@58c40cd4 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.302823285656785 -2.464117637166285, 52.302823285656785 -2.433511362833715, 52.315318431293264 -2.433511362833715, 52.315318431293264 -2.464117637166285, 52.302823285656785 -2.464117637166285)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.302823285656785 -2.464117637166285, 52.302823285656785 -2.433511362833715, 52.315318431293264 -2.433511362833715, 52.315318431293264 -2.464117637166285, 52.302823285656785 -2.464117637166285)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.302823285656785 -2.464117637166285, 52.302823285656785 -2.433511362833715, 52.315318431293264 -2.433511362833715, 52.315318431293264 -2.464117637166285, 52.302823285656785 -2.464117637166285)) ]
2020-02-17 10:24:58,918 INFO [wfs.json] - about to encode JSON
2020-02-17 10:43:58,101 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 10:43:58,300 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7007bf39 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-17 10:43:58,301 INFO [wfs.json] - about to encode JSON
2020-02-17 10:44:53,907 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 10:44:54,089 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4cad6845 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.2970400641874 -2.375236719780958, 52.2970400641874 -0.1454112363248825, 53.19828890858531 -0.1454112363248825, 53.19828890858531 -2.375236719780958, 52.2970400641874 -2.375236719780958)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.2970400641874 -2.375236719780958, 52.2970400641874 -0.1454112363248825, 53.19828890858531 -0.1454112363248825, 53.19828890858531 -2.375236719780958, 52.2970400641874 -2.375236719780958)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.2970400641874 -2.375236719780958, 52.2970400641874 -0.1454112363248825, 53.19828890858531 -0.1454112363248825, 53.19828890858531 -2.375236719780958, 52.2970400641874 -2.375236719780958)) ]
2020-02-17 10:44:54,092 INFO [wfs.json] - about to encode JSON
2020-02-17 10:45:27,747 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-02-17 10:45:27,747 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-02-17 10:45:27,750 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-02-17 10:45:27,750 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-02-17 10:45:27,750 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-02-17 10:45:27,750 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-02-17 10:45:27,750 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-02-17 10:45:27,751 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-02-17 10:45:27,751 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-02-17 10:45:27,751 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-02-17 10:45:27,751 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-02-17 10:45:27,767 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-02-17 12:20:22,471 INFO [org.geoserver] - Loaded style 'point'
2020-02-17 12:20:22,473 INFO [org.geoserver] - Loaded style 'generic'
2020-02-17 12:20:22,474 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-02-17 12:20:22,474 INFO [org.geoserver] - Loaded style 'raster'
2020-02-17 12:20:22,475 INFO [org.geoserver] - Loaded style 'line'
2020-02-17 12:20:22,476 INFO [org.geoserver] - Loaded style 'polygon'
2020-02-17 12:20:22,477 INFO [org.geoserver] - Loaded default workspace flood
2020-02-17 12:20:22,480 INFO [org.geoserver] - Loaded workspace 'flood'
2020-02-17 12:20:22,483 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-02-17 12:20:22,484 INFO [org.geoserver] - Loaded style 'world'
2020-02-17 12:20:22,484 INFO [org.geoserver] - Loaded style 'stations'
2020-02-17 12:20:22,485 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-02-17 12:20:22,486 INFO [org.geoserver] - Loaded style 'clustered'
2020-02-17 12:20:22,487 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-02-17 12:20:22,487 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-02-17 12:20:22,488 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-02-17 12:20:22,488 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-02-17 12:20:22,490 INFO [org.geoserver] - Loaded style 'HFM'
2020-02-17 12:20:22,490 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-02-17 12:20:22,491 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-02-17 12:20:22,492 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-02-17 12:20:22,493 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-02-17 12:20:22,494 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-02-17 12:20:22,494 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-02-17 12:20:22,757 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-02-17 12:20:22,759 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-02-17 12:20:24,069 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-02-17 12:20:24,074 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 12:20:24,558 INFO [org.geoserver] - Loaded layer 'stations'
2020-02-17 12:20:24,562 INFO [org.geoserver] - Loaded feature type 'england_010k', enabled
2020-02-17 12:20:24,563 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 12:20:25,146 INFO [org.geoserver] - Loaded layer 'england_010k'
2020-02-17 12:20:25,149 INFO [org.geoserver] - Loaded feature type 'stations_clustered', enabled
2020-02-17 12:20:25,150 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 12:20:25,408 INFO [org.geoserver] - Loaded layer 'stations_clustered'
2020-02-17 12:20:25,413 INFO [org.geoserver] - Loaded feature type 'world', enabled
2020-02-17 12:20:25,414 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 12:20:25,624 INFO [org.geoserver] - Loaded layer 'world'
2020-02-17 12:20:25,631 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-02-17 12:20:25,631 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 12:20:25,892 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-02-17 12:20:25,894 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert_centroid', enabled
2020-02-17 12:20:25,894 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 12:20:26,155 INFO [org.geoserver] - Loaded layer 'flood_warning_alert_centroid'
2020-02-17 12:20:26,165 INFO [org.geoserver] - Loaded layer group 'england_world'
2020-02-17 12:20:26,309 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-02-17 12:20:26,321 INFO [org.geoserver] - Loaded service 'WFSInfoImpl--2ae4aa94:1705317b04e:-8000', enabled
2020-02-17 12:20:26,325 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-02-17 12:20:26,340 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-02-17 12:20:26,354 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-17 12:20:26,370 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-17 12:20:26,370 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-17 12:20:26,370 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-17 12:20:26,412 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-17 12:20:26,412 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-02-17 12:20:26,412 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-02-17 12:20:26,412 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-17 12:20:26,526 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-02-17 12:20:26,527 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-02-17 12:20:26,528 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-02-17 12:20:26,537 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-02-17 12:20:26,537 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-02-17 12:20:26,537 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-02-17 12:20:26,537 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-02-17 12:20:26,537 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-02-17 12:20:26,545 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-17 12:20:26,545 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-02-17 12:20:26,546 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-17 12:20:26,575 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-02-17 12:20:26,647 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-02-17 12:20:26,647 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-02-17 12:20:26,655 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-02-17 12:20:27,544 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-02-17 12:20:27,544 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-02-17 12:20:27,544 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-02-17 12:20:27,653 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-17 12:20:27,666 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-17 12:20:27,671 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-17 12:20:27,673 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-02-17 12:20:27,673 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-02-17 12:20:27,675 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-02-17 12:20:27,691 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-02-17 12:20:27,864 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-02-17 12:20:27,864 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-02-17 12:20:28,054 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-02-17 12:20:28,054 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-02-17 12:20:28,054 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-02-17 12:20:30,513 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-02-17 12:20:30,545 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-02-17 12:20:30,552 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-02-17 12:20:30,553 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-02-17 12:20:30,605 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-02-17 12:20:30,617 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-02-17 12:20:30,617 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-02-17 12:20:30,649 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-17 12:20:30,993 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-02-17 12:20:30,993 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-02-17 12:20:31,047 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-02-17 12:20:31,047 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-02-17 12:20:31,209 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-02-17 12:20:31,213 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-02-17 12:20:31,316 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-02-17 12:20:31,316 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-02-17 12:20:33,314 INFO [geoserver.security] - Strong cryptography is available
2020-02-17 12:20:33,314 INFO [geoserver.security] - Strong cryptography is available
2020-02-17 12:21:18,074 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-17 12:21:18,075 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-17 12:29:48,605 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-17 12:29:48,605 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-17 12:29:52,451 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 12:29:53,066 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 50
    outputFormat = application/json
    resultType = results
2020-02-17 12:29:53,083 INFO [wfs.json] - about to encode JSON
2020-02-17 12:31:12,374 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 12:31:13,508 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@668f78a3 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-17 12:31:13,510 INFO [wfs.json] - about to encode JSON
2020-02-17 12:31:44,381 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 12:31:44,480 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-02-17 12:31:44,482 INFO [wfs.json] - about to encode JSON
2020-02-17 12:31:55,217 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 12:31:55,412 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7f4dffb9 (handle: null) (abstractProjectionClause: [name, river, status, atrisk, type, is_ffoi, is_ffoi_at_risk, ffoi_max, ffoi_date, value, value_date, percentile_95, percentile_5], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}stations]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = nameabstractProjectionClause[0] = riverabstractProjectionClause[0] = statusabstractProjectionClause[0] = atriskabstractProjectionClause[0] = typeabstractProjectionClause[0] = is_ffoiabstractProjectionClause[0] = is_ffoi_at_riskabstractProjectionClause[0] = ffoi_maxabstractProjectionClause[0] = ffoi_dateabstractProjectionClause[0] = valueabstractProjectionClause[0] = value_dateabstractProjectionClause[0] = percentile_95abstractProjectionClause[0] = percentile_5
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}stations
        propertyNames[0] = namepropertyNames[0] = riverpropertyNames[0] = statuspropertyNames[0] = atriskpropertyNames[0] = typepropertyNames[0] = is_ffoipropertyNames[0] = is_ffoi_at_riskpropertyNames[0] = ffoi_maxpropertyNames[0] = ffoi_datepropertyNames[0] = valuepropertyNames[0] = value_datepropertyNames[0] = percentile_95propertyNames[0] = percentile_5
2020-02-17 12:31:55,415 INFO [wfs.json] - about to encode JSON
2020-02-17 12:32:02,949 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 12:32:03,048 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-02-17 12:32:03,050 INFO [wfs.json] - about to encode JSON
2020-02-17 12:34:42,246 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 12:34:42,343 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 50
    outputFormat = application/json
    resultType = results
2020-02-17 12:34:42,344 INFO [wfs.json] - about to encode JSON
2020-02-17 12:34:49,300 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 12:34:49,395 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 12:34:49,398 INFO [wfs.json] - about to encode JSON
2020-02-17 12:34:55,133 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 12:34:55,231 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 12:34:55,233 INFO [wfs.json] - about to encode JSON
2020-02-17 12:48:55,270 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-17 12:48:55,270 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-17 12:48:57,213 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:48:57,229 ERROR [geoserver.ows] - 
java.io.FileNotFoundException: /home/tedd/lfw/geoserver/data/styles/unhighlight_fwa.sld (Permission denied)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at org.geotools.styling.SLDParser.setInput(SLDParser.java:255)
	at org.geotools.styling.SLDParser.<init>(SLDParser.java:192)
	at org.geoserver.catalog.SLDHandler.createSld10Parser(SLDHandler.java:190)
	at org.geoserver.catalog.SLDHandler.parse10(SLDHandler.java:156)
	at org.geoserver.catalog.SLDHandler.parse(SLDHandler.java:141)
	at org.geoserver.config.GeoServerDataDirectory.parsedStyle(GeoServerDataDirectory.java:1235)
	at org.geoserver.catalog.ResourcePool.getStyle(ResourcePool.java:1838)
	at org.geoserver.catalog.impl.StyleInfoImpl.getStyle(StyleInfoImpl.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:147)
	at com.sun.proxy.$Proxy9.getStyle(Unknown Source)
	at org.geoserver.wms.map.GetMapKvpRequestReader.getDefaultStyle(GetMapKvpRequestReader.java:586)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:413)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:85)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1488)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:674)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-02-17 12:49:24,347 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-02-17 12:49:24,347 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-02-17 12:49:24,350 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-02-17 12:49:24,350 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-02-17 12:49:24,350 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-02-17 12:49:24,350 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-02-17 12:49:24,350 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-02-17 12:49:24,351 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-02-17 12:49:24,351 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-02-17 12:49:24,351 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-02-17 12:49:24,351 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-02-17 12:49:24,360 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-02-17 12:49:31,200 INFO [org.geoserver] - Loaded style 'point'
2020-02-17 12:49:31,202 INFO [org.geoserver] - Loaded style 'generic'
2020-02-17 12:49:31,203 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-02-17 12:49:31,203 INFO [org.geoserver] - Loaded style 'raster'
2020-02-17 12:49:31,204 INFO [org.geoserver] - Loaded style 'line'
2020-02-17 12:49:31,205 INFO [org.geoserver] - Loaded style 'polygon'
2020-02-17 12:49:31,205 INFO [org.geoserver] - Loaded default workspace flood
2020-02-17 12:49:31,208 INFO [org.geoserver] - Loaded workspace 'flood'
2020-02-17 12:49:31,213 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-02-17 12:49:31,214 INFO [org.geoserver] - Loaded style 'world'
2020-02-17 12:49:31,215 INFO [org.geoserver] - Loaded style 'stations'
2020-02-17 12:49:31,216 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-02-17 12:49:31,217 INFO [org.geoserver] - Loaded style 'clustered'
2020-02-17 12:49:31,218 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-02-17 12:49:31,219 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-02-17 12:49:31,219 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-02-17 12:49:31,220 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-02-17 12:49:31,221 INFO [org.geoserver] - Loaded style 'HFM'
2020-02-17 12:49:31,221 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-02-17 12:49:31,222 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-02-17 12:49:31,223 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-02-17 12:49:31,224 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-02-17 12:49:31,224 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-02-17 12:49:31,225 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-02-17 12:49:31,491 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-02-17 12:49:31,493 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-02-17 12:49:32,780 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-02-17 12:49:32,786 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 12:49:33,262 INFO [org.geoserver] - Loaded layer 'stations'
2020-02-17 12:49:33,266 INFO [org.geoserver] - Loaded feature type 'england_010k', enabled
2020-02-17 12:49:33,266 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 12:49:33,851 INFO [org.geoserver] - Loaded layer 'england_010k'
2020-02-17 12:49:33,864 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-02-17 12:49:33,865 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 12:49:34,176 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-02-17 12:49:34,310 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-02-17 12:49:34,322 INFO [org.geoserver] - Loaded service 'WFSInfoImpl-9be857d:17053325c6c:-8000', enabled
2020-02-17 12:49:34,326 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-02-17 12:49:34,338 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-02-17 12:49:34,347 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-17 12:49:34,358 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-17 12:49:34,358 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-17 12:49:34,358 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-17 12:49:34,396 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-17 12:49:34,397 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-02-17 12:49:34,397 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-02-17 12:49:34,397 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-17 12:49:34,488 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-02-17 12:49:34,488 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-02-17 12:49:34,489 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-02-17 12:49:34,496 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-02-17 12:49:34,496 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-02-17 12:49:34,496 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-02-17 12:49:34,496 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-02-17 12:49:34,496 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-02-17 12:49:34,502 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-17 12:49:34,502 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-02-17 12:49:34,503 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-17 12:49:34,539 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-02-17 12:49:34,610 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-02-17 12:49:34,611 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-02-17 12:49:34,621 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-02-17 12:49:35,500 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-02-17 12:49:35,501 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-02-17 12:49:35,501 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-02-17 12:49:35,614 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-17 12:49:35,627 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-17 12:49:35,633 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-17 12:49:35,635 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-02-17 12:49:35,636 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-02-17 12:49:35,637 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-02-17 12:49:35,648 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-02-17 12:49:35,820 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-02-17 12:49:35,820 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-02-17 12:49:36,068 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-02-17 12:49:36,068 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-02-17 12:49:36,068 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-02-17 12:49:38,401 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-02-17 12:49:38,426 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-02-17 12:49:38,435 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-02-17 12:49:38,436 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-02-17 12:49:38,484 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-02-17 12:49:38,493 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-02-17 12:49:38,493 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-02-17 12:49:38,514 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-17 12:49:38,802 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-02-17 12:49:38,802 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-02-17 12:49:38,859 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-02-17 12:49:38,859 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-02-17 12:49:39,038 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-02-17 12:49:39,043 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-02-17 12:49:39,247 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-02-17 12:49:39,247 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-02-17 12:50:34,602 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:50:34,983 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-5.71707411229573 : 1.14454079449205, 50.0498548422415 : 55.0043102697652]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = application/openlayers
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-5.71707411229573,50.0498548422415,1.14454079449205,55.0043102697652, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.0
	Request = GetMap
2020-02-17 12:50:35,175 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:50:36,590 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-6.50390625 : 1.93359375, 49.482421875 : 55.56884765625]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-6.50390625,49.482421875,1.93359375,55.56884765625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:50:38,734 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:50:39,813 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-4.383544921875 : -0.164794921875, 50.3448486328125 : 53.3880615234375]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-4.383544921875,50.3448486328125,-0.164794921875,53.3880615234375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:50:41,001 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:50:41,925 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-4.1693115234375 : 0.0494384765625, 51.163330078125 : 54.20654296875]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-4.1693115234375,51.163330078125,0.0494384765625,54.20654296875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:50:43,208 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:50:44,009 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-4.1253662109375 : 0.0933837890625, 51.70166015625 : 54.744873046875]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-4.1253662109375,51.70166015625,0.0933837890625,54.744873046875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:50:45,189 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:50:45,675 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.93359375 : -0.87890625, 53.263092041015625 : 54.023895263671875]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.93359375,53.263092041015625,-0.87890625,54.023895263671875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:50:47,038 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:50:48,371 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.56829833984375 : -1.04095458984375, 53.52333068847656 : 53.90373229980469]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.56829833984375,53.52333068847656,-1.04095458984375,53.90373229980469, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:50:49,456 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:50:49,836 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.3846206665039062 : -1.1209487915039062, 53.641090393066406 : 53.83129119873047]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.3846206665039062,53.641090393066406,-1.1209487915039062,53.83129119873047, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:50:50,857 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:50:51,310 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.2919235229492188 : -1.1600875854492188, 53.70563507080078 : 53.80073547363281]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.2919235229492188,53.70563507080078,-1.1600875854492188,53.80073547363281, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:50:53,223 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:50:53,665 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.940460205078125 : -0.885772705078125, 53.25347900390625 : 54.0142822265625]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.940460205078125,53.25347900390625,-0.885772705078125,54.0142822265625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:50:58,228 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:50:58,637 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.564178466796875 : -1.036834716796875, 53.52058410644531 : 53.90098571777344]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.564178466796875,53.52058410644531,-1.036834716796875,53.90098571777344, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:50:59,284 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:50:59,677 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.5291595458984375 : -1.0018157958984375, 53.647613525390625 : 54.02801513671875]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.5291595458984375,53.647613525390625,-1.0018157958984375,54.02801513671875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:51:00,595 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:51:01,102 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.40350341796875 : -1.13983154296875, 53.76091003417969 : 53.95111083984375]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.40350341796875,53.76091003417969,-1.13983154296875,53.95111083984375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:51:01,815 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:51:02,201 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.4416122436523438 : -1.1779403686523438, 53.774986267089844 : 53.965187072753906]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.4416122436523438,53.774986267089844,-1.1779403686523438,53.965187072753906, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:51:12,385 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:51:12,835 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.5346527099609375 : -1.0073089599609375, 53.6737060546875 : 54.054107666015625]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.5346527099609375,53.6737060546875,-1.0073089599609375,54.054107666015625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:51:13,553 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:51:13,976 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.72210693359375 : -0.66741943359375, 53.471832275390625 : 54.232635498046875]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.72210693359375,53.471832275390625,-0.66741943359375,54.232635498046875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:51:14,502 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:51:15,003 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-2.09564208984375 : 0.01373291015625, 53.06671142578125 : 54.58831787109375]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-2.09564208984375,53.06671142578125,0.01373291015625,54.58831787109375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:51:15,824 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:51:16,387 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-2.5213623046875 : -0.4119873046875, 52.73162841796875 : 54.25323486328125]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-2.5213623046875,52.73162841796875,-0.4119873046875,54.25323486328125, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:51:16,637 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:51:17,181 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-2.88665771484375 : -0.77728271484375, 52.40478515625 : 53.9263916015625]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-2.88665771484375,52.40478515625,-0.77728271484375,53.9263916015625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:51:18,639 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 12:51:19,214 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 554
	Tiled = false
	Palette = null
	FeatureVersion = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-2.713623046875 : -0.604248046875, 52.7178955078125 : 54.239501953125]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-2.713623046875,52.7178955078125,-0.604248046875,54.239501953125, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=554, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-02-17 12:59:08,630 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 12:59:08,960 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
    maxFeatures = 50
    outputFormat = application/json
    resultType = results
2020-02-17 12:59:08,962 INFO [wfs.json] - about to encode JSON
2020-02-17 13:00:17,591 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:00:17,898 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
    maxFeatures = 50
    outputFormat = application/json
    resultType = results
2020-02-17 13:00:17,899 INFO [wfs.json] - about to encode JSON
2020-02-17 13:00:30,479 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:00:30,575 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
    maxFeatures = 1
    outputFormat = application/json
    resultType = results
2020-02-17 13:00:30,576 INFO [wfs.json] - about to encode JSON
2020-02-17 13:00:39,672 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:00:39,767 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
    maxFeatures = 1
    outputFormat = application/json
    resultType = results
2020-02-17 13:00:39,768 INFO [wfs.json] - about to encode JSON
2020-02-17 13:01:36,167 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:01:36,266 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 13:01:36,267 INFO [wfs.json] - about to encode JSON
2020-02-17 13:01:59,146 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:01:59,450 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@43f9fc1e (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.457738745535664 -0.3240831500633522, 52.457738745535664 0.7908295916646857, 52.90904315984599 0.7908295916646857, 52.90904315984599 -0.3240831500633522, 52.457738745535664 -0.3240831500633522)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.457738745535664 -0.3240831500633522, 52.457738745535664 0.7908295916646857, 52.90904315984599 0.7908295916646857, 52.90904315984599 -0.3240831500633522, 52.457738745535664 -0.3240831500633522)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.457738745535664 -0.3240831500633522, 52.457738745535664 0.7908295916646857, 52.90904315984599 0.7908295916646857, 52.90904315984599 -0.3240831500633522, 52.457738745535664 -0.3240831500633522)) ]
2020-02-17 13:01:59,452 INFO [wfs.json] - about to encode JSON
2020-02-17 13:02:14,121 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:02:14,327 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@27a92027 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((53.835898450693946 -1.4020286943401923, 53.835898450693946 -0.7413213056598077, 54.09542885386881 -0.7413213056598077, 54.09542885386881 -1.4020286943401923, 53.835898450693946 -1.4020286943401923)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((53.835898450693946 -1.4020286943401923, 53.835898450693946 -0.7413213056598077, 54.09542885386881 -0.7413213056598077, 54.09542885386881 -1.4020286943401923, 53.835898450693946 -1.4020286943401923)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((53.835898450693946 -1.4020286943401923, 53.835898450693946 -0.7413213056598077, 54.09542885386881 -0.7413213056598077, 54.09542885386881 -1.4020286943401923, 53.835898450693946 -1.4020286943401923)) ]
2020-02-17 13:02:14,328 INFO [wfs.json] - about to encode JSON
2020-02-17 13:03:23,089 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:03:23,417 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
    maxFeatures = 1
    outputFormat = application/json
    resultType = results
2020-02-17 13:03:23,419 INFO [wfs.json] - about to encode JSON
2020-02-17 13:03:43,134 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-17 13:03:43,134 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-02-17 13:03:46,249 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:03:46,347 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
    maxFeatures = 1
    outputFormat = application/json
    resultType = results
2020-02-17 13:03:46,349 INFO [wfs.json] - about to encode JSON
2020-02-17 13:14:22,766 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:14:22,861 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 13:14:22,861 INFO [wfs.json] - about to encode JSON
2020-02-17 13:14:45,741 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:14:46,144 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4f8c55ad (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-210177.65162164698 6919450.340657549, -210177.65162164698 7002323.950892657, -86066.13293354929 7002323.950892657, -86066.13293354929 6919450.340657549, -210177.65162164698 6919450.340657549)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-210177.65162164698 6919450.340657549, -210177.65162164698 7002323.950892657, -86066.13293354929 7002323.950892657, -86066.13293354929 6919450.340657549, -210177.65162164698 6919450.340657549)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-210177.65162164698 6919450.340657549, -210177.65162164698 7002323.950892657, -86066.13293354929 7002323.950892657, -86066.13293354929 6919450.340657549, -210177.65162164698 6919450.340657549)) ]
2020-02-17 13:14:46,146 INFO [wfs.json] - about to encode JSON
2020-02-17 13:15:04,989 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:15:05,165 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@63016fe3 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-180904.14919259906 6918334.835255453, -180904.14919259906 7003439.372544739, -115339.61366493294 7003439.372544739, -115339.61366493294 6918334.835255453, -180904.14919259906 6918334.835255453)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-180904.14919259906 6918334.835255453, -180904.14919259906 7003439.372544739, -115339.61366493294 7003439.372544739, -115339.61366493294 6918334.835255453, -180904.14919259906 6918334.835255453)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-180904.14919259906 6918334.835255453, -180904.14919259906 7003439.372544739, -115339.61366493294 7003439.372544739, -115339.61366493294 6918334.835255453, -180904.14919259906 6918334.835255453)) ]
2020-02-17 13:15:05,167 INFO [wfs.json] - about to encode JSON
2020-02-17 13:15:32,341 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:15:32,517 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@a2d4f1c (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-180904.14919259906 6918334.835255453, -180904.14919259906 7003439.372544739, -115339.61366493294 7003439.372544739, -115339.61366493294 6918334.835255453, -180904.14919259906 6918334.835255453)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-180904.14919259906 6918334.835255453, -180904.14919259906 7003439.372544739, -115339.61366493294 7003439.372544739, -115339.61366493294 6918334.835255453, -180904.14919259906 6918334.835255453)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-180904.14919259906 6918334.835255453, -180904.14919259906 7003439.372544739, -115339.61366493294 7003439.372544739, -115339.61366493294 6918334.835255453, -180904.14919259906 6918334.835255453)) ]
2020-02-17 13:15:32,518 INFO [wfs.json] - about to encode JSON
2020-02-17 13:16:00,011 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:16:00,107 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 13:16:00,108 INFO [wfs.json] - about to encode JSON
2020-02-17 13:16:08,984 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:16:09,171 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@47fd0898 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-180904.14919259906 6918334.835255453, -180904.14919259906 7003439.372544739, -115339.61366493294 7003439.372544739, -115339.61366493294 6918334.835255453, -180904.14919259906 6918334.835255453)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-180904.14919259906 6918334.835255453, -180904.14919259906 7003439.372544739, -115339.61366493294 7003439.372544739, -115339.61366493294 6918334.835255453, -180904.14919259906 6918334.835255453)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-180904.14919259906 6918334.835255453, -180904.14919259906 7003439.372544739, -115339.61366493294 7003439.372544739, -115339.61366493294 6918334.835255453, -180904.14919259906 6918334.835255453)) ]
2020-02-17 13:16:09,171 INFO [wfs.json] - about to encode JSON
2020-02-17 13:17:39,312 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:17:39,410 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 13:17:39,413 INFO [wfs.json] - about to encode JSON
2020-02-17 13:19:20,231 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:19:20,413 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@54c768a6 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-175133.581408388 6925124.334611677, -175133.581408388 7013545.921564255, -107013.59082012165 7013545.921564255, -107013.59082012165 6925124.334611677, -175133.581408388 6925124.334611677)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-175133.581408388 6925124.334611677, -175133.581408388 7013545.921564255, -107013.59082012165 7013545.921564255, -107013.59082012165 6925124.334611677, -175133.581408388 6925124.334611677)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-175133.581408388 6925124.334611677, -175133.581408388 7013545.921564255, -107013.59082012165 7013545.921564255, -107013.59082012165 6925124.334611677, -175133.581408388 6925124.334611677)) ]
2020-02-17 13:19:20,414 INFO [wfs.json] - about to encode JSON
2020-02-17 13:19:52,764 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:19:52,939 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@69a44d2b (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-176050.356002808 6923934.338420195, -176050.356002808 7014735.946553915, -106096.79709659019 7014735.946553915, -106096.79709659019 6923934.338420195, -176050.356002808 6923934.338420195)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-176050.356002808 6923934.338420195, -176050.356002808 7014735.946553915, -106096.79709659019 7014735.946553915, -106096.79709659019 6923934.338420195, -176050.356002808 6923934.338420195)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-176050.356002808 6923934.338420195, -176050.356002808 7014735.946553915, -106096.79709659019 7014735.946553915, -106096.79709659019 6923934.338420195, -176050.356002808 6923934.338420195)) ]
2020-02-17 13:19:52,941 INFO [wfs.json] - about to encode JSON
2020-02-17 13:20:45,018 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:20:45,121 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 13:20:45,122 INFO [wfs.json] - about to encode JSON
2020-02-17 13:23:02,470 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:23:02,662 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@35b3d02f (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.67285283267603 -1.5899442880215346, 52.67285283267603 -0.9446267119784659, 53.17782090697207 -0.9446267119784659, 53.17782090697207 -1.5899442880215346, 52.67285283267603 -1.5899442880215346)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.67285283267603 -1.5899442880215346, 52.67285283267603 -0.9446267119784659, 53.17782090697207 -0.9446267119784659, 53.17782090697207 -1.5899442880215346, 52.67285283267603 -1.5899442880215346)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.67285283267603 -1.5899442880215346, 52.67285283267603 -0.9446267119784659, 53.17782090697207 -0.9446267119784659, 53.17782090697207 -1.5899442880215346, 52.67285283267603 -1.5899442880215346)) ]
2020-02-17 13:23:02,665 INFO [wfs.json] - about to encode JSON
2020-02-17 13:23:35,535 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:23:35,716 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@ca23d2 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.667921137796014 -1.906689358656396, 52.667921137796014 -0.627881641343604, 53.182694613785 -0.627881641343604, 53.182694613785 -1.906689358656396, 52.667921137796014 -1.906689358656396)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.667921137796014 -1.906689358656396, 52.667921137796014 -0.627881641343604, 53.182694613785 -0.627881641343604, 53.182694613785 -1.906689358656396, 52.667921137796014 -1.906689358656396)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.667921137796014 -1.906689358656396, 52.667921137796014 -0.627881641343604, 53.182694613785 -0.627881641343604, 53.182694613785 -1.906689358656396, 52.667921137796014 -1.906689358656396)) ]
2020-02-17 13:23:35,718 INFO [wfs.json] - about to encode JSON
2020-02-17 13:23:49,652 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:23:49,830 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7891c097 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.667921137796014 -1.9066893586563967, 52.667921137796014 -0.6278816413436042, 53.182694613785 -0.6278816413436042, 53.182694613785 -1.9066893586563967, 52.667921137796014 -1.9066893586563967)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.667921137796014 -1.9066893586563967, 52.667921137796014 -0.6278816413436042, 53.182694613785 -0.6278816413436042, 53.182694613785 -1.9066893586563967, 52.667921137796014 -1.9066893586563967)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.667921137796014 -1.9066893586563967, 52.667921137796014 -0.6278816413436042, 53.182694613785 -0.6278816413436042, 53.182694613785 -1.9066893586563967, 52.667921137796014 -1.9066893586563967)) ]
2020-02-17 13:23:49,831 INFO [wfs.json] - about to encode JSON
2020-02-17 13:24:00,547 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:24:00,787 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@62d0eb0d (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.67950868655811 -1.5814872557200534, 52.67950868655811 -0.9530837442799464, 53.17124125793978 -0.9530837442799464, 53.17124125793978 -1.5814872557200534, 52.67950868655811 -1.5814872557200534)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.67950868655811 -1.5814872557200534, 52.67950868655811 -0.9530837442799464, 53.17124125793978 -0.9530837442799464, 53.17124125793978 -1.5814872557200534, 52.67950868655811 -1.5814872557200534)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.67950868655811 -1.5814872557200534, 52.67950868655811 -0.9530837442799464, 53.17124125793978 -0.9530837442799464, 53.17124125793978 -1.5814872557200534, 52.67950868655811 -1.5814872557200534)) ]
2020-02-17 13:24:00,788 INFO [wfs.json] - about to encode JSON
2020-02-17 13:24:05,056 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:24:05,654 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6cb52802 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.67950868655811 -1.5814872557200534, 52.67950868655811 -0.9530837442799464, 53.17124125793978 -0.9530837442799464, 53.17124125793978 -1.5814872557200534, 52.67950868655811 -1.5814872557200534)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.67950868655811 -1.5814872557200534, 52.67950868655811 -0.9530837442799464, 53.17124125793978 -0.9530837442799464, 53.17124125793978 -1.5814872557200534, 52.67950868655811 -1.5814872557200534)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.67950868655811 -1.5814872557200534, 52.67950868655811 -0.9530837442799464, 53.17124125793978 -0.9530837442799464, 53.17124125793978 -1.5814872557200534, 52.67950868655811 -1.5814872557200534)) ]
2020-02-17 13:24:05,656 INFO [wfs.json] - about to encode JSON
2020-02-17 13:25:13,966 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:25:14,062 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 13:25:14,062 INFO [wfs.json] - about to encode JSON
2020-02-17 13:25:21,836 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:25:22,015 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2b32041 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
2020-02-17 13:25:22,016 INFO [wfs.json] - about to encode JSON
2020-02-17 13:25:32,060 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:25:32,253 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@178c8857 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
2020-02-17 13:25:32,254 INFO [wfs.json] - about to encode JSON
2020-02-17 13:25:50,867 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:25:51,042 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7d479c93 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.67950868655811 -1.5814872557200534, 52.67950868655811 -0.9530837442799464, 53.17124125793978 -0.9530837442799464, 53.17124125793978 -1.5814872557200534, 52.67950868655811 -1.5814872557200534)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.67950868655811 -1.5814872557200534, 52.67950868655811 -0.9530837442799464, 53.17124125793978 -0.9530837442799464, 53.17124125793978 -1.5814872557200534, 52.67950868655811 -1.5814872557200534)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.67950868655811 -1.5814872557200534, 52.67950868655811 -0.9530837442799464, 53.17124125793978 -0.9530837442799464, 53.17124125793978 -1.5814872557200534, 52.67950868655811 -1.5814872557200534)) ]
2020-02-17 13:25:51,043 INFO [wfs.json] - about to encode JSON
2020-02-17 13:26:43,634 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:26:43,809 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@689c9d61 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
2020-02-17 13:26:43,810 INFO [wfs.json] - about to encode JSON
2020-02-17 13:28:38,894 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 13:28:38,911 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Width = 20
	Height = 20
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	FeatureType = null
	Layers = [null]
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Locale = null
	Format = image/png
	Rules = [null]
	Strict = false
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=unhighlight_fwa, WIDTH=20, HEIGHT=20}
	RequestCharset = null
	Version = 1.0.0
	Request = GetLegendGraphic
2020-02-17 13:29:13,425 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:29:13,607 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1afd14 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
2020-02-17 13:29:13,608 INFO [wfs.json] - about to encode JSON
2020-02-17 13:30:26,438 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:30:26,614 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7e676d03 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
2020-02-17 13:30:26,615 INFO [wfs.json] - about to encode JSON
2020-02-17 13:30:50,232 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:30:50,410 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@77817d1b (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
2020-02-17 13:30:50,412 INFO [wfs.json] - about to encode JSON
2020-02-17 13:31:00,009 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:31:00,109 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 13:31:00,111 INFO [wfs.json] - about to encode JSON
2020-02-17 13:35:20,549 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:35:20,731 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@3fea7d28 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
2020-02-17 13:35:20,732 INFO [wfs.json] - about to encode JSON
2020-02-17 13:35:58,060 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:35:58,236 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@13ca422b (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-186704.5114897706 6908846.100832763, -186704.5114897706 6973592.505673879, -136823.88120017434 6973592.505673879, -136823.88120017434 6908846.100832763, -186704.5114897706 6908846.100832763)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-186704.5114897706 6908846.100832763, -186704.5114897706 6973592.505673879, -136823.88120017434 6973592.505673879, -136823.88120017434 6908846.100832763, -186704.5114897706 6908846.100832763)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-186704.5114897706 6908846.100832763, -186704.5114897706 6973592.505673879, -136823.88120017434 6973592.505673879, -136823.88120017434 6908846.100832763, -186704.5114897706 6908846.100832763)) ]
2020-02-17 13:35:58,237 INFO [wfs.json] - about to encode JSON
2020-02-17 13:36:59,579 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:36:59,757 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1541cb23 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-187375.8502728213 6907974.681141792, -187375.8502728213 6974463.917714609, -136152.54241712365 6974463.917714609, -136152.54241712365 6907974.681141792, -187375.8502728213 6907974.681141792)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-187375.8502728213 6907974.681141792, -187375.8502728213 6974463.917714609, -136152.54241712365 6974463.917714609, -136152.54241712365 6907974.681141792, -187375.8502728213 6907974.681141792)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-187375.8502728213 6907974.681141792, -187375.8502728213 6974463.917714609, -136152.54241712365 6974463.917714609, -136152.54241712365 6907974.681141792, -187375.8502728213 6907974.681141792)) ]
2020-02-17 13:36:59,758 INFO [wfs.json] - about to encode JSON
2020-02-17 13:38:26,580 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:38:26,795 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2a1fecf7 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-188065.22416179956 6907079.797516747, -188065.22416179956 6975358.68593011, -135463.16852814538 6975358.68593011, -135463.16852814538 6907079.797516747, -188065.22416179956 6907079.797516747)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-188065.22416179956 6907079.797516747, -188065.22416179956 6975358.68593011, -135463.16852814538 6975358.68593011, -135463.16852814538 6907079.797516747, -188065.22416179956 6907079.797516747)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-188065.22416179956 6907079.797516747, -188065.22416179956 6975358.68593011, -135463.16852814538 6975358.68593011, -135463.16852814538 6907079.797516747, -188065.22416179956 6907079.797516747)) ]
2020-02-17 13:38:26,796 INFO [wfs.json] - about to encode JSON
2020-02-17 13:38:59,554 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:38:59,760 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@33e24790 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-188773.21028009523 6906160.799734448, -188773.21028009523 6976277.658340686, -134755.18240984972 6976277.658340686, -134755.18240984972 6906160.799734448, -188773.21028009523 6906160.799734448)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-188773.21028009523 6906160.799734448, -188773.21028009523 6976277.658340686, -134755.18240984972 6976277.658340686, -134755.18240984972 6906160.799734448, -188773.21028009523 6906160.799734448)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-188773.21028009523 6906160.799734448, -188773.21028009523 6976277.658340686, -134755.18240984972 6976277.658340686, -134755.18240984972 6906160.799734448, -188773.21028009523 6906160.799734448)) ]
2020-02-17 13:38:59,761 INFO [wfs.json] - about to encode JSON
2020-02-17 13:39:41,965 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:39:42,198 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@3e104964 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-189500.24147025045 6905217.042508379, -189500.24147025045 6977221.313342433, -134028.1512196945 6977221.313342433, -134028.1512196945 6905217.042508379, -189500.24147025045 6905217.042508379)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-189500.24147025045 6905217.042508379, -189500.24147025045 6977221.313342433, -134028.1512196945 6977221.313342433, -134028.1512196945 6905217.042508379, -189500.24147025045 6905217.042508379)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-189500.24147025045 6905217.042508379, -189500.24147025045 6977221.313342433, -134028.1512196945 6977221.313342433, -134028.1512196945 6905217.042508379, -189500.24147025045 6905217.042508379)) ]
2020-02-17 13:39:42,199 INFO [wfs.json] - about to encode JSON
2020-02-17 13:40:07,100 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:40:07,301 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5931a70a (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-190246.89485565491 6904247.875669884, -190246.89485565491 6978190.499010179, -133281.49783429003 6978190.499010179, -133281.49783429003 6904247.875669884, -190246.89485565491 6904247.875669884)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-190246.89485565491 6904247.875669884, -190246.89485565491 6978190.499010179, -133281.49783429003 6978190.499010179, -133281.49783429003 6904247.875669884, -190246.89485565491 6904247.875669884)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-190246.89485565491 6904247.875669884, -190246.89485565491 6978190.499010179, -133281.49783429003 6978190.499010179, -133281.49783429003 6904247.875669884, -190246.89485565491 6904247.875669884)) ]
2020-02-17 13:40:07,302 INFO [wfs.json] - about to encode JSON
2020-02-17 13:41:34,292 INFO [geoserver.security] - Strong cryptography is available
2020-02-17 13:41:39,006 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:41:39,104 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 13:41:39,105 INFO [wfs.json] - about to encode JSON
2020-02-17 13:41:52,895 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:41:53,082 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@440cedcc (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-177958.61449080033 6921457.342162002, -177958.61449080033 7017212.892372545, -104188.53860859793 7017212.892372545, -104188.53860859793 6921457.342162002, -177958.61449080033 6921457.342162002)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-177958.61449080033 6921457.342162002, -177958.61449080033 7017212.892372545, -104188.53860859793 7017212.892372545, -104188.53860859793 6921457.342162002, -177958.61449080033 6921457.342162002)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-177958.61449080033 6921457.342162002, -177958.61449080033 7017212.892372545, -104188.53860859793 7017212.892372545, -104188.53860859793 6921457.342162002, -177958.61449080033 6921457.342162002)) ]
2020-02-17 13:41:53,086 INFO [wfs.json] - about to encode JSON
2020-02-17 13:42:13,447 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:42:13,646 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@58d8bc28 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-178951.4110019053 6920168.636326738, -178951.4110019053 7018501.53988906, -103195.74209749288 7018501.53988906, -103195.74209749288 6920168.636326738, -178951.4110019053 6920168.636326738)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-178951.4110019053 6920168.636326738, -178951.4110019053 7018501.53988906, -103195.74209749288 7018501.53988906, -103195.74209749288 6920168.636326738, -178951.4110019053 6920168.636326738)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-178951.4110019053 6920168.636326738, -178951.4110019053 7018501.53988906, -103195.74209749288 7018501.53988906, -103195.74209749288 6920168.636326738, -178951.4110019053 6920168.636326738)) ]
2020-02-17 13:42:13,648 INFO [wfs.json] - about to encode JSON
2020-02-17 13:42:17,870 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:42:18,048 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@421d9141 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-176991.78853223112 6922712.331174392, -176991.78853223112 7015957.948989896, -105155.36456716713 7015957.948989896, -105155.36456716713 6922712.331174392, -176991.78853223112 6922712.331174392)) ]
2020-02-17 13:42:18,050 INFO [wfs.json] - about to encode JSON
2020-02-17 13:44:58,808 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [DimensionEditor [Component id = time]]
2020-02-17 13:45:00,496 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 13:45:00,501 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Width = 20
	Height = 20
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	FeatureType = null
	Layers = [null]
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Locale = null
	Format = image/png
	Rules = [null]
	Strict = false
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=unhighlight_fwa, WIDTH=20, HEIGHT=20}
	RequestCharset = null
	Version = 1.0.0
	Request = GetLegendGraphic
2020-02-17 13:46:00,008 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 13:46:00,108 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 13:46:00,109 INFO [wfs.json] - about to encode JSON
2020-02-17 14:01:00,007 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:01:00,173 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 14:01:00,173 INFO [wfs.json] - about to encode JSON
2020-02-17 14:16:00,012 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:16:00,117 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 14:16:00,118 INFO [wfs.json] - about to encode JSON
2020-02-17 14:19:36,272 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:19:36,452 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@57ee1321 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-173525.40640880013 6905689.527085918, -173525.40640880013 7002040.44575465, -116408.58182197601 7002040.44575465, -116408.58182197601 6905689.527085918, -173525.40640880013 6905689.527085918)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-173525.40640880013 6905689.527085918, -173525.40640880013 7002040.44575465, -116408.58182197601 7002040.44575465, -116408.58182197601 6905689.527085918, -173525.40640880013 6905689.527085918)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-173525.40640880013 6905689.527085918, -173525.40640880013 7002040.44575465, -116408.58182197601 7002040.44575465, -116408.58182197601 6905689.527085918, -173525.40640880013 6905689.527085918)) ]
2020-02-17 14:19:36,453 INFO [wfs.json] - about to encode JSON
2020-02-17 14:20:07,439 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:20:07,618 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6352cef9 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-173525.40640880013 6905689.527085918, -173525.40640880013 7002040.44575465, -116408.58182197601 7002040.44575465, -116408.58182197601 6905689.527085918, -173525.40640880013 6905689.527085918)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-173525.40640880013 6905689.527085918, -173525.40640880013 7002040.44575465, -116408.58182197601 7002040.44575465, -116408.58182197601 6905689.527085918, -173525.40640880013 6905689.527085918)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-173525.40640880013 6905689.527085918, -173525.40640880013 7002040.44575465, -116408.58182197601 7002040.44575465, -116408.58182197601 6905689.527085918, -173525.40640880013 6905689.527085918)) ]
2020-02-17 14:20:07,619 INFO [wfs.json] - about to encode JSON
2020-02-17 14:20:15,846 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:20:16,026 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@3bb82739 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-173525.40640880013 6905689.527085918, -173525.40640880013 7002040.44575465, -116408.58182197601 7002040.44575465, -116408.58182197601 6905689.527085918, -173525.40640880013 6905689.527085918)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-173525.40640880013 6905689.527085918, -173525.40640880013 7002040.44575465, -116408.58182197601 7002040.44575465, -116408.58182197601 6905689.527085918, -173525.40640880013 6905689.527085918)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-173525.40640880013 6905689.527085918, -173525.40640880013 7002040.44575465, -116408.58182197601 7002040.44575465, -116408.58182197601 6905689.527085918, -173525.40640880013 6905689.527085918)) ]
2020-02-17 14:20:16,026 INFO [wfs.json] - about to encode JSON
2020-02-17 14:21:03,243 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:21:03,451 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5665f173 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-145763.27343678242 6953385.453287215, -145763.27343678242 6978397.885226469, -130935.90378319296 6978397.885226469, -130935.90378319296 6953385.453287215, -145763.27343678242 6953385.453287215)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-145763.27343678242 6953385.453287215, -145763.27343678242 6978397.885226469, -130935.90378319296 6978397.885226469, -130935.90378319296 6953385.453287215, -145763.27343678242 6953385.453287215)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-145763.27343678242 6953385.453287215, -145763.27343678242 6978397.885226469, -130935.90378319296 6978397.885226469, -130935.90378319296 6953385.453287215, -145763.27343678242 6953385.453287215)) ]
2020-02-17 14:21:03,452 INFO [wfs.json] - about to encode JSON
2020-02-17 14:21:06,514 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:21:06,702 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5215b2c7 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-156848.78327225952 6943960.7689325055, -156848.78327225952 6993985.632811013, -127194.04396508064 6993985.632811013, -127194.04396508064 6943960.7689325055, -156848.78327225952 6943960.7689325055)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-156848.78327225952 6943960.7689325055, -156848.78327225952 6993985.632811013, -127194.04396508064 6993985.632811013, -127194.04396508064 6943960.7689325055, -156848.78327225952 6943960.7689325055)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-156848.78327225952 6943960.7689325055, -156848.78327225952 6993985.632811013, -127194.04396508064 6993985.632811013, -127194.04396508064 6943960.7689325055, -156848.78327225952 6943960.7689325055)) ]
2020-02-17 14:21:06,702 INFO [wfs.json] - about to encode JSON
2020-02-17 14:21:08,122 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:21:08,301 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@3e8242a1 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-156768.74349005392 6941383.903736561, -156768.74349005392 6991408.767615068, -127114.00418287504 6991408.767615068, -127114.00418287504 6941383.903736561, -156768.74349005392 6941383.903736561)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-156768.74349005392 6941383.903736561, -156768.74349005392 6991408.767615068, -127114.00418287504 6991408.767615068, -127114.00418287504 6941383.903736561, -156768.74349005392 6941383.903736561)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-156768.74349005392 6941383.903736561, -156768.74349005392 6991408.767615068, -127114.00418287504 6991408.767615068, -127114.00418287504 6941383.903736561, -156768.74349005392 6941383.903736561)) ]
2020-02-17 14:21:08,302 INFO [wfs.json] - about to encode JSON
2020-02-17 14:21:21,227 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:21:21,450 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2ec9c58c (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-157337.91855082463 6940423.799305732, -157337.91855082463 6992368.977816687, -126544.81672953149 6992368.977816687, -126544.81672953149 6940423.799305732, -157337.91855082463 6940423.799305732)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-157337.91855082463 6940423.799305732, -157337.91855082463 6992368.977816687, -126544.81672953149 6992368.977816687, -126544.81672953149 6940423.799305732, -157337.91855082463 6940423.799305732)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-157337.91855082463 6940423.799305732, -157337.91855082463 6992368.977816687, -126544.81672953149 6992368.977816687, -126544.81672953149 6940423.799305732, -157337.91855082463 6940423.799305732)) ]
2020-02-17 14:21:21,450 INFO [wfs.json] - about to encode JSON
2020-02-17 14:25:09,639 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:25:09,820 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@37fcac90 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((52.29258417757299 -1.3758872153387078, 52.29258417757299 -0.4523729301056431, 53.23521436200713 -0.4523729301056431, 53.23521436200713 -1.3758872153387078, 52.29258417757299 -1.3758872153387078)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((52.29258417757299 -1.3758872153387078, 52.29258417757299 -0.4523729301056431, 53.23521436200713 -0.4523729301056431, 53.23521436200713 -1.3758872153387078, 52.29258417757299 -1.3758872153387078)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        filter = [  bbox POLYGON ((52.29258417757299 -1.3758872153387078, 52.29258417757299 -0.4523729301056431, 53.23521436200713 -0.4523729301056431, 53.23521436200713 -1.3758872153387078, 52.29258417757299 -1.3758872153387078)) ]
2020-02-17 14:25:09,821 INFO [wfs.json] - about to encode JSON
2020-02-17 14:25:17,701 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:25:17,880 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@14e724dd (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-181860.11846881395 6912973.773623417, -181860.11846881395 7003013.8279736405, -47016.13307391927 7003013.8279736405, -47016.13307391927 6912973.773623417, -181860.11846881395 6912973.773623417)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-181860.11846881395 6912973.773623417, -181860.11846881395 7003013.8279736405, -47016.13307391927 7003013.8279736405, -47016.13307391927 6912973.773623417, -181860.11846881395 6912973.773623417)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-181860.11846881395 6912973.773623417, -181860.11846881395 7003013.8279736405, -47016.13307391927 7003013.8279736405, -47016.13307391927 6912973.773623417, -181860.11846881395 6912973.773623417)) ]
2020-02-17 14:25:17,881 INFO [wfs.json] - about to encode JSON
2020-02-17 14:25:21,395 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:25:21,572 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@19e25cc (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-182940.59912101662 6921689.650884521, -182940.59912101662 7011729.705234745, -48096.61372612195 7011729.705234745, -48096.61372612195 6921689.650884521, -182940.59912101662 6921689.650884521)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-182940.59912101662 6921689.650884521, -182940.59912101662 7011729.705234745, -48096.61372612195 7011729.705234745, -48096.61372612195 6921689.650884521, -182940.59912101662 6921689.650884521)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-182940.59912101662 6921689.650884521, -182940.59912101662 7011729.705234745, -48096.61372612195 7011729.705234745, -48096.61372612195 6921689.650884521, -182940.59912101662 6921689.650884521)) ]
2020-02-17 14:25:21,573 INFO [wfs.json] - about to encode JSON
2020-02-17 14:25:22,536 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:25:22,728 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@9823444 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-170523.60132538516 6935669.080773496, -170523.60132538516 7025709.135123719, -35679.615930490465 7025709.135123719, -35679.615930490465 6935669.080773496, -170523.60132538516 6935669.080773496)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-170523.60132538516 6935669.080773496, -170523.60132538516 7025709.135123719, -35679.615930490465 7025709.135123719, -35679.615930490465 6935669.080773496, -170523.60132538516 6935669.080773496)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-170523.60132538516 6935669.080773496, -170523.60132538516 7025709.135123719, -35679.615930490465 7025709.135123719, -35679.615930490465 6935669.080773496, -170523.60132538516 6935669.080773496)) ]
2020-02-17 14:25:22,729 INFO [wfs.json] - about to encode JSON
2020-02-17 14:25:23,224 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:25:23,401 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4c901668 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-153424.96754745895 6953279.781939769, -153424.96754745895 7043319.836289993, -18580.982152564284 7043319.836289993, -18580.982152564284 6953279.781939769, -153424.96754745895 6953279.781939769)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-153424.96754745895 6953279.781939769, -153424.96754745895 7043319.836289993, -18580.982152564284 7043319.836289993, -18580.982152564284 6953279.781939769, -153424.96754745895 6953279.781939769)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-153424.96754745895 6953279.781939769, -153424.96754745895 7043319.836289993, -18580.982152564284 7043319.836289993, -18580.982152564284 6953279.781939769, -153424.96754745895 6953279.781939769)) ]
2020-02-17 14:25:23,402 INFO [wfs.json] - about to encode JSON
2020-02-17 14:25:44,862 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:25:45,043 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2ef1536d (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-140980.62427476738 6975317.450179138, -140980.62427476738 7029621.677924636, -59654.61280310897 7029621.677924636, -59654.61280310897 6975317.450179138, -140980.62427476738 6975317.450179138)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-140980.62427476738 6975317.450179138, -140980.62427476738 7029621.677924636, -59654.61280310897 7029621.677924636, -59654.61280310897 6975317.450179138, -140980.62427476738 6975317.450179138)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-140980.62427476738 6975317.450179138, -140980.62427476738 7029621.677924636, -59654.61280310897 7029621.677924636, -59654.61280310897 6975317.450179138, -140980.62427476738 6975317.450179138)) ]
2020-02-17 14:25:45,044 INFO [wfs.json] - about to encode JSON
2020-02-17 14:25:58,451 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:25:58,627 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2ee86da3 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-180837.91730917993 6940423.799305732, -180837.91730917993 6992368.977816687, -103044.8179711762 6992368.977816687, -103044.8179711762 6940423.799305732, -180837.91730917993 6940423.799305732)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-180837.91730917993 6940423.799305732, -180837.91730917993 6992368.977816687, -103044.8179711762 6992368.977816687, -103044.8179711762 6940423.799305732, -180837.91730917993 6940423.799305732)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-180837.91730917993 6940423.799305732, -180837.91730917993 6992368.977816687, -103044.8179711762 6992368.977816687, -103044.8179711762 6940423.799305732, -180837.91730917993 6940423.799305732)) ]
2020-02-17 14:25:58,629 INFO [wfs.json] - about to encode JSON
2020-02-17 14:26:00,038 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:26:00,220 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@16e8815d (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-181593.28920996885 6939919.4483218165, -181593.28920996885 6992873.403409678, -102289.44607038729 6992873.403409678, -102289.44607038729 6939919.4483218165, -181593.28920996885 6939919.4483218165)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-181593.28920996885 6939919.4483218165, -181593.28920996885 6992873.403409678, -102289.44607038729 6992873.403409678, -102289.44607038729 6939919.4483218165, -181593.28920996885 6939919.4483218165)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-181593.28920996885 6939919.4483218165, -181593.28920996885 6992873.403409678, -102289.44607038729 6992873.403409678, -102289.44607038729 6939919.4483218165, -181593.28920996885 6939919.4483218165)) ]
2020-02-17 14:26:00,221 INFO [wfs.json] - about to encode JSON
2020-02-17 14:31:00,012 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:31:00,119 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 14:31:00,120 INFO [wfs.json] - about to encode JSON
2020-02-17 14:33:58,480 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:33:58,668 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6b89dc5f (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-182363.2288932637 6939405.392210965, -182363.2288932637 6993387.578713483, -101519.50638709244 6993387.578713483, -101519.50638709244 6939405.392210965, -182363.2288932637 6939405.392210965)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-182363.2288932637 6939405.392210965, -182363.2288932637 6993387.578713483, -101519.50638709244 6993387.578713483, -101519.50638709244 6939405.392210965, -182363.2288932637 6939405.392210965)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-182363.2288932637 6939405.392210965, -182363.2288932637 6993387.578713483, -101519.50638709244 6993387.578713483, -101519.50638709244 6939405.392210965, -182363.2288932637 6939405.392210965)) ]
2020-02-17 14:33:58,669 INFO [wfs.json] - about to encode JSON
2020-02-17 14:46:00,009 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:46:00,115 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 14:46:00,115 INFO [wfs.json] - about to encode JSON
2020-02-17 14:47:56,324 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:47:56,503 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5a34a5ee (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-183148.0974061067 6938881.321034941, -183148.0974061067 6993911.675957388, -100734.63787424941 6993911.675957388, -100734.63787424941 6938881.321034941, -183148.0974061067 6938881.321034941)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-183148.0974061067 6938881.321034941, -183148.0974061067 6993911.675957388, -100734.63787424941 6993911.675957388, -100734.63787424941 6938881.321034941, -183148.0974061067 6938881.321034941)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-183148.0974061067 6938881.321034941, -183148.0974061067 6993911.675957388, -100734.63787424941 6993911.675957388, -100734.63787424941 6938881.321034941, -183148.0974061067 6938881.321034941)) ]
2020-02-17 14:47:56,504 INFO [wfs.json] - about to encode JSON
2020-02-17 14:48:13,108 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:48:13,284 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@598cbe85 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-183948.23022626908 6938347.012647951, -183948.23022626908 6994445.921016127, -99934.50505408707 6994445.921016127, -99934.50505408707 6938347.012647951, -183948.23022626908 6938347.012647951)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-183948.23022626908 6938347.012647951, -183948.23022626908 6994445.921016127, -99934.50505408707 6994445.921016127, -99934.50505408707 6938347.012647951, -183948.23022626908 6938347.012647951)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-183948.23022626908 6938347.012647951, -183948.23022626908 6994445.921016127, -99934.50505408707 6994445.921016127, -99934.50505408707 6938347.012647951, -183948.23022626908 6938347.012647951)) ]
2020-02-17 14:48:13,285 INFO [wfs.json] - about to encode JSON
2020-02-17 14:56:25,424 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:56:25,605 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@688df0a3 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-148489.8009607378 6962700.7216478465, -148489.8009607378 6965025.2464118535, -146698.9870825464 6965025.2464118535, -146698.9870825464 6962700.7216478465, -148489.8009607378 6962700.7216478465)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-148489.8009607378 6962700.7216478465, -148489.8009607378 6965025.2464118535, -146698.9870825464 6965025.2464118535, -146698.9870825464 6962700.7216478465, -148489.8009607378 6962700.7216478465)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-148489.8009607378 6962700.7216478465, -148489.8009607378 6965025.2464118535, -146698.9870825464 6965025.2464118535, -146698.9870825464 6962700.7216478465, -148489.8009607378 6962700.7216478465)) ]
2020-02-17 14:56:25,607 INFO [wfs.json] - about to encode JSON
2020-02-17 14:56:28,249 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:56:28,420 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@21ad7373 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-148489.8009607378 6962700.7216478465, -148489.8009607378 6965025.2464118535, -146698.9870825464 6965025.2464118535, -146698.9870825464 6962700.7216478465, -148489.8009607378 6962700.7216478465)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-148489.8009607378 6962700.7216478465, -148489.8009607378 6965025.2464118535, -146698.9870825464 6965025.2464118535, -146698.9870825464 6962700.7216478465, -148489.8009607378 6962700.7216478465)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-148489.8009607378 6962700.7216478465, -148489.8009607378 6965025.2464118535, -146698.9870825464 6965025.2464118535, -146698.9870825464 6962700.7216478465, -148489.8009607378 6962700.7216478465)) ]
2020-02-17 14:56:28,421 INFO [wfs.json] - about to encode JSON
2020-02-17 14:56:34,955 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:56:35,135 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@467f4030 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-151637.02107125067 6959885.505970957, -151637.02107125067 6967895.038160024, -145466.47747279354 6967895.038160024, -145466.47747279354 6959885.505970957, -151637.02107125067 6959885.505970957)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-151637.02107125067 6959885.505970957, -151637.02107125067 6967895.038160024, -145466.47747279354 6967895.038160024, -145466.47747279354 6959885.505970957, -151637.02107125067 6959885.505970957)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-151637.02107125067 6959885.505970957, -151637.02107125067 6967895.038160024, -145466.47747279354 6967895.038160024, -145466.47747279354 6959885.505970957, -151637.02107125067 6959885.505970957)) ]
2020-02-17 14:56:35,136 INFO [wfs.json] - about to encode JSON
2020-02-17 14:56:35,306 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:56:35,630 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:56:35,675 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5164db29 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-156071.0980911181 6955912.778005182, -156071.0980911181 6971931.842383315, -143730.0108942039 6971931.842383315, -143730.0108942039 6955912.778005182, -156071.0980911181 6955912.778005182)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-156071.0980911181 6955912.778005182, -156071.0980911181 6971931.842383315, -143730.0108942039 6971931.842383315, -143730.0108942039 6955912.778005182, -156071.0980911181 6955912.778005182)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-156071.0980911181 6955912.778005182, -156071.0980911181 6971931.842383315, -143730.0108942039 6971931.842383315, -143730.0108942039 6955912.778005182, -156071.0980911181 6955912.778005182)) ]
2020-02-17 14:56:35,677 INFO [wfs.json] - about to encode JSON
2020-02-17 14:56:35,823 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@ddfca51 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-164964.88263303772 6947954.506822536, -164964.88263303772 6979992.635578804, -140282.7082392094 6979992.635578804, -140282.7082392094 6947954.506822536, -164964.88263303772 6947954.506822536)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-164964.88263303772 6947954.506822536, -164964.88263303772 6979992.635578804, -140282.7082392094 6979992.635578804, -140282.7082392094 6947954.506822536, -164964.88263303772 6947954.506822536)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-164964.88263303772 6947954.506822536, -164964.88263303772 6979992.635578804, -140282.7082392094 6979992.635578804, -140282.7082392094 6947954.506822536, -164964.88263303772 6947954.506822536)) ]
2020-02-17 14:56:35,824 INFO [wfs.json] - about to encode JSON
2020-02-17 14:56:35,990 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:56:36,350 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5886cc21 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-182752.45171851735 6932012.333953415, -182752.45171851735 6996088.591465949, -133388.10293086065 6996088.591465949, -133388.10293086065 6932012.333953415, -182752.45171851735 6932012.333953415)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-182752.45171851735 6932012.333953415, -182752.45171851735 6996088.591465949, -133388.10293086065 6996088.591465949, -133388.10293086065 6932012.333953415, -182752.45171851735 6932012.333953415)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-182752.45171851735 6932012.333953415, -182752.45171851735 6996088.591465949, -133388.10293086065 6996088.591465949, -133388.10293086065 6932012.333953415, -182752.45171851735 6932012.333953415)) ]
2020-02-17 14:56:36,352 INFO [wfs.json] - about to encode JSON
2020-02-17 14:56:43,692 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:56:43,866 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@299e2069 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-175317.7156887008 6931655.756117793, -175317.7156887008 6997456.830730785, -124624.56780685225 6997456.830730785, -124624.56780685225 6931655.756117793, -175317.7156887008 6931655.756117793)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-175317.7156887008 6931655.756117793, -175317.7156887008 6997456.830730785, -124624.56780685225 6997456.830730785, -124624.56780685225 6931655.756117793, -175317.7156887008 6931655.756117793)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-175317.7156887008 6931655.756117793, -175317.7156887008 6997456.830730785, -124624.56780685225 6997456.830730785, -124624.56780685225 6931655.756117793, -175317.7156887008 6931655.756117793)) ]
2020-02-17 14:56:43,867 INFO [wfs.json] - about to encode JSON
2020-02-17 14:56:49,071 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 14:56:49,436 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1ac03fc (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-175317.7156887008 6931655.756117793, -175317.7156887008 6997456.830730785, -124624.56780685225 6997456.830730785, -124624.56780685225 6931655.756117793, -175317.7156887008 6931655.756117793)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-175317.7156887008 6931655.756117793, -175317.7156887008 6997456.830730785, -124624.56780685225 6997456.830730785, -124624.56780685225 6931655.756117793, -175317.7156887008 6931655.756117793)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-175317.7156887008 6931655.756117793, -175317.7156887008 6997456.830730785, -124624.56780685225 6997456.830730785, -124624.56780685225 6931655.756117793, -175317.7156887008 6931655.756117793)) ]
2020-02-17 14:56:49,437 INFO [wfs.json] - about to encode JSON
2020-02-17 15:00:37,203 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:00:37,379 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7c5b739b (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-183312.4591643145 6931623.483983145, -183312.4591643145 6993984.929701458, -135269.20138292637 6993984.929701458, -135269.20138292637 6931623.483983145, -183312.4591643145 6931623.483983145)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-183312.4591643145 6931623.483983145, -183312.4591643145 6993984.929701458, -135269.20138292637 6993984.929701458, -135269.20138292637 6931623.483983145, -183312.4591643145 6931623.483983145)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-183312.4591643145 6931623.483983145, -183312.4591643145 6993984.929701458, -135269.20138292637 6993984.929701458, -135269.20138292637 6931623.483983145, -183312.4591643145 6931623.483983145)) ]
2020-02-17 15:00:37,380 INFO [wfs.json] - about to encode JSON
2020-02-17 15:00:38,373 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:00:38,918 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@130ef6f8 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-220230.43502955567 6899345.199679345, -220230.43502955567 7024068.09111597, -124143.9194667794 7024068.09111597, -124143.9194667794 6899345.199679345, -220230.43502955567 6899345.199679345)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-220230.43502955567 6899345.199679345, -220230.43502955567 7024068.09111597, -124143.9194667794 7024068.09111597, -124143.9194667794 6899345.199679345, -220230.43502955567 6899345.199679345)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-220230.43502955567 6899345.199679345, -220230.43502955567 7024068.09111597, -124143.9194667794 7024068.09111597, -124143.9194667794 6899345.199679345, -220230.43502955567 6899345.199679345)) ]
2020-02-17 15:00:38,919 INFO [wfs.json] - about to encode JSON
2020-02-17 15:01:00,008 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:01:00,104 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 15:01:00,105 INFO [wfs.json] - about to encode JSON
2020-02-17 15:01:39,872 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:01:40,185 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5d3ad4ea (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-225917.79887906575 6894356.28402188, -225917.79887906575 7019079.175458505, -129831.28331628955 7019079.175458505, -129831.28331628955 6894356.28402188, -225917.79887906575 6894356.28402188)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-225917.79887906575 6894356.28402188, -225917.79887906575 7019079.175458505, -129831.28331628955 7019079.175458505, -129831.28331628955 6894356.28402188, -225917.79887906575 6894356.28402188)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-225917.79887906575 6894356.28402188, -225917.79887906575 7019079.175458505, -129831.28331628955 7019079.175458505, -129831.28331628955 6894356.28402188, -225917.79887906575 6894356.28402188)) ]
2020-02-17 15:01:40,186 INFO [wfs.json] - about to encode JSON
2020-02-17 15:01:42,915 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:01:43,123 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@44e5066d (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-247170.57957986675 6878890.645483737, -247170.57957986675 7003613.536920362, -151084.0640170905 7003613.536920362, -151084.0640170905 6878890.645483737, -247170.57957986675 6878890.645483737)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-247170.57957986675 6878890.645483737, -247170.57957986675 7003613.536920362, -151084.0640170905 7003613.536920362, -151084.0640170905 6878890.645483737, -247170.57957986675 6878890.645483737)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-247170.57957986675 6878890.645483737, -247170.57957986675 7003613.536920362, -151084.0640170905 7003613.536920362, -151084.0640170905 6878890.645483737, -247170.57957986675 6878890.645483737)) ]
2020-02-17 15:01:43,124 INFO [wfs.json] - about to encode JSON
2020-02-17 15:01:44,675 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:01:44,855 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7acda3c3 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-235296.96031510012 6878092.41897854, -235296.96031510012 7002815.3104151655, -139210.44475232388 7002815.3104151655, -139210.44475232388 6878092.41897854, -235296.96031510012 6878092.41897854)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-235296.96031510012 6878092.41897854, -235296.96031510012 7002815.3104151655, -139210.44475232388 7002815.3104151655, -139210.44475232388 6878092.41897854, -235296.96031510012 6878092.41897854)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-235296.96031510012 6878092.41897854, -235296.96031510012 7002815.3104151655, -139210.44475232388 7002815.3104151655, -139210.44475232388 6878092.41897854, -235296.96031510012 6878092.41897854)) ]
2020-02-17 15:01:44,857 INFO [wfs.json] - about to encode JSON
2020-02-17 15:01:56,773 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:01:56,983 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4fc3801b (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-186176.83213296704 6920435.852809605, -186176.83213296704 6984475.929488665, -136840.35705941965 6984475.929488665, -136840.35705941965 6920435.852809605, -186176.83213296704 6920435.852809605)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-186176.83213296704 6920435.852809605, -186176.83213296704 6984475.929488665, -136840.35705941965 6984475.929488665, -136840.35705941965 6920435.852809605, -186176.83213296704 6920435.852809605)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-186176.83213296704 6920435.852809605, -186176.83213296704 6984475.929488665, -136840.35705941965 6984475.929488665, -136840.35705941965 6920435.852809605, -186176.83213296704 6920435.852809605)) ]
2020-02-17 15:01:56,984 INFO [wfs.json] - about to encode JSON
2020-02-17 15:02:06,609 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:02:06,781 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@18b351be (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-180387.60920118005 6922587.599386022, -180387.60920118005 6986627.676065083, -131051.13412763266 6986627.676065083, -131051.13412763266 6922587.599386022, -180387.60920118005 6922587.599386022)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-180387.60920118005 6922587.599386022, -180387.60920118005 6986627.676065083, -131051.13412763266 6986627.676065083, -131051.13412763266 6922587.599386022, -180387.60920118005 6922587.599386022)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-180387.60920118005 6922587.599386022, -180387.60920118005 6986627.676065083, -131051.13412763266 6986627.676065083, -131051.13412763266 6922587.599386022, -180387.60920118005 6922587.599386022)) ]
2020-02-17 15:02:06,781 INFO [wfs.json] - about to encode JSON
2020-02-17 15:02:08,947 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:02:09,117 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@49857175 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-177211.2213978987 6922177.742895276, -177211.2213978987 6986217.8195743365, -127874.74632435132 6986217.8195743365, -127874.74632435132 6922177.742895276, -177211.2213978987 6922177.742895276)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-177211.2213978987 6922177.742895276, -177211.2213978987 6986217.8195743365, -127874.74632435132 6986217.8195743365, -127874.74632435132 6922177.742895276, -177211.2213978987 6922177.742895276)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-177211.2213978987 6922177.742895276, -177211.2213978987 6986217.8195743365, -127874.74632435132 6986217.8195743365, -127874.74632435132 6922177.742895276, -177211.2213978987 6922177.742895276)) ]
2020-02-17 15:02:09,118 INFO [wfs.json] - about to encode JSON
2020-02-17 15:02:11,518 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:02:11,687 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@31e7b0b5 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-200496.1932784047 6922177.742895276, -200496.1932784047 6986217.8195743365, -104589.77444384532 6986217.8195743365, -104589.77444384532 6922177.742895276, -200496.1932784047 6922177.742895276)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-200496.1932784047 6922177.742895276, -200496.1932784047 6986217.8195743365, -104589.77444384532 6986217.8195743365, -104589.77444384532 6922177.742895276, -200496.1932784047 6922177.742895276)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-200496.1932784047 6922177.742895276, -200496.1932784047 6986217.8195743365, -104589.77444384532 6986217.8195743365, -104589.77444384532 6922177.742895276, -200496.1932784047 6922177.742895276)) ]
2020-02-17 15:02:11,689 INFO [wfs.json] - about to encode JSON
2020-02-17 15:16:00,010 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:16:00,122 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 15:16:00,123 INFO [wfs.json] - about to encode JSON
2020-02-17 15:19:31,199 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:19:31,381 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@40036620 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-201427.28973757895 6921555.953561306, -201427.28973757895 6986839.546953343, -103658.58027366281 6986839.546953343, -103658.58027366281 6921555.953561306, -201427.28973757895 6921555.953561306)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-201427.28973757895 6921555.953561306, -201427.28973757895 6986839.546953343, -103658.58027366281 6986839.546953343, -103658.58027366281 6921555.953561306, -201427.28973757895 6921555.953561306)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-201427.28973757895 6921555.953561306, -201427.28973757895 6986839.546953343, -103658.58027366281 6986839.546953343, -103658.58027366281 6921555.953561306, -201427.28973757895 6921555.953561306)) ]
2020-02-17 15:19:31,383 INFO [wfs.json] - about to encode JSON
2020-02-17 15:20:03,937 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:20:04,121 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1cf289f6 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-178367.11462172106 6920677.2892064825, -178367.11462172106 6987718.253941946, -126718.75538952071 6987718.253941946, -126718.75538952071 6920677.2892064825, -178367.11462172106 6920677.2892064825)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-178367.11462172106 6920677.2892064825, -178367.11462172106 6987718.253941946, -126718.75538952071 6987718.253941946, -126718.75538952071 6920677.2892064825, -178367.11462172106 6920677.2892064825)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-178367.11462172106 6920677.2892064825, -178367.11462172106 6987718.253941946, -126718.75538952071 6987718.253941946, -126718.75538952071 6920677.2892064825, -178367.11462172106 6920677.2892064825)) ]
2020-02-17 15:20:04,122 INFO [wfs.json] - about to encode JSON
2020-02-17 15:20:24,280 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:20:24,477 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4283f11f (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-179062.25974459623 6919774.954852908, -179062.25974459623 6988620.553863748, -126023.61026664554 6988620.553863748, -126023.61026664554 6919774.954852908, -179062.25974459623 6919774.954852908)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-179062.25974459623 6919774.954852908, -179062.25974459623 6988620.553863748, -126023.61026664554 6988620.553863748, -126023.61026664554 6919774.954852908, -179062.25974459623 6919774.954852908)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-179062.25974459623 6919774.954852908, -179062.25974459623 6988620.553863748, -126023.61026664554 6988620.553863748, -126023.61026664554 6919774.954852908, -179062.25974459623 6919774.954852908)) ]
2020-02-17 15:20:24,478 INFO [wfs.json] - about to encode JSON
2020-02-17 15:23:09,127 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:23:09,222 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 15:23:09,223 INFO [wfs.json] - about to encode JSON
2020-02-17 15:23:18,539 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:23:18,714 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@23ea6214 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-239727.9443675481 6892861.368001022, -239727.9443675481 7016383.643608159, -54740.984418299355 7016383.643608159, -54740.984418299355 6892861.368001022, -239727.9443675481 6892861.368001022)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-239727.9443675481 6892861.368001022, -239727.9443675481 7016383.643608159, -54740.984418299355 7016383.643608159, -54740.984418299355 6892861.368001022, -239727.9443675481 6892861.368001022)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-239727.9443675481 6892861.368001022, -239727.9443675481 7016383.643608159, -54740.984418299355 7016383.643608159, -54740.984418299355 6892861.368001022, -239727.9443675481 6892861.368001022)) ]
2020-02-17 15:23:18,716 INFO [wfs.json] - about to encode JSON
2020-02-17 15:23:33,873 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:23:34,051 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@739b7ce6 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-167935.97522422968 6924737.299534049, -167935.97522422968 6988160.942660037, -119074.40055996907 6988160.942660037, -119074.40055996907 6924737.299534049, -167935.97522422968 6924737.299534049)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-167935.97522422968 6924737.299534049, -167935.97522422968 6988160.942660037, -119074.40055996907 6988160.942660037, -119074.40055996907 6924737.299534049, -167935.97522422968 6924737.299534049)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-167935.97522422968 6924737.299534049, -167935.97522422968 6988160.942660037, -119074.40055996907 6988160.942660037, -119074.40055996907 6924737.299534049, -167935.97522422968 6924737.299534049)) ]
2020-02-17 15:23:34,052 INFO [wfs.json] - about to encode JSON
2020-02-17 15:24:50,763 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:24:50,982 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@452c2299 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-149682.16620062807 6950438.730100344, -149682.16620062807 6966721.452994085, -137137.95648329015 6966721.452994085, -137137.95648329015 6950438.730100344, -149682.16620062807 6950438.730100344)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-149682.16620062807 6950438.730100344, -149682.16620062807 6966721.452994085, -137137.95648329015 6966721.452994085, -137137.95648329015 6950438.730100344, -149682.16620062807 6950438.730100344)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-149682.16620062807 6950438.730100344, -149682.16620062807 6966721.452994085, -137137.95648329015 6966721.452994085, -137137.95648329015 6950438.730100344, -149682.16620062807 6950438.730100344)) ]
2020-02-17 15:24:50,983 INFO [wfs.json] - about to encode JSON
2020-02-17 15:24:54,524 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:24:54,721 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6a18320c (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-149850.97479211088 6950219.578795545, -149850.97479211088 6966940.537908088, -136969.14789180734 6966940.537908088, -136969.14789180734 6950219.578795545, -149850.97479211088 6950219.578795545)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-149850.97479211088 6950219.578795545, -149850.97479211088 6966940.537908088, -136969.14789180734 6966940.537908088, -136969.14789180734 6950219.578795545, -149850.97479211088 6950219.578795545)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-149850.97479211088 6950219.578795545, -149850.97479211088 6966940.537908088, -136969.14789180734 6966940.537908088, -136969.14789180734 6950219.578795545, -149850.97479211088 6950219.578795545)) ]
2020-02-17 15:24:54,722 INFO [wfs.json] - about to encode JSON
2020-02-17 15:25:20,728 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:25:20,902 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1a430b5a (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-150379.13645028466 6948999.088485379, -150379.13645028466 6965543.969926685, -137632.9597879028 6965543.969926685, -137632.9597879028 6948999.088485379, -150379.13645028466 6948999.088485379)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-150379.13645028466 6948999.088485379, -150379.13645028466 6965543.969926685, -137632.9597879028 6965543.969926685, -137632.9597879028 6948999.088485379, -150379.13645028466 6948999.088485379)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-150379.13645028466 6948999.088485379, -150379.13645028466 6965543.969926685, -137632.9597879028 6965543.969926685, -137632.9597879028 6948999.088485379, -150379.13645028466 6948999.088485379)) ]
2020-02-17 15:25:20,903 INFO [wfs.json] - about to encode JSON
2020-02-17 15:25:34,561 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:25:34,738 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6a65dfb7 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-153926.35903130056 6948985.852580226, -153926.35903130056 6965530.734021532, -141180.1823689187 6965530.734021532, -141180.1823689187 6948985.852580226, -153926.35903130056 6948985.852580226)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-153926.35903130056 6948985.852580226, -153926.35903130056 6965530.734021532, -141180.1823689187 6965530.734021532, -141180.1823689187 6948985.852580226, -153926.35903130056 6948985.852580226)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-153926.35903130056 6948985.852580226, -153926.35903130056 6965530.734021532, -141180.1823689187 6965530.734021532, -141180.1823689187 6948985.852580226, -153926.35903130056 6948985.852580226)) ]
2020-02-17 15:25:34,739 INFO [wfs.json] - about to encode JSON
2020-02-17 15:26:17,239 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-02-17 15:26:17,475 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Width = 20
	Height = 20
	Styles = [StyleImpl[ name=stations]]
	FeatureType = null
	Layers = [null]
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Locale = null
	Format = image/png
	Rules = [null]
	Strict = false
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=flood:stations, WIDTH=20, HEIGHT=20}
	RequestCharset = null
	Version = 1.0.0
	Request = GetLegendGraphic
2020-02-17 15:26:31,826 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:26:32,003 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2777ae64 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-153926.35903130056 6948985.852580226, -153926.35903130056 6965530.734021532, -141180.1823689187 6965530.734021532, -141180.1823689187 6948985.852580226, -153926.35903130056 6948985.852580226)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-153926.35903130056 6948985.852580226, -153926.35903130056 6965530.734021532, -141180.1823689187 6965530.734021532, -141180.1823689187 6948985.852580226, -153926.35903130056 6948985.852580226)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-153926.35903130056 6948985.852580226, -153926.35903130056 6965530.734021532, -141180.1823689187 6965530.734021532, -141180.1823689187 6948985.852580226, -153926.35903130056 6948985.852580226)) ]
2020-02-17 15:26:32,004 INFO [wfs.json] - about to encode JSON
2020-02-17 15:31:00,018 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:31:00,112 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 15:31:00,113 INFO [wfs.json] - about to encode JSON
2020-02-17 15:40:53,194 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-02-17 15:40:53,195 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-02-17 15:40:53,199 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-02-17 15:40:53,199 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-02-17 15:40:53,199 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-02-17 15:40:53,200 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-02-17 15:40:53,200 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-02-17 15:40:53,200 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-02-17 15:40:53,200 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-02-17 15:40:53,200 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-02-17 15:40:53,200 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-02-17 15:40:53,210 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-02-17 15:42:06,087 INFO [org.geoserver] - Loaded style 'point'
2020-02-17 15:42:06,088 INFO [org.geoserver] - Loaded style 'generic'
2020-02-17 15:42:06,089 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-02-17 15:42:06,089 INFO [org.geoserver] - Loaded style 'raster'
2020-02-17 15:42:06,090 INFO [org.geoserver] - Loaded style 'line'
2020-02-17 15:42:06,090 INFO [org.geoserver] - Loaded style 'polygon'
2020-02-17 15:42:06,091 INFO [org.geoserver] - Loaded default workspace flood
2020-02-17 15:42:06,095 INFO [org.geoserver] - Loaded workspace 'flood'
2020-02-17 15:42:06,100 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-02-17 15:42:06,101 INFO [org.geoserver] - Loaded style 'world'
2020-02-17 15:42:06,102 INFO [org.geoserver] - Loaded style 'stations'
2020-02-17 15:42:06,103 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-02-17 15:42:06,104 INFO [org.geoserver] - Loaded style 'clustered'
2020-02-17 15:42:06,105 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-02-17 15:42:06,106 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-02-17 15:42:06,106 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-02-17 15:42:06,107 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-02-17 15:42:06,108 INFO [org.geoserver] - Loaded style 'HFM'
2020-02-17 15:42:06,108 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-02-17 15:42:06,109 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-02-17 15:42:06,110 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-02-17 15:42:06,110 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-02-17 15:42:06,111 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-02-17 15:42:06,111 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-02-17 15:42:06,368 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-02-17 15:42:06,371 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-02-17 15:42:07,632 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-02-17 15:42:07,636 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 15:42:08,114 INFO [org.geoserver] - Loaded layer 'stations'
2020-02-17 15:42:08,116 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-02-17 15:42:08,117 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-17 15:42:08,418 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-02-17 15:42:08,546 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-02-17 15:42:08,555 INFO [org.geoserver] - Loaded service 'WFSInfoImpl-9be857d:17053325c6c:-8000', enabled
2020-02-17 15:42:08,559 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-02-17 15:42:08,572 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-02-17 15:42:08,586 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-17 15:42:08,601 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-17 15:42:08,601 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-17 15:42:08,601 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-17 15:42:08,642 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-17 15:42:08,642 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-02-17 15:42:08,642 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-02-17 15:42:08,642 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-17 15:42:08,725 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-02-17 15:42:08,726 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-02-17 15:42:08,727 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-02-17 15:42:08,736 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-02-17 15:42:08,736 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-02-17 15:42:08,736 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-02-17 15:42:08,736 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-02-17 15:42:08,736 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-02-17 15:42:08,742 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-17 15:42:08,742 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-02-17 15:42:08,743 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-17 15:42:08,788 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-02-17 15:42:08,871 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-02-17 15:42:08,871 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-02-17 15:42:08,880 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-02-17 15:42:10,026 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-02-17 15:42:10,026 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-02-17 15:42:10,027 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-02-17 15:42:10,198 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-17 15:42:10,243 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-17 15:42:10,255 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-17 15:42:10,258 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-02-17 15:42:10,258 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-02-17 15:42:10,260 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-02-17 15:42:10,275 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-02-17 15:42:10,477 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-02-17 15:42:10,477 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-02-17 15:42:10,670 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-02-17 15:42:10,670 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-02-17 15:42:10,670 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-02-17 15:42:13,980 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-02-17 15:42:14,004 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-02-17 15:42:14,011 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-02-17 15:42:14,013 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-02-17 15:42:14,060 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-02-17 15:42:14,070 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-02-17 15:42:14,070 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-02-17 15:42:14,102 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-17 15:42:14,468 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-02-17 15:42:14,468 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-02-17 15:42:14,523 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-02-17 15:42:14,523 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-02-17 15:42:14,699 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-02-17 15:42:14,702 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-02-17 15:42:14,874 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-02-17 15:42:14,874 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-02-17 15:42:19,157 INFO [geoserver.security] - Strong cryptography is available
2020-02-17 15:42:59,526 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:43:00,346 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@21a5e553 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-299903.07642816455 6803813.139685301, -299903.07642816455 6809827.287133982, -290896.28920901957 6809827.287133982, -290896.28920901957 6803813.139685301, -299903.07642816455 6803813.139685301)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-299903.07642816455 6803813.139685301, -299903.07642816455 6809827.287133982, -290896.28920901957 6809827.287133982, -290896.28920901957 6803813.139685301, -299903.07642816455 6803813.139685301)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-299903.07642816455 6803813.139685301, -299903.07642816455 6809827.287133982, -290896.28920901957 6809827.287133982, -290896.28920901957 6803813.139685301, -299903.07642816455 6803813.139685301)) ]
2020-02-17 15:43:00,385 INFO [wfs.json] - about to encode JSON
2020-02-17 15:43:04,350 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:43:04,544 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@26d8c571 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-304695.14911527396 6801547.0089266375, -304695.14911527396 6813575.303824, -286681.5746769839 6813575.303824, -286681.5746769839 6801547.0089266375, -304695.14911527396 6801547.0089266375)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-304695.14911527396 6801547.0089266375, -304695.14911527396 6813575.303824, -286681.5746769839 6813575.303824, -286681.5746769839 6801547.0089266375, -304695.14911527396 6801547.0089266375)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-304695.14911527396 6801547.0089266375, -304695.14911527396 6813575.303824, -286681.5746769839 6813575.303824, -286681.5746769839 6801547.0089266375, -304695.14911527396 6801547.0089266375)) ]
2020-02-17 15:43:04,548 INFO [wfs.json] - about to encode JSON
2020-02-17 15:43:06,209 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:43:06,403 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@3bdae26b (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-314279.29448949225 6797014.747409312, -314279.29448949225 6821071.337204037, -278252.1456129121 6821071.337204037, -278252.1456129121 6797014.747409312, -314279.29448949225 6797014.747409312)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-314279.29448949225 6797014.747409312, -314279.29448949225 6821071.337204037, -278252.1456129121 6821071.337204037, -278252.1456129121 6797014.747409312, -314279.29448949225 6797014.747409312)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-314279.29448949225 6797014.747409312, -314279.29448949225 6821071.337204037, -278252.1456129121 6821071.337204037, -278252.1456129121 6797014.747409312, -314279.29448949225 6797014.747409312)) ]
2020-02-17 15:43:06,405 INFO [wfs.json] - about to encode JSON
2020-02-17 15:46:00,011 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 15:46:00,187 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 15:46:00,188 INFO [wfs.json] - about to encode JSON
2020-02-17 16:01:00,013 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:01:00,183 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 16:01:00,186 INFO [wfs.json] - about to encode JSON
2020-02-17 16:16:00,010 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:16:00,108 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 16:16:00,109 INFO [wfs.json] - about to encode JSON
2020-02-17 16:27:14,549 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:27:14,647 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 16:27:14,648 INFO [wfs.json] - about to encode JSON
2020-02-17 16:27:41,037 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:27:41,230 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@141cf4f8 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-271023.11852369865 6941557.472639331, -271023.11852369865 7038541.592267233, -125779.70096895384 7038541.592267233, -125779.70096895384 6941557.472639331, -271023.11852369865 6941557.472639331)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-271023.11852369865 6941557.472639331, -271023.11852369865 7038541.592267233, -125779.70096895384 7038541.592267233, -125779.70096895384 6941557.472639331, -271023.11852369865 6941557.472639331)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-271023.11852369865 6941557.472639331, -271023.11852369865 7038541.592267233, -125779.70096895384 7038541.592267233, -125779.70096895384 6941557.472639331, -271023.11852369865 6941557.472639331)) ]
2020-02-17 16:27:41,232 INFO [wfs.json] - about to encode JSON
2020-02-17 16:31:00,014 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:31:00,114 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 16:31:00,115 INFO [wfs.json] - about to encode JSON
2020-02-17 16:37:51,847 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:37:52,082 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@38032b19 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-159362.13186652467 6877897.377642772, -159362.13186652467 6942989.046590683, -109215.51010905442 6942989.046590683, -109215.51010905442 6877897.377642772, -159362.13186652467 6877897.377642772)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-159362.13186652467 6877897.377642772, -159362.13186652467 6942989.046590683, -109215.51010905442 6942989.046590683, -109215.51010905442 6877897.377642772, -159362.13186652467 6877897.377642772)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-159362.13186652467 6877897.377642772, -159362.13186652467 6942989.046590683, -109215.51010905442 6942989.046590683, -109215.51010905442 6877897.377642772, -159362.13186652467 6877897.377642772)) ]
2020-02-17 16:37:52,083 INFO [wfs.json] - about to encode JSON
2020-02-17 16:37:55,775 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:37:55,987 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2220b88a (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-160037.03631501822 6877021.333555195, -160037.03631501822 6943865.091992197, -108540.60481515236 6943865.091992197, -108540.60481515236 6877021.333555195, -160037.03631501822 6877021.333555195)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-160037.03631501822 6877021.333555195, -160037.03631501822 6943865.091992197, -108540.60481515236 6943865.091992197, -108540.60481515236 6877021.333555195, -160037.03631501822 6877021.333555195)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-160037.03631501822 6877021.333555195, -160037.03631501822 6943865.091992197, -108540.60481515236 6943865.091992197, -108540.60481515236 6877021.333555195, -160037.03631501822 6877021.333555195)) ]
2020-02-17 16:37:55,991 INFO [wfs.json] - about to encode JSON
2020-02-17 16:40:09,606 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:40:09,699 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 16:40:09,701 INFO [wfs.json] - about to encode JSON
2020-02-17 16:40:12,938 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:40:13,146 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@75d84a9f (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-143351.74723349567 6898576.5357086025, -143351.74723349567 6932897.922858261, -116910.5505733989 6932897.922858261, -116910.5505733989 6898576.5357086025, -143351.74723349567 6898576.5357086025)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-143351.74723349567 6898576.5357086025, -143351.74723349567 6932897.922858261, -116910.5505733989 6932897.922858261, -116910.5505733989 6898576.5357086025, -143351.74723349567 6898576.5357086025)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-143351.74723349567 6898576.5357086025, -143351.74723349567 6932897.922858261, -116910.5505733989 6932897.922858261, -116910.5505733989 6898576.5357086025, -143351.74723349567 6898576.5357086025)) ]
2020-02-17 16:40:13,149 INFO [wfs.json] - about to encode JSON
2020-02-17 16:40:56,696 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:40:56,792 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 16:40:56,793 INFO [wfs.json] - about to encode JSON
2020-02-17 16:41:01,374 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:41:01,558 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@179e2edd (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-143707.6880840837 6898114.542558972, -143707.6880840837 6933359.971376823, -116554.6097228109 6933359.971376823, -116554.6097228109 6898114.542558972, -143707.6880840837 6898114.542558972)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-143707.6880840837 6898114.542558972, -143707.6880840837 6933359.971376823, -116554.6097228109 6933359.971376823, -116554.6097228109 6898114.542558972, -143707.6880840837 6898114.542558972)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-143707.6880840837 6898114.542558972, -143707.6880840837 6933359.971376823, -116554.6097228109 6933359.971376823, -116554.6097228109 6898114.542558972, -143707.6880840837 6898114.542558972)) ]
2020-02-17 16:41:01,560 INFO [wfs.json] - about to encode JSON
2020-02-17 16:41:37,450 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:41:37,625 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7635c8ca (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-144073.1514706015 6897640.225624283, -144073.1514706015 6933834.417127798, -116189.14633629311 6933834.417127798, -116189.14633629311 6897640.225624283, -144073.1514706015 6897640.225624283)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-144073.1514706015 6897640.225624283, -144073.1514706015 6933834.417127798, -116189.14633629311 6933834.417127798, -116189.14633629311 6897640.225624283, -144073.1514706015 6897640.225624283)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-144073.1514706015 6897640.225624283, -144073.1514706015 6933834.417127798, -116189.14633629311 6933834.417127798, -116189.14633629311 6897640.225624283, -144073.1514706015 6897640.225624283)) ]
2020-02-17 16:41:37,629 INFO [wfs.json] - about to encode JSON
2020-02-17 16:49:37,476 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:49:37,573 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 16:49:37,575 INFO [wfs.json] - about to encode JSON
2020-02-17 16:51:20,476 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:51:20,572 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 16:51:20,573 INFO [wfs.json] - about to encode JSON
2020-02-17 16:57:35,377 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:57:35,475 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 16:57:35,477 INFO [wfs.json] - about to encode JSON
2020-02-17 16:58:20,460 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 16:58:20,554 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 16:58:20,556 INFO [wfs.json] - about to encode JSON
2020-02-17 17:09:24,029 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 17:09:24,129 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 17:09:24,131 INFO [wfs.json] - about to encode JSON
2020-02-17 17:16:00,015 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-17 17:16:00,115 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-17 17:16:00,116 INFO [wfs.json] - about to encode JSON
2020-02-17 17:27:56,890 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-02-17 17:27:56,891 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-02-17 17:27:56,894 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-02-17 17:27:56,895 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-02-17 17:27:56,895 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-02-17 17:27:56,895 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-02-17 17:27:56,895 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-02-17 17:27:56,896 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-02-17 17:27:56,896 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-02-17 17:27:56,896 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-02-17 17:27:56,896 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-02-17 17:27:56,905 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-02-24 10:28:16,886 INFO [org.geoserver] - Loaded style 'point'
2020-02-24 10:28:16,888 INFO [org.geoserver] - Loaded style 'generic'
2020-02-24 10:28:16,889 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-02-24 10:28:16,890 INFO [org.geoserver] - Loaded style 'raster'
2020-02-24 10:28:16,891 INFO [org.geoserver] - Loaded style 'line'
2020-02-24 10:28:16,891 INFO [org.geoserver] - Loaded style 'polygon'
2020-02-24 10:28:16,892 INFO [org.geoserver] - Loaded default workspace flood
2020-02-24 10:28:16,895 INFO [org.geoserver] - Loaded workspace 'flood'
2020-02-24 10:28:16,900 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-02-24 10:28:16,901 INFO [org.geoserver] - Loaded style 'world'
2020-02-24 10:28:16,902 INFO [org.geoserver] - Loaded style 'stations'
2020-02-24 10:28:16,903 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-02-24 10:28:16,905 INFO [org.geoserver] - Loaded style 'clustered'
2020-02-24 10:28:16,906 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-02-24 10:28:16,907 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-02-24 10:28:16,908 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-02-24 10:28:16,909 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-02-24 10:28:16,910 INFO [org.geoserver] - Loaded style 'HFM'
2020-02-24 10:28:16,911 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-02-24 10:28:16,912 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-02-24 10:28:16,913 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-02-24 10:28:16,915 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-02-24 10:28:16,916 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-02-24 10:28:16,917 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-02-24 10:28:17,184 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-02-24 10:28:17,186 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-02-24 10:28:18,915 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-02-24 10:28:18,922 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-24 10:28:19,410 INFO [org.geoserver] - Loaded layer 'stations'
2020-02-24 10:28:19,415 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-02-24 10:28:19,416 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-24 10:28:19,724 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-02-24 10:28:19,897 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-02-24 10:28:19,913 INFO [org.geoserver] - Loaded service 'WFSInfoImpl-9be857d:17053325c6c:-8000', enabled
2020-02-24 10:28:19,918 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-02-24 10:28:19,937 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-02-24 10:28:19,957 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-24 10:28:19,973 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-24 10:28:19,973 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-24 10:28:19,973 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-24 10:28:20,025 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-24 10:28:20,025 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-02-24 10:28:20,026 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-02-24 10:28:20,026 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-24 10:28:20,165 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-02-24 10:28:20,165 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-02-24 10:28:20,165 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-02-24 10:28:20,176 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-02-24 10:28:20,176 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-02-24 10:28:20,176 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-02-24 10:28:20,176 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-02-24 10:28:20,176 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-02-24 10:28:20,183 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-24 10:28:20,183 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-02-24 10:28:20,183 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-24 10:28:20,242 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-02-24 10:28:20,347 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-02-24 10:28:20,347 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-02-24 10:28:20,362 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-02-24 10:28:21,481 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-02-24 10:28:21,481 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-02-24 10:28:21,481 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-02-24 10:28:21,577 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-24 10:28:21,585 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-24 10:28:21,591 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-24 10:28:21,592 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-02-24 10:28:21,592 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-02-24 10:28:21,593 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-02-24 10:28:21,602 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-02-24 10:28:21,735 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-02-24 10:28:21,735 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-02-24 10:28:21,894 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-02-24 10:28:21,894 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-02-24 10:28:21,894 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-02-24 10:28:24,030 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-02-24 10:28:24,054 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-02-24 10:28:24,061 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-02-24 10:28:24,062 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-02-24 10:28:24,097 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-02-24 10:28:24,105 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-02-24 10:28:24,105 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-02-24 10:28:24,129 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-24 10:28:24,391 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-02-24 10:28:24,391 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-02-24 10:28:24,447 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-02-24 10:28:24,447 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-02-24 10:28:24,639 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-02-24 10:28:24,641 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-02-24 10:28:24,833 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-02-24 10:28:24,833 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-02-24 10:28:49,486 INFO [geoserver.security] - Strong cryptography is available
2020-02-24 10:32:37,971 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 10:32:38,620 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 10:32:38,641 INFO [wfs.json] - about to encode JSON
2020-02-24 10:35:14,134 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 10:35:14,236 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 10:35:14,240 INFO [wfs.json] - about to encode JSON
2020-02-24 10:35:58,920 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 10:35:59,022 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 10:35:59,023 INFO [wfs.json] - about to encode JSON
2020-02-24 10:36:20,982 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 10:36:21,085 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 10:36:21,086 INFO [wfs.json] - about to encode JSON
2020-02-24 10:37:27,078 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 10:37:27,183 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 10:37:27,185 INFO [wfs.json] - about to encode JSON
2020-02-24 10:38:32,415 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 10:38:32,517 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 10:38:32,518 INFO [wfs.json] - about to encode JSON
2020-02-24 10:38:45,324 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 10:38:45,425 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 10:38:45,426 INFO [wfs.json] - about to encode JSON
2020-02-24 10:41:31,681 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 10:41:31,791 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 10:41:31,793 INFO [wfs.json] - about to encode JSON
2020-02-24 10:46:00,012 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 10:46:00,114 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 10:46:00,116 INFO [wfs.json] - about to encode JSON
2020-02-24 10:46:21,747 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 10:46:22,418 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1dd3c5ba (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-136905.32507242978 6866667.369115365, -136905.32507242978 6874616.121879426, -125001.27293297222 6874616.121879426, -125001.27293297222 6866667.369115365, -136905.32507242978 6866667.369115365)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-136905.32507242978 6866667.369115365, -136905.32507242978 6874616.121879426, -125001.27293297222 6874616.121879426, -125001.27293297222 6866667.369115365, -136905.32507242978 6866667.369115365)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-136905.32507242978 6866667.369115365, -136905.32507242978 6874616.121879426, -125001.27293297222 6874616.121879426, -125001.27293297222 6866667.369115365, -136905.32507242978 6866667.369115365)) ]
2020-02-24 10:46:22,420 INFO [wfs.json] - about to encode JSON
2020-02-24 10:46:29,986 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 10:46:30,175 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@47bfc29 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-137020.85489262783 6866590.160712208, -137020.85489262783 6874693.200095122, -124885.74311277419 6874693.200095122, -124885.74311277419 6866590.160712208, -137020.85489262783 6866590.160712208)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-137020.85489262783 6866590.160712208, -137020.85489262783 6874693.200095122, -124885.74311277419 6874693.200095122, -124885.74311277419 6866590.160712208, -137020.85489262783 6866590.160712208)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-137020.85489262783 6866590.160712208, -137020.85489262783 6874693.200095122, -124885.74311277419 6874693.200095122, -124885.74311277419 6866590.160712208, -137020.85489262783 6866590.160712208)) ]
2020-02-24 10:46:30,176 INFO [wfs.json] - about to encode JSON
2020-02-24 10:46:35,651 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 10:46:35,908 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@493b1c00 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-140169.52355477435 6864519.2868904425, -140169.52355477435 6876462.572560002, -122283.25893604309 6876462.572560002, -122283.25893604309 6864519.2868904425, -140169.52355477435 6864519.2868904425)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-140169.52355477435 6864519.2868904425, -140169.52355477435 6876462.572560002, -122283.25893604309 6876462.572560002, -122283.25893604309 6864519.2868904425, -140169.52355477435 6864519.2868904425)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-140169.52355477435 6864519.2868904425, -140169.52355477435 6876462.572560002, -122283.25893604309 6876462.572560002, -122283.25893604309 6864519.2868904425, -140169.52355477435 6864519.2868904425)) ]
2020-02-24 10:46:35,911 INFO [wfs.json] - about to encode JSON
2020-02-24 10:46:36,083 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 10:46:36,577 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@21388858 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-162095.3952700136 6847626.29990026, -162095.3952700136 6886922.219945118, -103245.82541083537 6886922.219945118, -103245.82541083537 6847626.29990026, -162095.3952700136 6847626.29990026)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-162095.3952700136 6847626.29990026, -162095.3952700136 6886922.219945118, -103245.82541083537 6886922.219945118, -103245.82541083537 6847626.29990026, -162095.3952700136 6847626.29990026)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-162095.3952700136 6847626.29990026, -162095.3952700136 6886922.219945118, -103245.82541083537 6886922.219945118, -103245.82541083537 6847626.29990026, -162095.3952700136 6847626.29990026)) ]
2020-02-24 10:46:36,579 INFO [wfs.json] - about to encode JSON
2020-02-24 11:01:00,006 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 11:01:00,177 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 11:01:00,178 INFO [wfs.json] - about to encode JSON
2020-02-24 11:16:00,010 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 11:16:00,124 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 11:16:00,125 INFO [wfs.json] - about to encode JSON
2020-02-24 11:44:07,805 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 11:44:07,911 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 11:44:07,916 INFO [wfs.json] - about to encode JSON
2020-02-24 11:45:43,220 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 11:45:43,323 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 11:45:43,324 INFO [wfs.json] - about to encode JSON
2020-02-24 11:46:07,660 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 11:46:07,764 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 11:46:07,765 INFO [wfs.json] - about to encode JSON
2020-02-24 11:47:30,569 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 11:47:30,683 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 11:47:30,684 INFO [wfs.json] - about to encode JSON
2020-02-24 11:47:45,203 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 11:47:45,306 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 11:47:45,308 INFO [wfs.json] - about to encode JSON
2020-02-24 11:50:56,496 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 11:50:56,598 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 11:50:56,600 INFO [wfs.json] - about to encode JSON
2020-02-24 11:51:18,939 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 11:51:19,039 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 11:51:19,040 INFO [wfs.json] - about to encode JSON
2020-02-24 11:51:43,583 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 11:51:43,684 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 11:51:43,684 INFO [wfs.json] - about to encode JSON
2020-02-24 11:54:20,984 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 11:54:21,084 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 11:54:21,085 INFO [wfs.json] - about to encode JSON
2020-02-24 12:07:14,670 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:07:14,772 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:07:14,773 INFO [wfs.json] - about to encode JSON
2020-02-24 12:08:59,478 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:08:59,581 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:08:59,583 INFO [wfs.json] - about to encode JSON
2020-02-24 12:10:09,198 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:10:09,298 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:10:09,299 INFO [wfs.json] - about to encode JSON
2020-02-24 12:10:43,939 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:10:44,042 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:10:44,044 INFO [wfs.json] - about to encode JSON
2020-02-24 12:12:45,250 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:12:45,365 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:12:45,366 INFO [wfs.json] - about to encode JSON
2020-02-24 12:13:19,156 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:13:19,256 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:13:19,257 INFO [wfs.json] - about to encode JSON
2020-02-24 12:13:32,251 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:13:32,397 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:13:32,399 INFO [wfs.json] - about to encode JSON
2020-02-24 12:14:19,722 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:14:19,823 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:14:19,824 INFO [wfs.json] - about to encode JSON
2020-02-24 12:16:32,027 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:16:32,144 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:16:32,145 INFO [wfs.json] - about to encode JSON
2020-02-24 12:17:22,917 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:17:23,021 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:17:23,022 INFO [wfs.json] - about to encode JSON
2020-02-24 12:19:59,811 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:19:59,913 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:19:59,914 INFO [wfs.json] - about to encode JSON
2020-02-24 12:23:11,513 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:23:11,620 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:23:11,621 INFO [wfs.json] - about to encode JSON
2020-02-24 12:24:00,528 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:24:00,626 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:24:00,627 INFO [wfs.json] - about to encode JSON
2020-02-24 12:26:19,839 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:26:19,940 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:26:19,941 INFO [wfs.json] - about to encode JSON
2020-02-24 12:27:13,130 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:27:13,234 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:27:13,235 INFO [wfs.json] - about to encode JSON
2020-02-24 12:31:30,858 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:31:30,959 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:31:30,960 INFO [wfs.json] - about to encode JSON
2020-02-24 12:32:08,245 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:32:08,371 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:32:08,373 INFO [wfs.json] - about to encode JSON
2020-02-24 12:57:17,587 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 12:57:17,693 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 12:57:17,694 INFO [wfs.json] - about to encode JSON
2020-02-24 13:02:46,365 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 13:02:46,466 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 13:02:46,468 INFO [wfs.json] - about to encode JSON
2020-02-24 13:08:30,873 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 13:08:30,981 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 13:08:30,982 INFO [wfs.json] - about to encode JSON
2020-02-24 13:13:18,073 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 13:13:18,176 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 13:13:18,177 INFO [wfs.json] - about to encode JSON
2020-02-24 13:15:52,751 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 13:15:52,854 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 13:15:52,855 INFO [wfs.json] - about to encode JSON
2020-02-24 13:24:29,656 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 13:24:29,761 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 13:24:29,762 INFO [wfs.json] - about to encode JSON
2020-02-24 13:24:50,283 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 13:24:50,383 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 13:24:50,384 INFO [wfs.json] - about to encode JSON
2020-02-24 13:33:33,038 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 13:33:33,141 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 13:33:33,142 INFO [wfs.json] - about to encode JSON
2020-02-24 13:48:39,186 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 13:48:39,295 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 13:48:39,296 INFO [wfs.json] - about to encode JSON
2020-02-24 13:48:47,413 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 13:48:47,518 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 13:48:47,519 INFO [wfs.json] - about to encode JSON
2020-02-24 13:50:35,798 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 13:50:35,902 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 13:50:35,903 INFO [wfs.json] - about to encode JSON
2020-02-24 14:05:40,379 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 14:05:40,482 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 14:05:40,484 INFO [wfs.json] - about to encode JSON
2020-02-24 14:24:11,109 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 14:24:11,214 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 14:24:11,216 INFO [wfs.json] - about to encode JSON
2020-02-24 14:24:23,464 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 14:24:23,567 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 14:24:23,568 INFO [wfs.json] - about to encode JSON
2020-02-24 14:24:56,434 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 14:24:56,536 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 14:24:56,537 INFO [wfs.json] - about to encode JSON
2020-02-24 14:28:48,704 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 14:28:48,806 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 14:28:48,807 INFO [wfs.json] - about to encode JSON
2020-02-24 14:31:00,018 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 14:31:00,122 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 14:31:00,125 INFO [wfs.json] - about to encode JSON
2020-02-24 14:32:13,494 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 14:32:13,595 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 14:32:13,596 INFO [wfs.json] - about to encode JSON
2020-02-24 14:32:58,022 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 14:32:58,126 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 14:32:58,127 INFO [wfs.json] - about to encode JSON
2020-02-24 15:00:10,978 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:00:11,080 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:00:11,080 INFO [wfs.json] - about to encode JSON
2020-02-24 15:08:51,664 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:08:51,775 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:08:51,777 INFO [wfs.json] - about to encode JSON
2020-02-24 15:20:08,246 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:20:08,352 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:20:08,353 INFO [wfs.json] - about to encode JSON
2020-02-24 15:24:22,153 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:24:22,259 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:24:22,260 INFO [wfs.json] - about to encode JSON
2020-02-24 15:25:01,178 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:25:01,285 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:25:01,287 INFO [wfs.json] - about to encode JSON
2020-02-24 15:28:12,012 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:28:12,116 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:28:12,117 INFO [wfs.json] - about to encode JSON
2020-02-24 15:28:43,475 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:28:43,582 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:28:43,583 INFO [wfs.json] - about to encode JSON
2020-02-24 15:28:52,525 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:28:52,634 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:28:52,635 INFO [wfs.json] - about to encode JSON
2020-02-24 15:31:18,275 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:31:18,385 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:31:18,387 INFO [wfs.json] - about to encode JSON
2020-02-24 15:31:40,960 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:31:41,064 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:31:41,065 INFO [wfs.json] - about to encode JSON
2020-02-24 15:35:17,099 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:35:17,208 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:35:17,209 INFO [wfs.json] - about to encode JSON
2020-02-24 15:36:01,623 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:36:02,154 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:36:02,156 INFO [wfs.json] - about to encode JSON
2020-02-24 15:38:32,607 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:38:32,715 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:38:32,716 INFO [wfs.json] - about to encode JSON
2020-02-24 15:45:20,969 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:45:21,072 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:45:21,072 INFO [wfs.json] - about to encode JSON
2020-02-24 15:46:13,813 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:46:13,915 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:46:13,916 INFO [wfs.json] - about to encode JSON
2020-02-24 15:49:24,213 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 15:49:24,316 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 15:49:24,317 INFO [wfs.json] - about to encode JSON
2020-02-24 16:08:03,203 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:08:03,390 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:08:03,391 INFO [wfs.json] - about to encode JSON
2020-02-24 16:20:14,174 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:20:14,392 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:20:14,393 INFO [wfs.json] - about to encode JSON
2020-02-24 16:37:09,400 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:37:09,502 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:37:09,503 INFO [wfs.json] - about to encode JSON
2020-02-24 16:38:20,258 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:38:20,380 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:38:20,381 INFO [wfs.json] - about to encode JSON
2020-02-24 16:39:39,096 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:39:39,199 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:39:39,200 INFO [wfs.json] - about to encode JSON
2020-02-24 16:40:57,621 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:40:57,724 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:40:57,725 INFO [wfs.json] - about to encode JSON
2020-02-24 16:41:45,953 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:41:46,052 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:41:46,052 INFO [wfs.json] - about to encode JSON
2020-02-24 16:42:22,974 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:42:23,101 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:42:23,103 INFO [wfs.json] - about to encode JSON
2020-02-24 16:43:00,612 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:43:00,714 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:43:00,716 INFO [wfs.json] - about to encode JSON
2020-02-24 16:44:30,924 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:44:31,031 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:44:31,032 INFO [wfs.json] - about to encode JSON
2020-02-24 16:48:03,889 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:48:03,989 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:48:03,990 INFO [wfs.json] - about to encode JSON
2020-02-24 16:50:17,655 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:50:17,842 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:50:17,843 INFO [wfs.json] - about to encode JSON
2020-02-24 16:53:08,966 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:53:09,074 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:53:09,075 INFO [wfs.json] - about to encode JSON
2020-02-24 16:53:59,603 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:53:59,710 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:53:59,711 INFO [wfs.json] - about to encode JSON
2020-02-24 16:54:38,148 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:54:38,252 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:54:38,254 INFO [wfs.json] - about to encode JSON
2020-02-24 16:59:02,237 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:59:02,342 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:59:02,343 INFO [wfs.json] - about to encode JSON
2020-02-24 16:59:20,352 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:59:20,456 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:59:20,457 INFO [wfs.json] - about to encode JSON
2020-02-24 16:59:47,293 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 16:59:47,398 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 16:59:47,399 INFO [wfs.json] - about to encode JSON
2020-02-24 17:00:10,701 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:00:10,802 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:00:10,803 INFO [wfs.json] - about to encode JSON
2020-02-24 17:00:34,307 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:00:34,411 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:00:34,411 INFO [wfs.json] - about to encode JSON
2020-02-24 17:00:49,063 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:00:49,167 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:00:49,168 INFO [wfs.json] - about to encode JSON
2020-02-24 17:01:00,016 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:01:00,136 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:01:00,137 INFO [wfs.json] - about to encode JSON
2020-02-24 17:01:43,917 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:01:44,019 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:01:44,020 INFO [wfs.json] - about to encode JSON
2020-02-24 17:03:05,696 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:03:05,801 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:03:05,802 INFO [wfs.json] - about to encode JSON
2020-02-24 17:03:36,741 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:03:36,843 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:03:36,845 INFO [wfs.json] - about to encode JSON
2020-02-24 17:03:53,251 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:03:53,358 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:03:53,359 INFO [wfs.json] - about to encode JSON
2020-02-24 17:08:46,838 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:08:46,944 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:08:46,945 INFO [wfs.json] - about to encode JSON
2020-02-24 17:10:32,559 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:10:32,659 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:10:32,661 INFO [wfs.json] - about to encode JSON
2020-02-24 17:14:57,007 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:14:57,131 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:14:57,132 INFO [wfs.json] - about to encode JSON
2020-02-24 17:16:00,059 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:16:00,167 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:16:00,168 INFO [wfs.json] - about to encode JSON
2020-02-24 17:16:40,801 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:16:40,905 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:16:40,907 INFO [wfs.json] - about to encode JSON
2020-02-24 17:17:21,028 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:17:21,144 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:17:21,145 INFO [wfs.json] - about to encode JSON
2020-02-24 17:21:50,418 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:21:50,522 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:21:50,522 INFO [wfs.json] - about to encode JSON
2020-02-24 17:26:41,530 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:26:41,632 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:26:41,633 INFO [wfs.json] - about to encode JSON
2020-02-24 17:29:12,551 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:29:12,655 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:29:12,657 INFO [wfs.json] - about to encode JSON
2020-02-24 17:29:33,789 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:29:33,888 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:29:33,889 INFO [wfs.json] - about to encode JSON
2020-02-24 17:30:26,901 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:30:27,009 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:30:27,010 INFO [wfs.json] - about to encode JSON
2020-02-24 17:31:01,858 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:31:01,960 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:31:01,962 INFO [wfs.json] - about to encode JSON
2020-02-24 17:31:21,113 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:31:21,212 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:31:21,213 INFO [wfs.json] - about to encode JSON
2020-02-24 17:33:22,511 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:33:22,611 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:33:22,612 INFO [wfs.json] - about to encode JSON
2020-02-24 17:34:25,743 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:34:25,845 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:34:25,846 INFO [wfs.json] - about to encode JSON
2020-02-24 17:35:04,968 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:35:05,068 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:35:05,069 INFO [wfs.json] - about to encode JSON
2020-02-24 17:37:56,437 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:37:56,540 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:37:56,541 INFO [wfs.json] - about to encode JSON
2020-02-24 17:38:59,606 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-24 17:38:59,709 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-24 17:38:59,710 INFO [wfs.json] - about to encode JSON
2020-02-24 17:40:45,992 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-02-24 17:40:45,992 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-02-24 17:40:45,995 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-02-24 17:40:45,995 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-02-24 17:40:45,996 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-02-24 17:40:45,996 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-02-24 17:40:45,996 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-02-24 17:40:45,996 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-02-24 17:40:45,997 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-02-24 17:40:45,997 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-02-24 17:40:45,997 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-02-24 17:40:46,008 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-02-27 12:04:42,122 INFO [org.geoserver] - Loaded style 'point'
2020-02-27 12:04:42,123 INFO [org.geoserver] - Loaded style 'generic'
2020-02-27 12:04:42,124 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-02-27 12:04:42,125 INFO [org.geoserver] - Loaded style 'raster'
2020-02-27 12:04:42,125 INFO [org.geoserver] - Loaded style 'line'
2020-02-27 12:04:42,126 INFO [org.geoserver] - Loaded style 'polygon'
2020-02-27 12:04:42,127 INFO [org.geoserver] - Loaded default workspace flood
2020-02-27 12:04:42,130 INFO [org.geoserver] - Loaded workspace 'flood'
2020-02-27 12:04:42,135 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-02-27 12:04:42,136 INFO [org.geoserver] - Loaded style 'world'
2020-02-27 12:04:42,137 INFO [org.geoserver] - Loaded style 'stations'
2020-02-27 12:04:42,138 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-02-27 12:04:42,139 INFO [org.geoserver] - Loaded style 'clustered'
2020-02-27 12:04:42,140 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-02-27 12:04:42,140 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-02-27 12:04:42,141 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-02-27 12:04:42,142 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-02-27 12:04:42,143 INFO [org.geoserver] - Loaded style 'HFM'
2020-02-27 12:04:42,143 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-02-27 12:04:42,144 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-02-27 12:04:42,145 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-02-27 12:04:42,146 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-02-27 12:04:42,147 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-02-27 12:04:42,147 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-02-27 12:04:42,412 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-02-27 12:04:42,414 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-02-27 12:04:43,867 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-02-27 12:04:43,874 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-27 12:04:44,340 INFO [org.geoserver] - Loaded layer 'stations'
2020-02-27 12:04:44,344 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-02-27 12:04:44,344 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-27 12:04:44,646 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-02-27 12:04:44,778 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-02-27 12:04:44,793 INFO [org.geoserver] - Loaded service 'WFSInfoImpl-9be857d:17053325c6c:-8000', enabled
2020-02-27 12:04:44,798 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-02-27 12:04:44,813 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-02-27 12:04:44,825 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-27 12:04:44,840 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-27 12:04:44,840 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-27 12:04:44,840 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-27 12:04:44,886 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-27 12:04:44,886 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-02-27 12:04:44,887 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-02-27 12:04:44,887 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-27 12:04:44,981 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-02-27 12:04:44,981 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-02-27 12:04:44,982 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-02-27 12:04:44,992 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-02-27 12:04:44,993 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-02-27 12:04:44,993 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-02-27 12:04:44,993 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-02-27 12:04:44,993 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-02-27 12:04:45,003 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-27 12:04:45,003 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-02-27 12:04:45,003 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-27 12:04:45,064 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-02-27 12:04:45,168 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-02-27 12:04:45,168 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-02-27 12:04:45,175 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-02-27 12:04:46,103 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-02-27 12:04:46,103 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-02-27 12:04:46,103 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-02-27 12:04:46,218 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-27 12:04:46,240 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-27 12:04:46,245 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-27 12:04:46,248 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-02-27 12:04:46,248 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-02-27 12:04:46,249 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-02-27 12:04:46,260 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-02-27 12:04:46,444 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-02-27 12:04:46,444 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-02-27 12:04:46,610 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-02-27 12:04:46,610 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-02-27 12:04:46,610 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-02-27 12:04:48,726 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-02-27 12:04:48,748 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-02-27 12:04:48,754 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-02-27 12:04:48,755 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-02-27 12:04:48,784 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-02-27 12:04:48,791 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-02-27 12:04:48,791 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-02-27 12:04:48,813 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-27 12:04:49,042 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-02-27 12:04:49,043 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-02-27 12:04:49,089 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-02-27 12:04:49,090 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-02-27 12:04:49,268 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-02-27 12:04:49,271 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-02-27 12:04:49,419 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-02-27 12:04:49,419 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-02-27 12:05:53,601 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 12:05:53,984 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 12:05:54,005 INFO [wfs.json] - about to encode JSON
2020-02-27 12:07:59,881 INFO [geoserver.security] - Strong cryptography is available
2020-02-27 12:16:00,014 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 12:16:00,596 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 12:16:00,601 INFO [wfs.json] - about to encode JSON
2020-02-27 12:31:00,009 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 12:31:00,116 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 12:31:00,118 INFO [wfs.json] - about to encode JSON
2020-02-27 12:46:00,013 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 12:46:00,113 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 12:46:00,115 INFO [wfs.json] - about to encode JSON
2020-02-27 13:01:00,008 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:01:00,111 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:01:00,112 INFO [wfs.json] - about to encode JSON
2020-02-27 13:06:14,199 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:06:14,307 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:06:14,309 INFO [wfs.json] - about to encode JSON
2020-02-27 13:18:59,585 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:18:59,687 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:18:59,689 INFO [wfs.json] - about to encode JSON
2020-02-27 13:20:06,173 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:20:06,274 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:20:06,276 INFO [wfs.json] - about to encode JSON
2020-02-27 13:23:04,916 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:23:05,016 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:23:05,018 INFO [wfs.json] - about to encode JSON
2020-02-27 13:24:49,919 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:24:50,018 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:24:50,020 INFO [wfs.json] - about to encode JSON
2020-02-27 13:29:31,406 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:29:31,503 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:29:31,506 INFO [wfs.json] - about to encode JSON
2020-02-27 13:31:00,009 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:31:00,116 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:31:00,117 INFO [wfs.json] - about to encode JSON
2020-02-27 13:31:49,133 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:31:49,235 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:31:49,236 INFO [wfs.json] - about to encode JSON
2020-02-27 13:32:04,562 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:32:04,953 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@482bde37 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-324636.257609818 6919104.005421084, -324636.257609818 6942767.777701047, -289349.844764697 6942767.777701047, -289349.844764697 6919104.005421084, -324636.257609818 6919104.005421084)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-324636.257609818 6919104.005421084, -324636.257609818 6942767.777701047, -289349.844764697 6942767.777701047, -289349.844764697 6919104.005421084, -324636.257609818 6919104.005421084)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-324636.257609818 6919104.005421084, -324636.257609818 6942767.777701047, -289349.844764697 6942767.777701047, -289349.844764697 6919104.005421084, -324636.257609818 6919104.005421084)) ]
2020-02-27 13:32:04,954 INFO [wfs.json] - about to encode JSON
2020-02-27 13:35:03,959 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:35:04,064 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:35:04,065 INFO [wfs.json] - about to encode JSON
2020-02-27 13:35:53,666 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:35:53,872 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4022ccd7 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-320845.5903730017 6904424.262719426, -320845.5903730017 6957447.520402705, -293140.5120015133 6957447.520402705, -293140.5120015133 6904424.262719426, -320845.5903730017 6904424.262719426)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-320845.5903730017 6904424.262719426, -320845.5903730017 6957447.520402705, -293140.5120015133 6957447.520402705, -293140.5120015133 6904424.262719426, -320845.5903730017 6904424.262719426)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-320845.5903730017 6904424.262719426, -320845.5903730017 6957447.520402705, -293140.5120015133 6957447.520402705, -293140.5120015133 6904424.262719426, -320845.5903730017 6904424.262719426)) ]
2020-02-27 13:35:53,878 INFO [wfs.json] - about to encode JSON
2020-02-27 13:35:58,257 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:35:58,517 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@77dc7307 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-346526.0668634967 6904424.262719426, -346526.0668634967 6957447.520402705, -267460.03551101836 6957447.520402705, -267460.03551101836 6904424.262719426, -346526.0668634967 6904424.262719426)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-346526.0668634967 6904424.262719426, -346526.0668634967 6957447.520402705, -267460.03551101836 6957447.520402705, -267460.03551101836 6904424.262719426, -346526.0668634967 6904424.262719426)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-346526.0668634967 6904424.262719426, -346526.0668634967 6957447.520402705, -267460.03551101836 6957447.520402705, -267460.03551101836 6904424.262719426, -346526.0668634967 6904424.262719426)) ]
2020-02-27 13:35:58,520 INFO [wfs.json] - about to encode JSON
2020-02-27 13:36:55,498 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:36:56,237 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@3256fa34 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-321489.9101745385 6903191.193007296, -321489.9101745385 6958680.70863861, -292496.19219997653 6958680.70863861, -292496.19219997653 6903191.193007296, -321489.9101745385 6903191.193007296)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-321489.9101745385 6903191.193007296, -321489.9101745385 6958680.70863861, -292496.19219997653 6958680.70863861, -292496.19219997653 6903191.193007296, -321489.9101745385 6903191.193007296)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-321489.9101745385 6903191.193007296, -321489.9101745385 6958680.70863861, -292496.19219997653 6958680.70863861, -292496.19219997653 6903191.193007296, -321489.9101745385 6903191.193007296)) ]
2020-02-27 13:36:56,238 INFO [wfs.json] - about to encode JSON
2020-02-27 13:37:18,591 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:37:18,777 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2e3fd577 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-322164.18268557487 6901900.737788746, -322164.18268557487 6959971.161123844, -291821.91968894016 6959971.161123844, -291821.91968894016 6901900.737788746, -322164.18268557487 6901900.737788746)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-322164.18268557487 6901900.737788746, -322164.18268557487 6959971.161123844, -291821.91968894016 6959971.161123844, -291821.91968894016 6901900.737788746, -322164.18268557487 6901900.737788746)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-322164.18268557487 6901900.737788746, -322164.18268557487 6959971.161123844, -291821.91968894016 6959971.161123844, -291821.91968894016 6901900.737788746, -322164.18268557487 6901900.737788746)) ]
2020-02-27 13:37:18,777 INFO [wfs.json] - about to encode JSON
2020-02-27 13:38:00,171 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:38:00,380 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@71bac3d3 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-322869.7540953017 6900550.385713703, -322869.7540953017 6961321.51930634, -291116.34827921336 6961321.51930634, -291116.34827921336 6900550.385713703, -322869.7540953017 6900550.385713703)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-322869.7540953017 6900550.385713703, -322869.7540953017 6961321.51930634, -291116.34827921336 6961321.51930634, -291116.34827921336 6900550.385713703, -322869.7540953017 6900550.385713703)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-322869.7540953017 6900550.385713703, -322869.7540953017 6961321.51930634, -291116.34827921336 6961321.51930634, -291116.34827921336 6900550.385713703, -322869.7540953017 6900550.385713703)) ]
2020-02-27 13:38:00,382 INFO [wfs.json] - about to encode JSON
2020-02-27 13:40:18,312 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:40:18,409 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:40:18,410 INFO [wfs.json] - about to encode JSON
2020-02-27 13:40:21,503 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:40:21,682 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5a619aa0 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-352302.7187171374 6900550.385713703, -352302.7187171374 6961321.51930634, -261683.38365737765 6961321.51930634, -261683.38365737765 6900550.385713703, -352302.7187171374 6900550.385713703)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-352302.7187171374 6900550.385713703, -352302.7187171374 6961321.51930634, -261683.38365737765 6961321.51930634, -261683.38365737765 6900550.385713703, -352302.7187171374 6900550.385713703)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-352302.7187171374 6900550.385713703, -352302.7187171374 6961321.51930634, -261683.38365737765 6961321.51930634, -261683.38365737765 6900550.385713703, -352302.7187171374 6900550.385713703)) ]
2020-02-27 13:40:21,684 INFO [wfs.json] - about to encode JSON
2020-02-27 13:40:22,945 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:40:23,146 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7caceb2e (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-353187.7162213413 6899956.830013071, -353187.7162213413 6961914.957562829, -260798.38615317378 6961914.957562829, -260798.38615317378 6899956.830013071, -353187.7162213413 6899956.830013071)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-353187.7162213413 6899956.830013071, -353187.7162213413 6961914.957562829, -260798.38615317378 6961914.957562829, -260798.38615317378 6899956.830013071, -353187.7162213413 6899956.830013071)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-353187.7162213413 6899956.830013071, -353187.7162213413 6961914.957562829, -260798.38615317378 6961914.957562829, -260798.38615317378 6899956.830013071, -353187.7162213413 6899956.830013071)) ]
2020-02-27 13:40:23,147 INFO [wfs.json] - about to encode JSON
2020-02-27 13:40:27,815 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:40:28,016 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2c6ed760 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-354089.89886901766 6899351.754120727, -354089.89886901766 6962519.925027586, -259896.20350549737 6962519.925027586, -259896.20350549737 6899351.754120727, -354089.89886901766 6899351.754120727)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-354089.89886901766 6899351.754120727, -354089.89886901766 6962519.925027586, -259896.20350549737 6962519.925027586, -259896.20350549737 6899351.754120727, -354089.89886901766 6899351.754120727)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-354089.89886901766 6899351.754120727, -354089.89886901766 6962519.925027586, -259896.20350549737 6962519.925027586, -259896.20350549737 6899351.754120727, -354089.89886901766 6899351.754120727)) ]
2020-02-27 13:40:28,017 INFO [wfs.json] - about to encode JSON
2020-02-27 13:40:50,503 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:40:50,718 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@5ac1666c (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-324263.56472892134 6897882.7425849335, -324263.56472892134 6963988.954418256, -289722.5376455937 6963988.954418256, -289722.5376455937 6897882.7425849335, -324263.56472892134 6897882.7425849335)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-324263.56472892134 6897882.7425849335, -324263.56472892134 6963988.954418256, -289722.5376455937 6963988.954418256, -289722.5376455937 6897882.7425849335, -324263.56472892134 6897882.7425849335)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-324263.56472892134 6897882.7425849335, -324263.56472892134 6963988.954418256, -289722.5376455937 6963988.954418256, -289722.5376455937 6897882.7425849335, -324263.56472892134 6897882.7425849335)) ]
2020-02-27 13:40:50,720 INFO [wfs.json] - about to encode JSON
2020-02-27 13:41:28,618 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:41:28,800 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@34799ab1 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-356280.4398330828 6897882.7425849335, -356280.4398330828 6963988.954418256, -257705.66254143222 6963988.954418256, -257705.66254143222 6897882.7425849335, -356280.4398330828 6897882.7425849335)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-356280.4398330828 6897882.7425849335, -356280.4398330828 6963988.954418256, -257705.66254143222 6963988.954418256, -257705.66254143222 6897882.7425849335, -356280.4398330828 6897882.7425849335)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-356280.4398330828 6897882.7425849335, -356280.4398330828 6963988.954418256, -257705.66254143222 6963988.954418256, -257705.66254143222 6897882.7425849335, -356280.4398330828 6897882.7425849335)) ]
2020-02-27 13:41:28,801 INFO [wfs.json] - about to encode JSON
2020-02-27 13:44:32,295 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:44:32,400 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:44:32,402 INFO [wfs.json] - about to encode JSON
2020-02-27 13:44:41,862 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:44:41,973 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:44:41,975 INFO [wfs.json] - about to encode JSON
2020-02-27 13:45:45,025 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:45:45,128 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:45:45,129 INFO [wfs.json] - about to encode JSON
2020-02-27 13:45:52,991 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:45:53,181 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@f8cda2f (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-357243.0446342626 6897237.23700295, -357243.0446342626 6964634.532796022, -256743.05774025238 6964634.532796022, -256743.05774025238 6897237.23700295, -357243.0446342626 6897237.23700295)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-357243.0446342626 6897237.23700295, -357243.0446342626 6964634.532796022, -256743.05774025238 6964634.532796022, -256743.05774025238 6897237.23700295, -357243.0446342626 6897237.23700295)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-357243.0446342626 6897237.23700295, -357243.0446342626 6964634.532796022, -256743.05774025238 6964634.532796022, -256743.05774025238 6897237.23700295, -357243.0446342626 6897237.23700295)) ]
2020-02-27 13:45:53,182 INFO [wfs.json] - about to encode JSON
2020-02-27 13:46:00,016 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:46:00,135 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:46:00,136 INFO [wfs.json] - about to encode JSON
2020-02-27 13:46:18,014 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:46:18,215 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@487c67d6 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-325419.7729703315 6895670.029565776, -325419.7729703315 6966201.850790834, -288566.32940418355 6966201.850790834, -288566.32940418355 6895670.029565776, -325419.7729703315 6895670.029565776)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-325419.7729703315 6895670.029565776, -325419.7729703315 6966201.850790834, -288566.32940418355 6966201.850790834, -288566.32940418355 6895670.029565776, -325419.7729703315 6895670.029565776)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-325419.7729703315 6895670.029565776, -325419.7729703315 6966201.850790834, -288566.32940418355 6966201.850790834, -288566.32940418355 6895670.029565776, -325419.7729703315 6895670.029565776)) ]
2020-02-27 13:46:18,220 INFO [wfs.json] - about to encode JSON
2020-02-27 13:46:20,927 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:46:20,994 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:46:21,061 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:46:21,119 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4f265104 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-325448.1217730747 6895670.029565776, -325448.1217730747 6966201.850790834, -288537.98060144036 6966201.850790834, -288537.98060144036 6895670.029565776, -325448.1217730747 6895670.029565776)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-325448.1217730747 6895670.029565776, -325448.1217730747 6966201.850790834, -288537.98060144036 6966201.850790834, -288537.98060144036 6895670.029565776, -325448.1217730747 6895670.029565776)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-325448.1217730747 6895670.029565776, -325448.1217730747 6966201.850790834, -288537.98060144036 6966201.850790834, -288537.98060144036 6895670.029565776, -325448.1217730747 6895670.029565776)) ]
2020-02-27 13:46:21,120 INFO [wfs.json] - about to encode JSON
2020-02-27 13:46:21,149 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:46:21,195 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4e723aad (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-325731.60980050656 6895670.029565776, -325731.60980050656 6966201.850790834, -288254.4925740085 6966201.850790834, -288254.4925740085 6895670.029565776, -325731.60980050656 6895670.029565776)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-325731.60980050656 6895670.029565776, -325731.60980050656 6966201.850790834, -288254.4925740085 6966201.850790834, -288254.4925740085 6895670.029565776, -325731.60980050656 6895670.029565776)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-325731.60980050656 6895670.029565776, -325731.60980050656 6966201.850790834, -288254.4925740085 6966201.850790834, -288254.4925740085 6895670.029565776, -325731.60980050656 6895670.029565776)) ]
2020-02-27 13:46:21,198 INFO [wfs.json] - about to encode JSON
2020-02-27 13:46:21,229 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:46:21,304 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:46:21,545 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1bc556ad (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-328169.60683642095 6895670.029565776, -328169.60683642095 6966201.850790834, -285816.4955380941 6966201.850790834, -285816.4955380941 6895670.029565776, -328169.60683642095 6895670.029565776)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-328169.60683642095 6895670.029565776, -328169.60683642095 6966201.850790834, -285816.4955380941 6966201.850790834, -285816.4955380941 6895670.029565776, -328169.60683642095 6895670.029565776)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-328169.60683642095 6895670.029565776, -328169.60683642095 6966201.850790834, -285816.4955380941 6966201.850790834, -285816.4955380941 6895670.029565776, -328169.60683642095 6895670.029565776)) ]
2020-02-27 13:46:21,547 INFO [wfs.json] - about to encode JSON
2020-02-27 13:46:21,653 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@49a30888 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-328594.83887756884 6895670.029565776, -328594.83887756884 6966201.850790834, -285391.2634969462 6966201.850790834, -285391.2634969462 6895670.029565776, -328594.83887756884 6895670.029565776)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-328594.83887756884 6895670.029565776, -328594.83887756884 6966201.850790834, -285391.2634969462 6966201.850790834, -285391.2634969462 6895670.029565776, -328594.83887756884 6895670.029565776)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-328594.83887756884 6895670.029565776, -328594.83887756884 6966201.850790834, -285391.2634969462 6966201.850790834, -285391.2634969462 6895670.029565776, -328594.83887756884 6895670.029565776)) ]
2020-02-27 13:46:21,656 INFO [wfs.json] - about to encode JSON
2020-02-27 13:46:21,664 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:46:21,753 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@72b30e1b (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-328651.5364830552 6895670.029565776, -328651.5364830552 6966201.850790834, -285334.5658914598 6966201.850790834, -285334.5658914598 6895670.029565776, -328651.5364830552 6895670.029565776)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-328651.5364830552 6895670.029565776, -328651.5364830552 6966201.850790834, -285334.5658914598 6966201.850790834, -285334.5658914598 6895670.029565776, -328651.5364830552 6895670.029565776)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-328651.5364830552 6895670.029565776, -328651.5364830552 6966201.850790834, -285334.5658914598 6966201.850790834, -285334.5658914598 6895670.029565776, -328651.5364830552 6895670.029565776)) ]
2020-02-27 13:46:21,754 INFO [wfs.json] - about to encode JSON
2020-02-27 13:46:21,876 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:46:21,877 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@427d1f88 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-330040.62781747157 6895670.029565776, -330040.62781747157 6966201.850790834, -283945.47455704346 6966201.850790834, -283945.47455704346 6895670.029565776, -330040.62781747157 6895670.029565776)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-330040.62781747157 6895670.029565776, -330040.62781747157 6966201.850790834, -283945.47455704346 6966201.850790834, -283945.47455704346 6895670.029565776, -330040.62781747157 6895670.029565776)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-330040.62781747157 6895670.029565776, -330040.62781747157 6966201.850790834, -283945.47455704346 6966201.850790834, -283945.47455704346 6895670.029565776, -330040.62781747157 6895670.029565776)) ]
2020-02-27 13:46:21,878 INFO [wfs.json] - about to encode JSON
2020-02-27 13:46:21,955 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2e45746d (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-331543.1143628607 6895670.029565776, -331543.1143628607 6966201.850790834, -282442.98801165435 6966201.850790834, -282442.98801165435 6895670.029565776, -331543.1143628607 6895670.029565776)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-331543.1143628607 6895670.029565776, -331543.1143628607 6966201.850790834, -282442.98801165435 6966201.850790834, -282442.98801165435 6895670.029565776, -331543.1143628607 6895670.029565776)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-331543.1143628607 6895670.029565776, -331543.1143628607 6966201.850790834, -282442.98801165435 6966201.850790834, -282442.98801165435 6895670.029565776, -331543.1143628607 6895670.029565776)) ]
2020-02-27 13:46:21,960 INFO [wfs.json] - about to encode JSON
2020-02-27 13:46:22,115 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:46:22,175 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@884f686 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-331571.46316560387 6895670.029565776, -331571.46316560387 6966201.850790834, -282414.63920891116 6966201.850790834, -282414.63920891116 6895670.029565776, -331571.46316560387 6895670.029565776)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-331571.46316560387 6895670.029565776, -331571.46316560387 6966201.850790834, -282414.63920891116 6966201.850790834, -282414.63920891116 6895670.029565776, -331571.46316560387 6895670.029565776)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-331571.46316560387 6895670.029565776, -331571.46316560387 6966201.850790834, -282414.63920891116 6966201.850790834, -282414.63920891116 6895670.029565776, -331571.46316560387 6895670.029565776)) ]
2020-02-27 13:46:22,178 INFO [wfs.json] - about to encode JSON
2020-02-27 13:46:22,520 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@654ec30f (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-331599.81196834706 6895670.029565776, -331599.81196834706 6966201.850790834, -282386.290406168 6966201.850790834, -282386.290406168 6895670.029565776, -331599.81196834706 6895670.029565776)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-331599.81196834706 6895670.029565776, -331599.81196834706 6966201.850790834, -282386.290406168 6966201.850790834, -282386.290406168 6895670.029565776, -331599.81196834706 6895670.029565776)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-331599.81196834706 6895670.029565776, -331599.81196834706 6966201.850790834, -282386.290406168 6966201.850790834, -282386.290406168 6895670.029565776, -331599.81196834706 6895670.029565776)) ]
2020-02-27 13:46:22,522 INFO [wfs.json] - about to encode JSON
2020-02-27 13:47:30,174 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:47:30,314 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:47:30,316 INFO [wfs.json] - about to encode JSON
2020-02-27 13:47:35,506 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:47:35,703 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6fe3271c (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-332359.2101919634 6894581.645421375, -332359.2101919634 6967290.174918734, -281626.8921825516 6967290.174918734, -281626.8921825516 6894581.645421375, -332359.2101919634 6894581.645421375)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-332359.2101919634 6894581.645421375, -332359.2101919634 6967290.174918734, -281626.8921825516 6967290.174918734, -281626.8921825516 6894581.645421375, -332359.2101919634 6894581.645421375)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-332359.2101919634 6894581.645421375, -332359.2101919634 6967290.174918734, -281626.8921825516 6967290.174918734, -281626.8921825516 6894581.645421375, -332359.2101919634 6894581.645421375)) ]
2020-02-27 13:47:35,704 INFO [wfs.json] - about to encode JSON
2020-02-27 13:47:36,205 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:47:36,432 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@30fabead (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-361202.9877698951 6894581.645421375, -361202.9877698951 6967290.174918734, -252783.1146046199 6967290.174918734, -252783.1146046199 6894581.645421375, -361202.9877698951 6894581.645421375)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-361202.9877698951 6894581.645421375, -361202.9877698951 6967290.174918734, -252783.1146046199 6967290.174918734, -252783.1146046199 6894581.645421375, -361202.9877698951 6894581.645421375)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-361202.9877698951 6894581.645421375, -361202.9877698951 6967290.174918734, -252783.1146046199 6967290.174918734, -252783.1146046199 6894581.645421375, -361202.9877698951 6894581.645421375)) ]
2020-02-27 13:47:36,433 INFO [wfs.json] - about to encode JSON
2020-02-27 13:47:42,909 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:47:43,100 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@347fbeb0 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-362261.8091947715 6893871.603356668, -362261.8091947715 6968000.266387771, -251724.29317974352 6968000.266387771, -251724.29317974352 6893871.603356668, -362261.8091947715 6893871.603356668)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-362261.8091947715 6893871.603356668, -362261.8091947715 6968000.266387771, -251724.29317974352 6968000.266387771, -251724.29317974352 6893871.603356668, -362261.8091947715 6893871.603356668)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-362261.8091947715 6893871.603356668, -362261.8091947715 6968000.266387771, -251724.29317974352 6968000.266387771, -251724.29317974352 6893871.603356668, -362261.8091947715 6893871.603356668)) ]
2020-02-27 13:47:43,101 INFO [wfs.json] - about to encode JSON
2020-02-27 13:47:58,617 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:47:58,849 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@93c1756 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-415227.2444279424 6863769.460834549, -415227.2444279424 6937898.123865652, -304689.7284129144 6937898.123865652, -304689.7284129144 6863769.460834549, -415227.2444279424 6863769.460834549)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-415227.2444279424 6863769.460834549, -415227.2444279424 6937898.123865652, -304689.7284129144 6937898.123865652, -304689.7284129144 6863769.460834549, -415227.2444279424 6863769.460834549)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-415227.2444279424 6863769.460834549, -415227.2444279424 6937898.123865652, -304689.7284129144 6937898.123865652, -304689.7284129144 6863769.460834549, -415227.2444279424 6863769.460834549)) ]
2020-02-27 13:47:58,851 INFO [wfs.json] - about to encode JSON
2020-02-27 13:48:05,788 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:48:05,975 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@60089f6c (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-416597.7904486139 6853131.079318593, -416597.7904486139 6927259.742349696, -306060.2744335859 6927259.742349696, -306060.2744335859 6853131.079318593, -416597.7904486139 6853131.079318593)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-416597.7904486139 6853131.079318593, -416597.7904486139 6927259.742349696, -306060.2744335859 6927259.742349696, -306060.2744335859 6853131.079318593, -416597.7904486139 6853131.079318593)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-416597.7904486139 6853131.079318593, -416597.7904486139 6927259.742349696, -306060.2744335859 6927259.742349696, -306060.2744335859 6853131.079318593, -416597.7904486139 6853131.079318593)) ]
2020-02-27 13:48:05,977 INFO [wfs.json] - about to encode JSON
2020-02-27 13:48:09,063 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:48:09,249 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7574f4fe (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-402116.26412046165 6885575.299883135, -402116.26412046165 6959703.962914238, -291578.74810543365 6959703.962914238, -291578.74810543365 6885575.299883135, -402116.26412046165 6885575.299883135)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-402116.26412046165 6885575.299883135, -402116.26412046165 6959703.962914238, -291578.74810543365 6959703.962914238, -291578.74810543365 6885575.299883135, -402116.26412046165 6885575.299883135)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-402116.26412046165 6885575.299883135, -402116.26412046165 6959703.962914238, -291578.74810543365 6959703.962914238, -291578.74810543365 6885575.299883135, -402116.26412046165 6885575.299883135)) ]
2020-02-27 13:48:09,251 INFO [wfs.json] - about to encode JSON
2020-02-27 13:48:10,369 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:48:10,562 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@651bf934 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-336347.060318137 6878951.822589848, -336347.060318137 6953080.485620951, -225809.544303109 6953080.485620951, -225809.544303109 6878951.822589848, -336347.060318137 6878951.822589848)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-336347.060318137 6878951.822589848, -336347.060318137 6953080.485620951, -225809.544303109 6953080.485620951, -225809.544303109 6878951.822589848, -336347.060318137 6878951.822589848)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-336347.060318137 6878951.822589848, -336347.060318137 6953080.485620951, -225809.544303109 6953080.485620951, -225809.544303109 6878951.822589848, -336347.060318137 6878951.822589848)) ]
2020-02-27 13:48:10,563 INFO [wfs.json] - about to encode JSON
2020-02-27 13:48:11,181 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:48:11,454 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@616fc822 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-313802.2140286182 6832715.076554508, -313802.2140286182 6906843.739585611, -203264.69801359018 6906843.739585611, -203264.69801359018 6832715.076554508, -313802.2140286182 6832715.076554508)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-313802.2140286182 6832715.076554508, -313802.2140286182 6906843.739585611, -203264.69801359018 6906843.739585611, -203264.69801359018 6832715.076554508, -313802.2140286182 6832715.076554508)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-313802.2140286182 6832715.076554508, -313802.2140286182 6906843.739585611, -203264.69801359018 6906843.739585611, -203264.69801359018 6832715.076554508, -313802.2140286182 6832715.076554508)) ]
2020-02-27 13:48:11,455 INFO [wfs.json] - about to encode JSON
2020-02-27 13:48:11,811 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:48:12,010 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@70429e09 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-304098.9081246742 6800571.638721993, -304098.9081246742 6874700.301753096, -193561.39210964626 6874700.301753096, -193561.39210964626 6800571.638721993, -304098.9081246742 6800571.638721993)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-304098.9081246742 6800571.638721993, -304098.9081246742 6874700.301753096, -193561.39210964626 6874700.301753096, -193561.39210964626 6800571.638721993, -304098.9081246742 6800571.638721993)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-304098.9081246742 6800571.638721993, -304098.9081246742 6874700.301753096, -193561.39210964626 6874700.301753096, -193561.39210964626 6800571.638721993, -304098.9081246742 6800571.638721993)) ]
2020-02-27 13:48:12,011 INFO [wfs.json] - about to encode JSON
2020-02-27 13:48:14,156 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:48:14,406 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7dd629dc (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-296063.9986362149 6763371.506704506, -296063.9986362149 6837500.16973561, -185526.4826211869 6837500.16973561, -185526.4826211869 6763371.506704506, -296063.9986362149 6763371.506704506)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-296063.9986362149 6763371.506704506, -296063.9986362149 6837500.16973561, -185526.4826211869 6837500.16973561, -185526.4826211869 6763371.506704506, -296063.9986362149 6763371.506704506)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-296063.9986362149 6763371.506704506, -296063.9986362149 6837500.16973561, -185526.4826211869 6837500.16973561, -185526.4826211869 6763371.506704506, -296063.9986362149 6763371.506704506)) ]
2020-02-27 13:48:14,408 INFO [wfs.json] - about to encode JSON
2020-02-27 13:48:18,284 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:48:18,484 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@64dbffd8 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-316659.5126245291 6726446.527696328, -316659.5126245291 6800575.190727431, -206121.99660950107 6800575.190727431, -206121.99660950107 6726446.527696328, -316659.5126245291 6726446.527696328)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-316659.5126245291 6726446.527696328, -316659.5126245291 6800575.190727431, -206121.99660950107 6800575.190727431, -206121.99660950107 6726446.527696328, -316659.5126245291 6726446.527696328)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-316659.5126245291 6726446.527696328, -316659.5126245291 6800575.190727431, -206121.99660950107 6800575.190727431, -206121.99660950107 6726446.527696328, -316659.5126245291 6726446.527696328)) ]
2020-02-27 13:48:18,486 INFO [wfs.json] - about to encode JSON
2020-02-27 13:51:03,039 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:51:03,248 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@25c150a6 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-320071.22401491384 6889986.8317812355, -320071.22401491384 6947347.127514589, -234537.98560223664 6947347.127514589, -234537.98560223664 6889986.8317812355, -320071.22401491384 6889986.8317812355)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-320071.22401491384 6889986.8317812355, -320071.22401491384 6947347.127514589, -234537.98560223664 6947347.127514589, -234537.98560223664 6889986.8317812355, -320071.22401491384 6889986.8317812355)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-320071.22401491384 6889986.8317812355, -320071.22401491384 6947347.127514589, -234537.98560223664 6947347.127514589, -234537.98560223664 6889986.8317812355, -320071.22401491384 6889986.8317812355)) ]
2020-02-27 13:51:03,250 INFO [wfs.json] - about to encode JSON
2020-02-27 13:51:09,317 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:51:09,528 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@61751f96 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-320906.5519675955 6889426.595965187, -320906.5519675955 6947907.289053052, -233702.62457371393 6947907.289053052, -233702.62457371393 6889426.595965187, -320906.5519675955 6889426.595965187)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-320906.5519675955 6889426.595965187, -320906.5519675955 6947907.289053052, -233702.62457371393 6947907.289053052, -233702.62457371393 6889426.595965187, -320906.5519675955 6889426.595965187)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-320906.5519675955 6889426.595965187, -320906.5519675955 6947907.289053052, -233702.62457371393 6947907.289053052, -233702.62457371393 6889426.595965187, -320906.5519675955 6889426.595965187)) ]
2020-02-27 13:51:09,529 INFO [wfs.json] - about to encode JSON
2020-02-27 13:51:34,684 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-02-27 13:51:34,685 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-02-27 13:51:34,687 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-02-27 13:51:34,688 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-02-27 13:51:34,688 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-02-27 13:51:34,688 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-02-27 13:51:34,688 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-02-27 13:51:34,688 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-02-27 13:51:34,688 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-02-27 13:51:34,688 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-02-27 13:51:34,688 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-02-27 13:51:34,696 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-02-27 13:51:41,911 INFO [org.geoserver] - Loaded style 'point'
2020-02-27 13:51:41,912 INFO [org.geoserver] - Loaded style 'generic'
2020-02-27 13:51:41,913 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-02-27 13:51:41,914 INFO [org.geoserver] - Loaded style 'raster'
2020-02-27 13:51:41,914 INFO [org.geoserver] - Loaded style 'line'
2020-02-27 13:51:41,915 INFO [org.geoserver] - Loaded style 'polygon'
2020-02-27 13:51:41,916 INFO [org.geoserver] - Loaded default workspace flood
2020-02-27 13:51:41,918 INFO [org.geoserver] - Loaded workspace 'flood'
2020-02-27 13:51:41,921 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-02-27 13:51:41,922 INFO [org.geoserver] - Loaded style 'world'
2020-02-27 13:51:41,923 INFO [org.geoserver] - Loaded style 'stations'
2020-02-27 13:51:41,924 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-02-27 13:51:41,925 INFO [org.geoserver] - Loaded style 'clustered'
2020-02-27 13:51:41,925 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-02-27 13:51:41,926 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-02-27 13:51:41,927 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-02-27 13:51:41,928 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-02-27 13:51:41,929 INFO [org.geoserver] - Loaded style 'HFM'
2020-02-27 13:51:41,930 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-02-27 13:51:41,931 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-02-27 13:51:41,932 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-02-27 13:51:41,933 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-02-27 13:51:41,933 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-02-27 13:51:41,934 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-02-27 13:51:42,204 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-02-27 13:51:42,206 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-02-27 13:51:43,420 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-02-27 13:51:43,427 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-27 13:51:43,912 INFO [org.geoserver] - Loaded layer 'stations'
2020-02-27 13:51:43,918 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-02-27 13:51:43,919 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-02-27 13:51:44,223 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-02-27 13:51:44,345 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-02-27 13:51:44,355 INFO [org.geoserver] - Loaded service 'WFSInfoImpl-9be857d:17053325c6c:-8000', enabled
2020-02-27 13:51:44,357 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-02-27 13:51:44,367 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-02-27 13:51:44,375 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-27 13:51:44,384 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-27 13:51:44,385 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-27 13:51:44,385 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-02-27 13:51:44,420 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-27 13:51:44,420 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-02-27 13:51:44,420 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-02-27 13:51:44,420 WARN [config.XMLConfiguration] - ********************************************************************************
2020-02-27 13:51:44,495 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-02-27 13:51:44,495 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-02-27 13:51:44,495 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-02-27 13:51:44,502 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-02-27 13:51:44,502 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-02-27 13:51:44,502 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-02-27 13:51:44,502 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-02-27 13:51:44,502 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-02-27 13:51:44,508 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-27 13:51:44,508 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-02-27 13:51:44,508 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-02-27 13:51:44,540 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-02-27 13:51:44,627 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-02-27 13:51:44,627 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-02-27 13:51:44,636 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-02-27 13:51:45,483 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-02-27 13:51:45,483 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-02-27 13:51:45,484 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-02-27 13:51:45,583 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-27 13:51:45,592 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-27 13:51:45,597 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-02-27 13:51:45,599 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-02-27 13:51:45,599 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-02-27 13:51:45,601 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-02-27 13:51:45,620 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-02-27 13:51:45,755 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-02-27 13:51:45,755 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-02-27 13:51:45,907 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-02-27 13:51:45,907 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-02-27 13:51:45,907 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-02-27 13:51:48,081 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-02-27 13:51:48,106 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-02-27 13:51:48,114 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-02-27 13:51:48,115 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-02-27 13:51:48,155 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-02-27 13:51:48,165 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-02-27 13:51:48,165 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-02-27 13:51:48,186 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-02-27 13:51:48,433 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-02-27 13:51:48,433 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-02-27 13:51:48,480 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-02-27 13:51:48,480 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-02-27 13:51:48,663 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-02-27 13:51:48,665 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-02-27 13:51:48,847 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-02-27 13:51:48,847 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-02-27 13:51:49,425 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:51:49,784 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:51:49,804 INFO [wfs.json] - about to encode JSON
2020-02-27 13:51:54,756 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:51:55,271 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6b787c2f (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-293015.51332913234 6907201.559057923, -293015.51332913234 6925869.924259072, -265178.0394962294 6925869.924259072, -265178.0394962294 6907201.559057923, -293015.51332913234 6907201.559057923)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-293015.51332913234 6907201.559057923, -293015.51332913234 6925869.924259072, -265178.0394962294 6925869.924259072, -265178.0394962294 6907201.559057923, -293015.51332913234 6907201.559057923)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-293015.51332913234 6907201.559057923, -293015.51332913234 6925869.924259072, -265178.0394962294 6925869.924259072, -265178.0394962294 6907201.559057923, -293015.51332913234 6907201.559057923)) ]
2020-02-27 13:51:55,274 INFO [wfs.json] - about to encode JSON
2020-02-27 13:52:01,582 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:52:01,784 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@71db73bf (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-293287.34473364 6907019.2251340095, -293287.34473364 6926052.181458833, -264906.2080917218 6926052.181458833, -264906.2080917218 6907019.2251340095, -293287.34473364 6907019.2251340095)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-293287.34473364 6907019.2251340095, -293287.34473364 6926052.181458833, -264906.2080917218 6926052.181458833, -264906.2080917218 6907019.2251340095, -293287.34473364 6907019.2251340095)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-293287.34473364 6907019.2251340095, -293287.34473364 6926052.181458833, -264906.2080917218 6926052.181458833, -264906.2080917218 6907019.2251340095, -293287.34473364 6907019.2251340095)) ]
2020-02-27 13:52:01,785 INFO [wfs.json] - about to encode JSON
2020-02-27 13:52:03,164 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:52:03,357 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@28f0cf0a (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-331962.2744710496 6887166.918282648, -331962.2744710496 6957436.948721782, -227178.58760240642 6957436.948721782, -227178.58760240642 6887166.918282648, -331962.2744710496 6887166.918282648)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-331962.2744710496 6887166.918282648, -331962.2744710496 6957436.948721782, -227178.58760240642 6957436.948721782, -227178.58760240642 6887166.918282648, -331962.2744710496 6887166.918282648)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-331962.2744710496 6887166.918282648, -331962.2744710496 6957436.948721782, -227178.58760240642 6957436.948721782, -227178.58760240642 6887166.918282648, -331962.2744710496 6887166.918282648)) ]
2020-02-27 13:52:03,359 INFO [wfs.json] - about to encode JSON
2020-02-27 13:53:00,178 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:53:00,281 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:53:00,284 INFO [wfs.json] - about to encode JSON
2020-02-27 13:53:17,602 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:53:17,807 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7fb0d2e3 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-324636.257609818 6919104.005421084, -324636.257609818 6942767.777701047, -289349.844764697 6942767.777701047, -289349.844764697 6919104.005421084, -324636.257609818 6919104.005421084)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-324636.257609818 6919104.005421084, -324636.257609818 6942767.777701047, -289349.844764697 6942767.777701047, -289349.844764697 6919104.005421084, -324636.257609818 6919104.005421084)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-324636.257609818 6919104.005421084, -324636.257609818 6942767.777701047, -289349.844764697 6942767.777701047, -289349.844764697 6919104.005421084, -324636.257609818 6919104.005421084)) ]
2020-02-27 13:53:17,809 INFO [wfs.json] - about to encode JSON
2020-02-27 13:53:32,719 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:53:32,913 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@56b9acf1 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-324980.81901242974 6918872.985249641, -324980.81901242974 6942998.897028093, -289005.2833620853 6942998.897028093, -289005.2833620853 6918872.985249641, -324980.81901242974 6918872.985249641)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-324980.81901242974 6918872.985249641, -324980.81901242974 6942998.897028093, -289005.2833620853 6942998.897028093, -289005.2833620853 6918872.985249641, -324980.81901242974 6918872.985249641)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-324980.81901242974 6918872.985249641, -324980.81901242974 6942998.897028093, -289005.2833620853 6942998.897028093, -289005.2833620853 6918872.985249641, -324980.81901242974 6918872.985249641)) ]
2020-02-27 13:53:32,916 INFO [wfs.json] - about to encode JSON
2020-02-27 13:54:18,029 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:54:18,217 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@73a450b (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-137089.3295661997 6678223.728099948, -137089.3295661997 6754623.52660468, -23165.1927283545 6754623.52660468, -23165.1927283545 6678223.728099948, -137089.3295661997 6678223.728099948)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-137089.3295661997 6678223.728099948, -137089.3295661997 6754623.52660468, -23165.1927283545 6754623.52660468, -23165.1927283545 6678223.728099948, -137089.3295661997 6678223.728099948)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-137089.3295661997 6678223.728099948, -137089.3295661997 6754623.52660468, -23165.1927283545 6754623.52660468, -23165.1927283545 6678223.728099948, -137089.3295661997 6678223.728099948)) ]
2020-02-27 13:54:18,219 INFO [wfs.json] - about to encode JSON
2020-02-27 13:54:21,859 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:54:22,046 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@4582f0c (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-132483.23238946736 6649358.852459091, -132483.23238946736 6725758.650963823, -18559.09555162215 6725758.650963823, -18559.09555162215 6649358.852459091, -132483.23238946736 6649358.852459091)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-132483.23238946736 6649358.852459091, -132483.23238946736 6725758.650963823, -18559.09555162215 6725758.650963823, -18559.09555162215 6649358.852459091, -132483.23238946736 6649358.852459091)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-132483.23238946736 6649358.852459091, -132483.23238946736 6725758.650963823, -18559.09555162215 6725758.650963823, -18559.09555162215 6649358.852459091, -132483.23238946736 6649358.852459091)) ]
2020-02-27 13:54:22,048 INFO [wfs.json] - about to encode JSON
2020-02-27 13:54:27,688 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:54:27,876 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@50c986cb (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-126894.50114836553 6649911.5841203, -126894.50114836553 6726311.382625032, -12970.364310520301 6726311.382625032, -12970.364310520301 6649911.5841203, -126894.50114836553 6649911.5841203)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-126894.50114836553 6649911.5841203, -126894.50114836553 6726311.382625032, -12970.364310520301 6726311.382625032, -12970.364310520301 6649911.5841203, -126894.50114836553 6649911.5841203)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-126894.50114836553 6649911.5841203, -126894.50114836553 6726311.382625032, -12970.364310520301 6726311.382625032, -12970.364310520301 6649911.5841203, -126894.50114836553 6649911.5841203)) ]
2020-02-27 13:54:27,878 INFO [wfs.json] - about to encode JSON
2020-02-27 13:59:35,693 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:59:35,796 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 13:59:35,797 INFO [wfs.json] - about to encode JSON
2020-02-27 13:59:41,298 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 13:59:41,502 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@f5ce497 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-128007.19614878451 6649165.421246416, -128007.19614878451 6727057.570624438, -11857.729029626611 6727057.570624438, -11857.729029626611 6649165.421246416, -128007.19614878451 6649165.421246416)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-128007.19614878451 6649165.421246416, -128007.19614878451 6727057.570624438, -11857.729029626611 6727057.570624438, -11857.729029626611 6649165.421246416, -128007.19614878451 6649165.421246416)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-128007.19614878451 6649165.421246416, -128007.19614878451 6727057.570624438, -11857.729029626611 6727057.570624438, -11857.729029626611 6649165.421246416, -128007.19614878451 6649165.421246416)) ]
2020-02-27 13:59:41,503 INFO [wfs.json] - about to encode JSON
2020-02-27 14:00:00,534 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 14:00:00,796 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1c1521ac (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-160728.95622962687 6851984.674004801, -160728.95622962687 6862534.165193299, -144998.00272909334 6862534.165193299, -144998.00272909334 6851984.674004801, -160728.95622962687 6851984.674004801)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-160728.95622962687 6851984.674004801, -160728.95622962687 6862534.165193299, -144998.00272909334 6862534.165193299, -144998.00272909334 6851984.674004801, -160728.95622962687 6851984.674004801)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-160728.95622962687 6851984.674004801, -160728.95622962687 6862534.165193299, -144998.00272909334 6862534.165193299, -144998.00272909334 6851984.674004801, -160728.95622962687 6851984.674004801)) ]
2020-02-27 14:00:00,797 INFO [wfs.json] - about to encode JSON
2020-02-27 14:00:09,014 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 14:00:09,200 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@14c8eddf (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-160882.66613503604 6851881.566348361, -160882.66613503604 6862637.219393818, -144844.29282368417 6862637.219393818, -144844.29282368417 6851881.566348361, -160882.66613503604 6851881.566348361)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-160882.66613503604 6851881.566348361, -160882.66613503604 6862637.219393818, -144844.29282368417 6862637.219393818, -144844.29282368417 6851881.566348361, -160882.66613503604 6851881.566348361)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-160882.66613503604 6851881.566348361, -160882.66613503604 6862637.219393818, -144844.29282368417 6862637.219393818, -144844.29282368417 6851881.566348361, -160882.66613503604 6851881.566348361)) ]
2020-02-27 14:00:09,202 INFO [wfs.json] - about to encode JSON
2020-02-27 14:01:18,145 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 14:01:18,251 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 14:01:18,252 INFO [wfs.json] - about to encode JSON
2020-02-27 14:01:21,837 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 14:01:22,032 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6c5e0f05 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-161039.35534463514 6851776.53541199, -161039.35534463514 6862742.346276035, -144687.60361408506 6862742.346276035, -144687.60361408506 6851776.53541199, -161039.35534463514 6851776.53541199)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-161039.35534463514 6851776.53541199, -161039.35534463514 6862742.346276035, -144687.60361408506 6862742.346276035, -144687.60361408506 6851776.53541199, -161039.35534463514 6851776.53541199)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-161039.35534463514 6851776.53541199, -161039.35534463514 6862742.346276035, -144687.60361408506 6862742.346276035, -144687.60361408506 6851776.53541199, -161039.35534463514 6851776.53541199)) ]
2020-02-27 14:01:22,038 INFO [wfs.json] - about to encode JSON
2020-02-27 14:01:33,695 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 14:01:33,879 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2a6fc398 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-161199.01340493473 6851669.51536892, -161199.01340493473 6862849.465992548, -144527.94555378548 6862849.465992548, -144527.94555378548 6851669.51536892, -161199.01340493473 6851669.51536892)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-161199.01340493473 6851669.51536892, -161199.01340493473 6862849.465992548, -144527.94555378548 6862849.465992548, -144527.94555378548 6851669.51536892, -161199.01340493473 6851669.51536892)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-161199.01340493473 6851669.51536892, -161199.01340493473 6862849.465992548, -144527.94555378548 6862849.465992548, -144527.94555378548 6851669.51536892, -161199.01340493473 6851669.51536892)) ]
2020-02-27 14:01:33,882 INFO [wfs.json] - about to encode JSON
2020-02-27 14:01:36,809 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 14:01:37,052 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@124df786 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-154711.60068578902 6851423.955998592, -154711.60068578902 6862603.90662222, -138040.53283463971 6862603.90662222, -138040.53283463971 6851423.955998592, -154711.60068578902 6851423.955998592)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-154711.60068578902 6851423.955998592, -154711.60068578902 6862603.90662222, -138040.53283463971 6862603.90662222, -138040.53283463971 6851423.955998592, -154711.60068578902 6851423.955998592)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-154711.60068578902 6851423.955998592, -154711.60068578902 6862603.90662222, -138040.53283463971 6862603.90662222, -138040.53283463971 6851423.955998592, -154711.60068578902 6851423.955998592)) ]
2020-02-27 14:01:37,054 INFO [wfs.json] - about to encode JSON
2020-02-27 14:01:39,301 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 14:01:39,563 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2890ef6e (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-167686.42389769066 6851914.696748288, -167686.42389769066 6863094.647371916, -151015.35604654142 6863094.647371916, -151015.35604654142 6851914.696748288, -167686.42389769066 6851914.696748288)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-167686.42389769066 6851914.696748288, -167686.42389769066 6863094.647371916, -151015.35604654142 6863094.647371916, -151015.35604654142 6851914.696748288, -167686.42389769066 6851914.696748288)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-167686.42389769066 6851914.696748288, -167686.42389769066 6863094.647371916, -151015.35604654142 6863094.647371916, -151015.35604654142 6851914.696748288, -167686.42389769066 6851914.696748288)) ]
2020-02-27 14:01:39,565 INFO [wfs.json] - about to encode JSON
2020-02-27 14:10:19,019 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 14:10:19,123 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 14:10:19,124 INFO [wfs.json] - about to encode JSON
2020-02-27 14:13:06,066 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 14:13:06,171 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 14:13:06,171 INFO [wfs.json] - about to encode JSON
2020-02-27 14:13:28,492 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 14:13:28,714 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@2337cdb3 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-324636.257609818 6919104.005421084, -324636.257609818 6942767.777701047, -289349.844764697 6942767.777701047, -289349.844764697 6919104.005421084, -324636.257609818 6919104.005421084)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-324636.257609818 6919104.005421084, -324636.257609818 6942767.777701047, -289349.844764697 6942767.777701047, -289349.844764697 6919104.005421084, -324636.257609818 6919104.005421084)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-324636.257609818 6919104.005421084, -324636.257609818 6942767.777701047, -289349.844764697 6942767.777701047, -289349.844764697 6919104.005421084, -324636.257609818 6919104.005421084)) ]
2020-02-27 14:13:28,715 INFO [wfs.json] - about to encode JSON
2020-02-27 14:45:43,585 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 14:45:43,690 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 14:45:43,691 INFO [wfs.json] - about to encode JSON
2020-02-27 14:46:00,007 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-02-27 14:46:00,115 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-02-27 14:46:00,117 INFO [wfs.json] - about to encode JSON
2020-02-27 17:54:26,301 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-02-27 17:54:26,302 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-02-27 17:54:26,304 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-02-27 17:54:26,304 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-02-27 17:54:26,305 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-02-27 17:54:26,305 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-02-27 17:54:26,305 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-02-27 17:54:26,305 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-02-27 17:54:26,305 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-02-27 17:54:26,305 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-02-27 17:54:26,305 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-02-27 17:54:26,316 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-03-10 08:18:36,297 INFO [org.geoserver] - Loaded style 'point'
2020-03-10 08:18:36,299 INFO [org.geoserver] - Loaded style 'generic'
2020-03-10 08:18:36,300 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-03-10 08:18:36,301 INFO [org.geoserver] - Loaded style 'raster'
2020-03-10 08:18:36,301 INFO [org.geoserver] - Loaded style 'line'
2020-03-10 08:18:36,302 INFO [org.geoserver] - Loaded style 'polygon'
2020-03-10 08:18:36,302 INFO [org.geoserver] - Loaded default workspace flood
2020-03-10 08:18:36,305 INFO [org.geoserver] - Loaded workspace 'flood'
2020-03-10 08:18:36,309 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-03-10 08:18:36,311 INFO [org.geoserver] - Loaded style 'world'
2020-03-10 08:18:36,311 INFO [org.geoserver] - Loaded style 'stations'
2020-03-10 08:18:36,313 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-03-10 08:18:36,314 INFO [org.geoserver] - Loaded style 'clustered'
2020-03-10 08:18:36,315 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-03-10 08:18:36,316 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-03-10 08:18:36,317 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-03-10 08:18:36,317 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-03-10 08:18:36,319 INFO [org.geoserver] - Loaded style 'HFM'
2020-03-10 08:18:36,320 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-03-10 08:18:36,321 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-03-10 08:18:36,323 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-03-10 08:18:36,325 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-03-10 08:18:36,325 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-03-10 08:18:36,327 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-03-10 08:18:36,581 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-03-10 08:18:36,583 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-03-10 08:18:37,719 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-03-10 08:18:37,726 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-03-10 08:18:38,084 INFO [org.geoserver] - Loaded layer 'stations'
2020-03-10 08:18:38,088 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-03-10 08:18:38,089 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-03-10 08:18:38,295 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-03-10 08:18:38,401 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-03-10 08:18:38,408 INFO [org.geoserver] - Loaded service 'WFSInfoImpl-9be857d:17053325c6c:-8000', enabled
2020-03-10 08:18:38,411 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-03-10 08:18:38,420 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-03-10 08:18:38,428 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-03-10 08:18:38,439 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-03-10 08:18:38,439 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-03-10 08:18:38,439 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-03-10 08:18:38,474 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-10 08:18:38,474 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-03-10 08:18:38,474 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-03-10 08:18:38,474 WARN [config.XMLConfiguration] - ********************************************************************************
2020-03-10 08:18:38,538 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-03-10 08:18:38,539 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-03-10 08:18:38,539 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-03-10 08:18:38,550 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-03-10 08:18:38,550 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-03-10 08:18:38,550 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-03-10 08:18:38,551 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-03-10 08:18:38,551 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-03-10 08:18:38,559 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-03-10 08:18:38,559 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-03-10 08:18:38,559 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-03-10 08:18:38,592 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-03-10 08:18:38,666 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-03-10 08:18:38,666 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-03-10 08:18:38,673 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-03-10 08:18:39,417 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-03-10 08:18:39,418 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-03-10 08:18:39,418 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-03-10 08:18:39,520 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-03-10 08:18:39,530 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-10 08:18:39,536 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-03-10 08:18:39,538 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-03-10 08:18:39,538 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-03-10 08:18:39,539 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-03-10 08:18:39,567 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-03-10 08:18:39,714 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-03-10 08:18:39,714 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-03-10 08:18:39,867 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-03-10 08:18:39,867 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-03-10 08:18:39,867 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-03-10 08:18:41,997 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-03-10 08:18:42,022 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-03-10 08:18:42,030 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-03-10 08:18:42,032 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-03-10 08:18:42,077 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-03-10 08:18:42,088 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-03-10 08:18:42,088 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-03-10 08:18:42,115 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-03-10 08:18:42,409 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-03-10 08:18:42,409 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-03-10 08:18:42,461 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-03-10 08:18:42,461 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-03-10 08:18:42,650 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-03-10 08:18:42,652 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-03-10 08:18:42,824 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-03-10 08:18:42,824 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-03-10 15:59:45,020 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-03-10 15:59:45,021 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-03-10 15:59:45,025 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-03-10 15:59:45,025 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-03-10 15:59:45,026 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-03-10 15:59:45,026 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-03-10 15:59:45,026 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-03-10 15:59:45,027 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-03-10 15:59:45,027 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-03-10 15:59:45,027 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-03-10 15:59:45,027 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-03-10 15:59:45,043 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-04-07 08:38:13,716 INFO [org.geoserver] - Loaded style 'point'
2020-04-07 08:38:13,718 INFO [org.geoserver] - Loaded style 'generic'
2020-04-07 08:38:13,718 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-04-07 08:38:13,719 INFO [org.geoserver] - Loaded style 'raster'
2020-04-07 08:38:13,719 INFO [org.geoserver] - Loaded style 'line'
2020-04-07 08:38:13,720 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-07 08:38:13,720 INFO [org.geoserver] - Loaded default workspace flood
2020-04-07 08:38:13,723 INFO [org.geoserver] - Loaded workspace 'flood'
2020-04-07 08:38:13,728 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-04-07 08:38:13,729 INFO [org.geoserver] - Loaded style 'world'
2020-04-07 08:38:13,730 INFO [org.geoserver] - Loaded style 'stations'
2020-04-07 08:38:13,731 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-04-07 08:38:13,732 INFO [org.geoserver] - Loaded style 'clustered'
2020-04-07 08:38:13,733 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-04-07 08:38:13,734 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-04-07 08:38:13,735 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-04-07 08:38:13,735 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-04-07 08:38:13,736 INFO [org.geoserver] - Loaded style 'HFM'
2020-04-07 08:38:13,737 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-04-07 08:38:13,738 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-04-07 08:38:13,738 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-04-07 08:38:13,739 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-04-07 08:38:13,740 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-04-07 08:38:13,741 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-04-07 08:38:13,974 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-04-07 08:38:13,976 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-04-07 08:38:14,977 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-04-07 08:38:14,981 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-04-07 08:38:15,296 INFO [org.geoserver] - Loaded layer 'stations'
2020-04-07 08:38:15,300 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-04-07 08:38:15,301 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-04-07 08:38:15,471 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-04-07 08:38:15,575 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-07 08:38:15,583 INFO [org.geoserver] - Loaded service 'WFSInfoImpl-9be857d:17053325c6c:-8000', enabled
2020-04-07 08:38:15,586 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-04-07 08:38:15,596 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-07 08:38:15,604 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-07 08:38:15,613 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-07 08:38:15,613 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-07 08:38:15,613 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-07 08:38:15,657 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-07 08:38:15,657 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-07 08:38:15,657 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-07 08:38:15,657 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-07 08:38:15,727 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-07 08:38:15,727 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-07 08:38:15,727 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-07 08:38:15,734 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-04-07 08:38:15,734 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-04-07 08:38:15,734 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-07 08:38:15,734 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-07 08:38:15,734 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-04-07 08:38:15,739 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-04-07 08:38:15,739 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-04-07 08:38:15,739 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-04-07 08:38:15,780 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-07 08:38:15,852 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-04-07 08:38:15,853 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-04-07 08:38:15,861 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-07 08:38:16,663 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-04-07 08:38:16,664 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-04-07 08:38:16,664 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-04-07 08:38:16,749 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-07 08:38:16,769 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-07 08:38:16,774 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-07 08:38:16,776 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-07 08:38:16,777 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-07 08:38:16,778 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-04-07 08:38:16,787 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-07 08:38:16,927 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-04-07 08:38:16,927 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-04-07 08:38:17,088 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-04-07 08:38:17,088 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-04-07 08:38:17,088 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-04-07 08:38:19,121 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-04-07 08:38:19,145 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-07 08:38:19,152 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-07 08:38:19,153 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-07 08:38:19,189 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-04-07 08:38:19,196 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-07 08:38:19,197 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-07 08:38:19,218 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-07 08:38:19,450 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-04-07 08:38:19,450 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-04-07 08:38:19,495 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-04-07 08:38:19,496 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-04-07 08:38:19,665 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-07 08:38:19,667 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-07 08:38:19,745 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-07 08:38:19,745 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-07 08:38:43,988 INFO [geoserver.security] - Strong cryptography is available
2020-04-07 08:39:50,671 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-07 08:39:50,671 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-07 08:39:50,674 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-07 08:39:50,674 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-07 08:39:50,674 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-07 08:39:50,674 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-07 08:39:50,674 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-07 08:39:50,675 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-07 08:39:50,675 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-07 08:39:50,675 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-07 08:39:50,675 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-07 08:39:50,683 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-04-07 08:42:40,874 INFO [org.geoserver] - Loaded style 'point'
2020-04-07 08:42:40,876 INFO [org.geoserver] - Loaded style 'generic'
2020-04-07 08:42:40,876 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-04-07 08:42:40,876 INFO [org.geoserver] - Loaded style 'raster'
2020-04-07 08:42:40,877 INFO [org.geoserver] - Loaded style 'line'
2020-04-07 08:42:40,877 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-07 08:42:40,878 INFO [org.geoserver] - Loaded default workspace flood
2020-04-07 08:42:40,880 INFO [org.geoserver] - Loaded workspace 'flood'
2020-04-07 08:42:40,883 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-04-07 08:42:40,884 INFO [org.geoserver] - Loaded style 'world'
2020-04-07 08:42:40,884 INFO [org.geoserver] - Loaded style 'stations'
2020-04-07 08:42:40,885 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-04-07 08:42:40,886 INFO [org.geoserver] - Loaded style 'clustered'
2020-04-07 08:42:40,887 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-04-07 08:42:40,887 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-04-07 08:42:40,888 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-04-07 08:42:40,888 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-04-07 08:42:40,889 INFO [org.geoserver] - Loaded style 'HFM'
2020-04-07 08:42:40,890 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-04-07 08:42:40,890 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-04-07 08:42:40,891 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-04-07 08:42:40,892 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-04-07 08:42:40,892 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-04-07 08:42:40,893 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-04-07 08:42:41,123 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-04-07 08:42:41,127 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-04-07 08:42:42,099 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-04-07 08:42:42,103 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-04-07 08:42:42,519 INFO [org.geoserver] - Loaded layer 'stations'
2020-04-07 08:42:42,525 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-04-07 08:42:42,526 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-04-07 08:42:42,726 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-04-07 08:42:42,829 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-07 08:42:42,836 INFO [org.geoserver] - Loaded service 'WFSInfoImpl-9be857d:17053325c6c:-8000', enabled
2020-04-07 08:42:42,839 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-04-07 08:42:42,848 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-07 08:42:42,856 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-07 08:42:42,866 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-07 08:42:42,866 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-07 08:42:42,866 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-07 08:42:42,898 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-07 08:42:42,898 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-07 08:42:42,898 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-07 08:42:42,898 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-07 08:42:42,956 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-07 08:42:42,957 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-07 08:42:42,957 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-07 08:42:42,973 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-04-07 08:42:42,973 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-04-07 08:42:42,973 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-07 08:42:42,973 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-07 08:42:42,973 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-04-07 08:42:42,978 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-04-07 08:42:42,979 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-04-07 08:42:42,979 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-04-07 08:42:43,006 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-07 08:42:43,063 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-04-07 08:42:43,063 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-04-07 08:42:43,070 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-07 08:42:43,812 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-04-07 08:42:43,812 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-04-07 08:42:43,812 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-04-07 08:42:43,908 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-07 08:42:43,919 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-07 08:42:43,924 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-07 08:42:43,926 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-07 08:42:43,926 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-07 08:42:43,928 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-04-07 08:42:43,938 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-07 08:42:44,084 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-04-07 08:42:44,084 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-04-07 08:42:44,249 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-04-07 08:42:44,249 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-04-07 08:42:44,249 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-04-07 08:42:46,249 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-04-07 08:42:46,271 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-07 08:42:46,277 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-07 08:42:46,278 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-07 08:42:46,315 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-04-07 08:42:46,323 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-07 08:42:46,323 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-07 08:42:46,344 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-07 08:42:46,590 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-04-07 08:42:46,590 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-04-07 08:42:46,644 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-04-07 08:42:46,644 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-04-07 08:42:46,813 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-07 08:42:46,816 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-07 08:42:46,907 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-07 08:42:46,908 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-07 08:44:53,479 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-04-07 08:44:53,480 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-04-07 08:44:55,761 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:44:55,839 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: The requested Style can not be used with this layer.  The style specifies an attribute of severity_description and the layer is: flood:flood_warning_alert
	at org.geoserver.wms.map.GetMapKvpRequestReader.checkStyle(GetMapKvpRequestReader.java:1235)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:454)
	at org.geoserver.wms.map.GetMapKvpRequestReader.read(GetMapKvpRequestReader.java:85)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1488)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:674)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-07 08:45:17,452 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:45:17,537 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Width = 20
	Height = 20
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	FeatureType = null
	Layers = [null]
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=, name= styleName=null, title=null, legendInfo=null]]
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Locale = null
	Format = image/png
	Rules = [null]
	Strict = false
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=unhighlight_fwa, WIDTH=20, HEIGHT=20}
	RequestCharset = null
	Version = 1.0.0
	Request = GetLegendGraphic
2020-04-07 08:45:46,696 INFO [gwc.layer] - Truncating layer 'flood:flood_warning_alert' due to a change in style 'unhighlight_fwa'
2020-04-07 08:45:46,698 WARN [catalog.impl] - Catalog listener threw exception handling event.
java.lang.IllegalArgumentException: Thread 30 Unknown layer flood:flood_warning_alert. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.getTileLayerByName(GWC.java:1017)
	at org.geoserver.gwc.GWC.getCachedStyles(GWC.java:553)
	at org.geoserver.gwc.GWC.isStyleCached(GWC.java:541)
	at org.geoserver.gwc.GWC.truncateByLayerAndStyle(GWC.java:370)
	at org.geoserver.gwc.layer.CatalogStyleChangeListener.handleStyleChange(CatalogStyleChangeListener.java:220)
	at org.geoserver.gwc.layer.CatalogStyleChangeListener.handlePostModifyEvent(CatalogStyleChangeListener.java:161)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1512)
	at org.geoserver.catalog.impl.CatalogImpl.firePostModified(CatalogImpl.java:1489)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.afterSaved(AbstractCatalogFacade.java:104)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.saved(AbstractCatalogFacade.java:68)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:808)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:1403)
	at org.geoserver.security.SecureCatalogImpl.save(SecureCatalogImpl.java:1339)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.save(AbstractFilteredCatalog.java:764)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.save(AbstractCatalogDecorator.java:497)
	at org.geoserver.wms.web.data.StyleEditPage.onStyleFormSubmit(StyleEditPage.java:117)
	at org.geoserver.wms.web.data.AbstractStylePage$1.onSubmit(AbstractStylePage.java:143)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1313)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:974)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:795)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:708)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:216)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:865)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:158)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:205)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:157)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.geowebcache.GeoWebCacheException: Thread 30 Unknown layer flood:flood_warning_alert. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geoserver.gwc.GWC.getTileLayerByName(GWC.java:1015)
	... 136 more
2020-04-07 08:45:48,616 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-04-07 08:45:48,617 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-04-07 08:45:50,295 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:45:50,550 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-180.0 : 180.0, -90.0 : 90.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = application/openlayers
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-180.0,-90.0,180.0,90.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.0
	Request = GetMap
2020-04-07 08:45:50,731 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:45:51,053 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-270.0 : 270.0, -135.0 : 135.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-270,-135,270,135, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:45:53,226 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:45:53,456 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-35.595703125 : 31.904296875, 27.421875 : 61.171875]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-35.595703125,27.421875,31.904296875,61.171875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:45:54,234 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:45:54,495 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-8.89892578125 : 7.97607421875, 45.4833984375 : 53.9208984375]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-8.89892578125,45.4833984375,7.97607421875,53.9208984375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:45:55,222 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:45:55,450 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-2.8509521484375 : 1.3677978515625, 49.8504638671875 : 51.9598388671875]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-2.8509521484375,49.8504638671875,1.3677978515625,51.9598388671875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:45:56,298 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:45:56,525 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-5.284423828125 : 3.153076171875, 48.427734375 : 52.646484375]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-5.284423828125,48.427734375,3.153076171875,52.646484375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:53:45,421 INFO [gwc.layer] - Truncating layer 'flood:flood_warning_alert' due to a change in style 'unhighlight_fwa'
2020-04-07 08:53:45,421 WARN [catalog.impl] - Catalog listener threw exception handling event.
java.lang.IllegalArgumentException: Thread 32 Unknown layer flood:flood_warning_alert. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.getTileLayerByName(GWC.java:1017)
	at org.geoserver.gwc.GWC.getCachedStyles(GWC.java:553)
	at org.geoserver.gwc.GWC.isStyleCached(GWC.java:541)
	at org.geoserver.gwc.GWC.truncateByLayerAndStyle(GWC.java:370)
	at org.geoserver.gwc.layer.CatalogStyleChangeListener.handleStyleChange(CatalogStyleChangeListener.java:220)
	at org.geoserver.gwc.layer.CatalogStyleChangeListener.handlePostModifyEvent(CatalogStyleChangeListener.java:161)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1512)
	at org.geoserver.catalog.impl.CatalogImpl.firePostModified(CatalogImpl.java:1489)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.afterSaved(AbstractCatalogFacade.java:104)
	at org.geoserver.catalog.impl.AbstractCatalogFacade.saved(AbstractCatalogFacade.java:68)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.save(DefaultCatalogFacade.java:808)
	at org.geoserver.catalog.impl.CatalogImpl.save(CatalogImpl.java:1403)
	at org.geoserver.security.SecureCatalogImpl.save(SecureCatalogImpl.java:1339)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.save(AbstractFilteredCatalog.java:764)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.save(AbstractCatalogDecorator.java:497)
	at org.geoserver.wms.web.data.StyleEditPage.onStyleFormSubmit(StyleEditPage.java:117)
	at org.geoserver.wms.web.data.AbstractStylePage$1.onSubmit(AbstractStylePage.java:143)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1313)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:974)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:795)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:708)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:216)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:865)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:158)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:205)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:157)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.geowebcache.GeoWebCacheException: Thread 32 Unknown layer flood:flood_warning_alert. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geoserver.gwc.GWC.getTileLayerByName(GWC.java:1015)
	... 136 more
2020-04-07 08:53:52,351 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-04-07 08:53:52,352 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-04-07 08:53:54,139 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:53:54,214 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-180.0 : 180.0, -90.0 : 90.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = application/openlayers
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-180.0,-90.0,180.0,90.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.0
	Request = GetMap
2020-04-07 08:53:54,381 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:53:54,589 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-270.0 : 270.0, -135.0 : 135.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-270,-135,270,135, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:53:55,837 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:53:56,032 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-56.42578125 : 78.57421875, 8.96484375 : 76.46484375]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-56.42578125,8.96484375,78.57421875,76.46484375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:53:56,691 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:53:56,888 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-12.5244140625 : 21.2255859375, 41.1767578125 : 58.0517578125]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-12.5244140625,41.1767578125,21.2255859375,58.0517578125, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:53:57,506 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:53:57,735 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-6.78955078125 : 10.08544921875, 46.2744140625 : 54.7119140625]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-6.78955078125,46.2744140625,10.08544921875,54.7119140625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:53:58,206 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:53:58,434 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-3.75732421875 : 4.68017578125, 48.680419921875 : 52.899169921875]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-3.75732421875,48.680419921875,4.68017578125,52.899169921875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:53:58,757 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:53:58,960 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.483154296875 : 0.626220703125, 50.50689697265625 : 51.56158447265625]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.483154296875,50.50689697265625,0.626220703125,51.56158447265625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:53:59,560 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:53:59,798 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.6534423828125 : 0.4559326171875, 50.61676025390625 : 51.67144775390625]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.6534423828125,50.61676025390625,0.4559326171875,51.67144775390625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:54:00,351 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:54:00,578 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-0.8974456787109375 : -0.3701019287109375, 51.046600341796875 : 51.310272216796875]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-0.8974456787109375,51.046600341796875,-0.3701019287109375,51.310272216796875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:54:01,586 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:54:01,869 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[-0.6169509887695312 : -0.5475997924804688, 51.168479919433594 : 51.237831115722656]
 layers: flood:flood_warning_alert
 styles: unhighlight_fwa
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=flood:flood_warning_alert, REQUEST=GetFeatureInfo, SRS=EPSG:4326, BBOX=-0.6169509887695312,51.168479919433594,-0.5475997924804688,51.237831115722656, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=flood:flood_warning_alert, TRANSPARENT=true, FEATURE_COUNT=50}
	RequestCharset = null
	Version = 1.1.1
	Request = GetFeatureInfo
2020-04-07 08:54:01,910 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:54:01,913 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Width = 20
	Height = 20
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	FeatureType = null
	Layers = [SimpleFeatureTypeImpl http://apps.environment-agency.gov.uk/flood:flood_warning_alert identified extends Feature(id:id,ta_code:ta_code,ta_name:ta_name,severity_value:severity_value,severity:severity,geom:geom)]
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=flood_warning_alert, name=http://apps.environment-agency.gov.uk/flood:flood_warning_alert styleName=null, title=flood_warning_alert, legendInfo=null]]
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Locale = null
	Format = image/png
	Rules = [null]
	Strict = true
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {REQUEST=GetLegendGraphic, FORMAT=image/png, SERVICE=wms, WIDTH=20, HEIGHT=20, LAYER=flood_warning_alert}
	RequestCharset = null
	Version = 1.1.1
	Request = GetLegendGraphic
2020-04-07 08:54:30,964 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-04-07 08:54:30,965 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-04-07 08:54:34,104 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-04-07 08:54:34,104 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]. Locale: null, style: null
2020-04-07 08:54:35,792 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:54:35,881 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-180.0 : 180.0, -90.0 : 90.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = application/openlayers
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-180.0,-90.0,180.0,90.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.0
	Request = GetMap
2020-04-07 08:54:36,010 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:54:36,205 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-270.0 : 270.0, -135.0 : 135.0]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-270,-135,270,135, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:54:37,659 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:54:37,857 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-28.212890625 : 39.287109375, 26.806640625 : 60.556640625]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-28.212890625,26.806640625,39.287109375,60.556640625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:54:38,277 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:54:38,474 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-6.61376953125 : 10.26123046875, 45.68115234375 : 54.11865234375]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-6.61376953125,45.68115234375,10.26123046875,54.11865234375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:54:38,896 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:54:39,098 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-2.362060546875 : 1.856689453125, 50.1031494140625 : 52.2125244140625]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-2.362060546875,50.1031494140625,1.856689453125,52.2125244140625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:54:39,232 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:54:39,429 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.6864013671875 : 0.4229736328125, 50.75408935546875 : 51.80877685546875]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.6864013671875,50.75408935546875,0.4229736328125,51.80877685546875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:54:39,993 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:54:40,226 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.8621826171875 : 0.2471923828125, 50.635986328125 : 51.690673828125]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.8621826171875,50.635986328125,0.2471923828125,51.690673828125, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:54:40,961 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:54:41,187 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 768
	Height = 384
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-1.2744140625 : -0.2197265625, 50.906524658203125 : 51.433868408203125]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-1.2744140625,50.906524658203125,-0.2197265625,51.433868408203125, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.1.1
	Request = GetMap
2020-04-07 08:54:42,063 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:54:42,315 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[-0.6557464599609375 : -0.5170440673828125, 51.12831115722656 : 51.26701354980469]
 layers: flood:flood_warning_alert
 styles: unhighlight_fwa
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=flood:flood_warning_alert, REQUEST=GetFeatureInfo, SRS=EPSG:4326, BBOX=-0.6557464599609375,51.12831115722656,-0.5170440673828125,51.26701354980469, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=flood:flood_warning_alert, TRANSPARENT=true, FEATURE_COUNT=50}
	RequestCharset = null
	Version = 1.1.1
	Request = GetFeatureInfo
2020-04-07 08:54:42,347 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:54:42,351 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Width = 20
	Height = 20
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	FeatureType = null
	Layers = [SimpleFeatureTypeImpl http://apps.environment-agency.gov.uk/flood:flood_warning_alert identified extends Feature(id:id,ta_code:ta_code,ta_name:ta_name,severity_value:severity_value,severity:severity,geom:geom)]
	Env = {}
	Transparent = false
	Legends = [LegendRequest [layer=flood_warning_alert, name=http://apps.environment-agency.gov.uk/flood:flood_warning_alert styleName=null, title=flood_warning_alert, legendInfo=null]]
	Scale = -1.0
	Exceptions = SE_XML
	LegendOptions = {}
	Locale = null
	Format = image/png
	Rules = [null]
	Strict = true
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {REQUEST=GetLegendGraphic, FORMAT=image/png, SERVICE=wms, WIDTH=20, HEIGHT=20, LAYER=flood_warning_alert}
	RequestCharset = null
	Version = 1.1.1
	Request = GetLegendGraphic
2020-04-07 08:56:46,033 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-07 08:56:46,034 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-07 08:56:46,038 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-07 08:56:46,038 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-07 08:56:46,039 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-07 08:56:46,039 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-07 08:56:46,039 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-07 08:56:46,039 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-07 08:56:46,040 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-07 08:56:46,040 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-07 08:56:46,040 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-07 08:56:46,050 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-04-07 08:57:38,664 INFO [org.geoserver] - Loaded style 'point'
2020-04-07 08:57:38,666 INFO [org.geoserver] - Loaded style 'generic'
2020-04-07 08:57:38,667 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-04-07 08:57:38,667 INFO [org.geoserver] - Loaded style 'raster'
2020-04-07 08:57:38,668 INFO [org.geoserver] - Loaded style 'line'
2020-04-07 08:57:38,668 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-07 08:57:38,669 INFO [org.geoserver] - Loaded default workspace flood
2020-04-07 08:57:38,672 INFO [org.geoserver] - Loaded workspace 'flood'
2020-04-07 08:57:38,676 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-04-07 08:57:38,677 INFO [org.geoserver] - Loaded style 'world'
2020-04-07 08:57:38,678 INFO [org.geoserver] - Loaded style 'stations'
2020-04-07 08:57:38,679 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-04-07 08:57:38,680 INFO [org.geoserver] - Loaded style 'clustered'
2020-04-07 08:57:38,682 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-04-07 08:57:38,683 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-04-07 08:57:38,683 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-04-07 08:57:38,684 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-04-07 08:57:38,685 INFO [org.geoserver] - Loaded style 'HFM'
2020-04-07 08:57:38,686 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-04-07 08:57:38,687 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-04-07 08:57:38,688 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-04-07 08:57:38,689 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-04-07 08:57:38,690 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-04-07 08:57:38,691 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-04-07 08:57:38,949 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-04-07 08:57:38,952 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-04-07 08:57:39,972 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-04-07 08:57:39,977 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-04-07 08:57:40,280 INFO [org.geoserver] - Loaded layer 'stations'
2020-04-07 08:57:40,284 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-04-07 08:57:40,284 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-04-07 08:57:40,480 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-04-07 08:57:40,598 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-07 08:57:40,612 INFO [org.geoserver] - Loaded service 'WFSInfoImpl-9be857d:17053325c6c:-8000', enabled
2020-04-07 08:57:40,616 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-04-07 08:57:40,634 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-07 08:57:40,649 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-07 08:57:40,668 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-07 08:57:40,668 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-07 08:57:40,669 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-07 08:57:40,717 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-07 08:57:40,718 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-07 08:57:40,718 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-07 08:57:40,718 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-07 08:57:40,859 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-07 08:57:40,859 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-07 08:57:40,859 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-07 08:57:40,866 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-04-07 08:57:40,866 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-04-07 08:57:40,867 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-07 08:57:40,867 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-07 08:57:40,867 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-04-07 08:57:40,872 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-04-07 08:57:40,872 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-04-07 08:57:40,872 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-04-07 08:57:40,902 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-07 08:57:40,966 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-04-07 08:57:40,966 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-04-07 08:57:40,972 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-07 08:57:41,748 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-04-07 08:57:41,749 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-04-07 08:57:41,749 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-04-07 08:57:41,843 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-07 08:57:41,854 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-07 08:57:41,860 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-07 08:57:41,861 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-07 08:57:41,862 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-07 08:57:41,863 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-04-07 08:57:41,873 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-07 08:57:42,020 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-04-07 08:57:42,020 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-04-07 08:57:42,175 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-04-07 08:57:42,175 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-04-07 08:57:42,175 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-04-07 08:57:44,198 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-04-07 08:57:44,221 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-07 08:57:44,228 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-07 08:57:44,230 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-07 08:57:44,264 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-04-07 08:57:44,271 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-07 08:57:44,271 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-07 08:57:44,289 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-07 08:57:44,516 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-04-07 08:57:44,517 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-04-07 08:57:44,566 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-04-07 08:57:44,566 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-04-07 08:57:44,731 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-07 08:57:44,733 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-07 08:57:44,823 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-07 08:57:44,823 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-07 08:58:47,414 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 08:58:47,720 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 08:58:47,743 INFO [wfs.json] - about to encode JSON
2020-04-07 08:58:49,556 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:58:50,188 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 510
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-78003.98736502236 : -58512.545152302424, 6643658.078205594 : 6670219.945534692]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-78003.98736502236,6643658.078205594,-58512.545152302424,6670219.945534692, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=510, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 08:58:58,679 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:58:58,936 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-152338.99737235627 : -46091.52805596127, 6612796.628035453 : 6719044.097351848]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-152338.99737235627,6612796.628035453,-46091.52805596127,6719044.097351848, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 08:58:59,843 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:59:00,076 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-134452.73275362502 : -28205.263437230038, 6614478.242657728 : 6720725.711974123]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-134452.73275362502,6614478.242657728,-28205.263437230038,6720725.711974123, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 08:59:00,511 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:59:00,732 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-106514.99891539311 : -53391.26425719561, 6635918.829091718 : 6689042.563749917]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-106514.99891539311,6635918.829091718,-53391.26425719561,6689042.563749917, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 08:59:01,584 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:59:01,812 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-97036.80740803125 : -43913.07274983375, 6631638.35550775 : 6684762.090165947]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-97036.80740803125,6631638.35550775,-43913.07274983375,6684762.090165947, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 08:59:02,971 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 08:59:03,125 INFO [geoserver.global] - queried a not allowed property: fwa_key. Ommitting it from query
2020-04-07 08:59:03,125 INFO [geoserver.global] - queried a not allowed property: fwa_code. Ommitting it from query
2020-04-07 08:59:03,274 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Internal error occurred
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:50)
	at org.geoserver.wms.DefaultWebMapService.getFeatureInfo(DefaultWebMapService.java:338)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy59.getFeatureInfo(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: PropertyDescriptor is null - did you request a property that does not exist?
	at org.geotools.feature.type.ComplexTypeImpl.<init>(ComplexTypeImpl.java:75)
	at org.geotools.feature.type.FeatureTypeImpl.<init>(FeatureTypeImpl.java:54)
	at org.geotools.feature.simple.SimpleFeatureTypeImpl.<init>(SimpleFeatureTypeImpl.java:59)
	at org.geotools.feature.type.FeatureTypeFactoryImpl.createSimpleFeatureType(FeatureTypeFactoryImpl.java:158)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.buildFeatureType(SimpleFeatureTypeBuilder.java:962)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1112)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1089)
	at org.geotools.data.collection.CollectionFeatureSource.getFeatures(CollectionFeatureSource.java:226)
	at org.geoserver.wms.GetFeatureInfo.selectProperties(GetFeatureInfo.java:154)
	at org.geoserver.wms.GetFeatureInfo.execute(GetFeatureInfo.java:82)
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:44)
	... 113 more
2020-04-07 09:01:00,013 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 09:01:00,194 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 09:01:00,197 INFO [wfs.json] - about to encode JSON
2020-04-07 09:02:12,025 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:02:12,250 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-133688.36247077328 : -27440.893154378267, 6622274.819542815 : 6728522.28885921]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-133688.36247077328,6622274.819542815,-27440.893154378267,6728522.28885921, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:02:13,137 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:02:13,335 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-106973.62108510417 : -53849.88642690667, 6642951.035693955 : 6696074.770352153]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-106973.62108510417,6642951.035693955,-53849.88642690667,6696074.770352153, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:02:18,168 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:02:18,298 INFO [geoserver.global] - queried a not allowed property: fwa_key. Ommitting it from query
2020-04-07 09:02:18,298 INFO [geoserver.global] - queried a not allowed property: fwa_code. Ommitting it from query
2020-04-07 09:02:18,514 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Internal error occurred
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:50)
	at org.geoserver.wms.DefaultWebMapService.getFeatureInfo(DefaultWebMapService.java:338)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy59.getFeatureInfo(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: PropertyDescriptor is null - did you request a property that does not exist?
	at org.geotools.feature.type.ComplexTypeImpl.<init>(ComplexTypeImpl.java:75)
	at org.geotools.feature.type.FeatureTypeImpl.<init>(FeatureTypeImpl.java:54)
	at org.geotools.feature.simple.SimpleFeatureTypeImpl.<init>(SimpleFeatureTypeImpl.java:59)
	at org.geotools.feature.type.FeatureTypeFactoryImpl.createSimpleFeatureType(FeatureTypeFactoryImpl.java:158)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.buildFeatureType(SimpleFeatureTypeBuilder.java:962)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1112)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1089)
	at org.geotools.data.collection.CollectionFeatureSource.getFeatures(CollectionFeatureSource.java:226)
	at org.geoserver.wms.GetFeatureInfo.selectProperties(GetFeatureInfo.java:154)
	at org.geoserver.wms.GetFeatureInfo.execute(GetFeatureInfo.java:82)
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:44)
	... 113 more
2020-04-07 09:02:20,367 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:02:20,566 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-126541.5003261093 : -73417.7656679118, 6640887.235930255 : 6694010.970588453]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-126541.5003261093,6640887.235930255,-73417.7656679118,6694010.970588453, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:02:21,559 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:02:21,690 INFO [geoserver.global] - queried a not allowed property: fwa_key. Ommitting it from query
2020-04-07 09:02:21,690 INFO [geoserver.global] - queried a not allowed property: fwa_code. Ommitting it from query
2020-04-07 09:02:21,816 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Internal error occurred
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:50)
	at org.geoserver.wms.DefaultWebMapService.getFeatureInfo(DefaultWebMapService.java:338)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy59.getFeatureInfo(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: PropertyDescriptor is null - did you request a property that does not exist?
	at org.geotools.feature.type.ComplexTypeImpl.<init>(ComplexTypeImpl.java:75)
	at org.geotools.feature.type.FeatureTypeImpl.<init>(FeatureTypeImpl.java:54)
	at org.geotools.feature.simple.SimpleFeatureTypeImpl.<init>(SimpleFeatureTypeImpl.java:59)
	at org.geotools.feature.type.FeatureTypeFactoryImpl.createSimpleFeatureType(FeatureTypeFactoryImpl.java:158)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.buildFeatureType(SimpleFeatureTypeBuilder.java:962)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1112)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1089)
	at org.geotools.data.collection.CollectionFeatureSource.getFeatures(CollectionFeatureSource.java:226)
	at org.geoserver.wms.GetFeatureInfo.selectProperties(GetFeatureInfo.java:154)
	at org.geoserver.wms.GetFeatureInfo.execute(GetFeatureInfo.java:82)
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:44)
	... 113 more
2020-04-07 09:02:26,212 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:02:26,342 INFO [geoserver.global] - queried a not allowed property: fwa_key. Ommitting it from query
2020-04-07 09:02:26,342 INFO [geoserver.global] - queried a not allowed property: fwa_code. Ommitting it from query
2020-04-07 09:02:26,472 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Internal error occurred
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:50)
	at org.geoserver.wms.DefaultWebMapService.getFeatureInfo(DefaultWebMapService.java:338)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy59.getFeatureInfo(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: PropertyDescriptor is null - did you request a property that does not exist?
	at org.geotools.feature.type.ComplexTypeImpl.<init>(ComplexTypeImpl.java:75)
	at org.geotools.feature.type.FeatureTypeImpl.<init>(FeatureTypeImpl.java:54)
	at org.geotools.feature.simple.SimpleFeatureTypeImpl.<init>(SimpleFeatureTypeImpl.java:59)
	at org.geotools.feature.type.FeatureTypeFactoryImpl.createSimpleFeatureType(FeatureTypeFactoryImpl.java:158)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.buildFeatureType(SimpleFeatureTypeBuilder.java:962)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1112)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1089)
	at org.geotools.data.collection.CollectionFeatureSource.getFeatures(CollectionFeatureSource.java:226)
	at org.geoserver.wms.GetFeatureInfo.selectProperties(GetFeatureInfo.java:154)
	at org.geoserver.wms.GetFeatureInfo.execute(GetFeatureInfo.java:82)
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:44)
	... 113 more
2020-04-07 09:02:28,669 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:02:28,799 INFO [geoserver.global] - queried a not allowed property: fwa_key. Ommitting it from query
2020-04-07 09:02:28,799 INFO [geoserver.global] - queried a not allowed property: fwa_code. Ommitting it from query
2020-04-07 09:02:28,926 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Internal error occurred
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:50)
	at org.geoserver.wms.DefaultWebMapService.getFeatureInfo(DefaultWebMapService.java:338)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy59.getFeatureInfo(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: PropertyDescriptor is null - did you request a property that does not exist?
	at org.geotools.feature.type.ComplexTypeImpl.<init>(ComplexTypeImpl.java:75)
	at org.geotools.feature.type.FeatureTypeImpl.<init>(FeatureTypeImpl.java:54)
	at org.geotools.feature.simple.SimpleFeatureTypeImpl.<init>(SimpleFeatureTypeImpl.java:59)
	at org.geotools.feature.type.FeatureTypeFactoryImpl.createSimpleFeatureType(FeatureTypeFactoryImpl.java:158)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.buildFeatureType(SimpleFeatureTypeBuilder.java:962)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1112)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1089)
	at org.geotools.data.collection.CollectionFeatureSource.getFeatures(CollectionFeatureSource.java:226)
	at org.geoserver.wms.GetFeatureInfo.selectProperties(GetFeatureInfo.java:154)
	at org.geoserver.wms.GetFeatureInfo.execute(GetFeatureInfo.java:82)
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:44)
	... 113 more
2020-04-07 09:02:33,277 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:02:33,412 INFO [geoserver.global] - queried a not allowed property: fwa_key. Ommitting it from query
2020-04-07 09:02:33,413 INFO [geoserver.global] - queried a not allowed property: fwa_code. Ommitting it from query
2020-04-07 09:02:33,542 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Internal error occurred
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:50)
	at org.geoserver.wms.DefaultWebMapService.getFeatureInfo(DefaultWebMapService.java:338)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy59.getFeatureInfo(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: PropertyDescriptor is null - did you request a property that does not exist?
	at org.geotools.feature.type.ComplexTypeImpl.<init>(ComplexTypeImpl.java:75)
	at org.geotools.feature.type.FeatureTypeImpl.<init>(FeatureTypeImpl.java:54)
	at org.geotools.feature.simple.SimpleFeatureTypeImpl.<init>(SimpleFeatureTypeImpl.java:59)
	at org.geotools.feature.type.FeatureTypeFactoryImpl.createSimpleFeatureType(FeatureTypeFactoryImpl.java:158)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.buildFeatureType(SimpleFeatureTypeBuilder.java:962)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1112)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1089)
	at org.geotools.data.collection.CollectionFeatureSource.getFeatures(CollectionFeatureSource.java:226)
	at org.geoserver.wms.GetFeatureInfo.selectProperties(GetFeatureInfo.java:154)
	at org.geoserver.wms.GetFeatureInfo.execute(GetFeatureInfo.java:82)
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:44)
	... 113 more
2020-04-07 09:02:46,171 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:02:46,363 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 324
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-124898.10421797799 : -75366.9098891838, 6642607.069066672 : 6705744.054430228]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-124898.10421797799,6642607.069066672,-75366.9098891838,6705744.054430228, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=324, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:02:50,285 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:02:50,510 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 325
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-104240.99732390912 : -91819.98022756797, 6657110.995183784 : 6672895.241524673]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-104240.99732390912,6657110.995183784,-91819.98022756797,6672895.241524673, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=325, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:02:51,880 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:02:52,010 INFO [geoserver.global] - queried a not allowed property: fwa_key. Ommitting it from query
2020-04-07 09:02:52,010 INFO [geoserver.global] - queried a not allowed property: fwa_code. Ommitting it from query
2020-04-07 09:02:52,100 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Internal error occurred
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:50)
	at org.geoserver.wms.DefaultWebMapService.getFeatureInfo(DefaultWebMapService.java:338)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.geoserver.kml.WebMapServiceKmlInterceptor.invoke(WebMapServiceKmlInterceptor.java:34)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy59.getFeatureInfo(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:840)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:147)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:50)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:968)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:859)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:844)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:152)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:543)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:688)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:609)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:818)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1623)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: PropertyDescriptor is null - did you request a property that does not exist?
	at org.geotools.feature.type.ComplexTypeImpl.<init>(ComplexTypeImpl.java:75)
	at org.geotools.feature.type.FeatureTypeImpl.<init>(FeatureTypeImpl.java:54)
	at org.geotools.feature.simple.SimpleFeatureTypeImpl.<init>(SimpleFeatureTypeImpl.java:59)
	at org.geotools.feature.type.FeatureTypeFactoryImpl.createSimpleFeatureType(FeatureTypeFactoryImpl.java:158)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.buildFeatureType(SimpleFeatureTypeBuilder.java:962)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1112)
	at org.geotools.feature.simple.SimpleFeatureTypeBuilder.retype(SimpleFeatureTypeBuilder.java:1089)
	at org.geotools.data.collection.CollectionFeatureSource.getFeatures(CollectionFeatureSource.java:226)
	at org.geoserver.wms.GetFeatureInfo.selectProperties(GetFeatureInfo.java:154)
	at org.geoserver.wms.GetFeatureInfo.execute(GetFeatureInfo.java:82)
	at org.geoserver.wms.GetFeatureInfo.run(GetFeatureInfo.java:44)
	... 113 more
2020-04-07 09:09:04,726 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:09:05,061 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 447
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-128543.19500432734 : -124272.27604889311, 6634366.201954677 : 6638312.263539898]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-128543.19500432734,6634366.201954677,-124272.27604889311,6638312.263539898, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=447, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:10:05,819 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 09:10:05,882 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 09:10:05,883 INFO [wfs.json] - about to encode JSON
2020-04-07 09:10:10,669 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:10:10,833 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 447
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-128543.19500432734 : -124272.27604889311, 6634366.201954677 : 6638312.263539898]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-128543.19500432734,6634366.201954677,-124272.27604889311,6638312.263539898, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=447, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:10:14,877 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:10:15,040 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 448
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-135752.16223447304 : -118630.26789859355, 6627033.024553567 : 6642817.270894457]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-135752.16223447304,6627033.024553567,-118630.26789859355,6642817.270894457, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=448, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:10:16,533 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:10:16,759 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = [[id, ta_code, severity_value]]
	QueryLayers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	FeatureCount = 10
	GetMapRequest = 
GetMap Request
 version: 1.3.0
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[-131529.01642171704 : -127668.94649331564, 6636864.737316747 : 6640724.807245149]
 layers: flood:flood_warning_alert
 styles: unhighlight_fwa
	InfoFormat = application/json
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {PROPERTYNAME=id,ta_code,severity_value, FORMAT=image/png, INFO_FORMAT=application/json, CRS=EPSG:3857, I=50, STYLES=, J=50, WIDTH=101, HEIGHT=101, LAYERS=flood:flood_warning_alert, REQUEST=GetFeatureInfo, BBOX=-131529.01642171704,6636864.737316747,-127668.94649331564,6640724.807245149, VERSION=1.3.0, SERVICE=WMS, QUERY_LAYERS=flood:flood_warning_alert, TRANSPARENT=true, FEATURE_COUNT=10}
	RequestCharset = null
	Version = 1.3.0
	Request = GetFeatureInfo
2020-04-07 09:10:16,762 INFO [wfs.json] - about to encode JSON
2020-04-07 09:10:17,051 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:10:17,212 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 447
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-145650.75739740336 : -111483.40575392956, 6629727.42980062 : 6661295.922482397]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-145650.75739740336,6629727.42980062,-111483.40575392956,6661295.922482397, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=447, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:13:19,335 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 09:13:19,394 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 09:13:19,395 INFO [wfs.json] - about to encode JSON
2020-04-07 09:14:14,124 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 09:14:14,181 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 09:14:14,183 INFO [wfs.json] - about to encode JSON
2020-04-07 09:14:22,218 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:14:22,439 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-151574.6270895045 : -45327.15777310952, 6596439.103982425 : 6702686.57329882]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-151574.6270895045,6596439.103982425,-45327.15777310952,6702686.57329882, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:14:24,523 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:14:24,739 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = [[id, ta_code, severity_value]]
	QueryLayers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	FeatureCount = 10
	GetMapRequest = 
GetMap Request
 version: 1.3.0
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[-99673.88488386982 : -84233.60517026423, 6664850.244297656 : 6680290.524011263]
 layers: flood:flood_warning_alert
 styles: unhighlight_fwa
	InfoFormat = application/json
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {PROPERTYNAME=id,ta_code,severity_value, FORMAT=image/png, INFO_FORMAT=application/json, CRS=EPSG:3857, I=50, STYLES=, J=50, WIDTH=101, HEIGHT=101, LAYERS=flood:flood_warning_alert, REQUEST=GetFeatureInfo, BBOX=-99673.88488386982,6664850.244297656,-84233.60517026423,6680290.524011263, VERSION=1.3.0, SERVICE=WMS, QUERY_LAYERS=flood:flood_warning_alert, TRANSPARENT=true, FEATURE_COUNT=10}
	RequestCharset = null
	Version = 1.3.0
	Request = GetFeatureInfo
2020-04-07 09:14:24,740 INFO [wfs.json] - about to encode JSON
2020-04-07 09:14:25,592 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:14:25,781 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 448
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-134376.29572533985 : -65888.71838182193, 6642607.069066672 : 6705744.054430228]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-134376.29572533985,6642607.069066672,-65888.71838182193,6705744.054430228, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=448, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:16:00,016 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 09:16:00,112 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 09:16:00,114 INFO [wfs.json] - about to encode JSON
2020-04-07 09:17:39,144 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 09:17:39,207 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 09:17:39,208 INFO [wfs.json] - about to encode JSON
2020-04-07 09:19:00,415 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 09:19:00,475 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 09:19:00,476 INFO [wfs.json] - about to encode JSON
2020-04-07 09:20:28,880 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 09:20:28,945 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 09:20:28,946 INFO [wfs.json] - about to encode JSON
2020-04-07 09:20:31,021 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:20:31,232 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 324
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-124898.10421797799 : -75366.9098891838, 6642607.069066672 : 6705744.054430228]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-124898.10421797799,6642607.069066672,-75366.9098891838,6705744.054430228, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=324, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:20:33,169 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:20:33,360 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 324
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-124898.10421797799 : -75366.9098891838, 6642607.069066672 : 6705744.054430228]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-124898.10421797799,6642607.069066672,-75366.9098891838,6705744.054430228, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=324, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:20:44,707 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:20:45,001 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 447
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-98427.0058599679 : -94156.08690453367, 6660813.413741347 : 6664759.475326569]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-98427.0058599679,6660813.413741347,-94156.08690453367,6664759.475326569, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=447, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:20:51,676 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:20:51,823 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 448
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-133038.64773034927 : -115916.7533944698, 6662538.0241920315 : 6678322.270532921]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-133038.64773034927,6662538.0241920315,-115916.7533944698,6678322.270532921, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=448, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:20:56,753 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:20:56,971 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-149893.01246723064 : -43645.54315083564, 6610044.895017187 : 6716292.364333582]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-149893.01246723064,6610044.895017187,-43645.54315083564,6716292.364333582, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:20:58,633 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:20:58,843 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = [[id, ta_code, severity_value]]
	QueryLayers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	FeatureCount = 10
	GetMapRequest = 
GetMap Request
 version: 1.3.0
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[-99673.88488386982 : -84233.60517026423, 6664850.244297657 : 6680290.524011264]
 layers: flood:flood_warning_alert
 styles: unhighlight_fwa
	InfoFormat = application/json
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {PROPERTYNAME=id,ta_code,severity_value, FORMAT=image/png, INFO_FORMAT=application/json, CRS=EPSG:3857, I=50, STYLES=, J=50, WIDTH=101, HEIGHT=101, LAYERS=flood:flood_warning_alert, REQUEST=GetFeatureInfo, BBOX=-99673.88488386982,6664850.244297657,-84233.60517026423,6680290.524011264, VERSION=1.3.0, SERVICE=WMS, QUERY_LAYERS=flood:flood_warning_alert, TRANSPARENT=true, FEATURE_COUNT=10}
	RequestCharset = null
	Version = 1.3.0
	Request = GetFeatureInfo
2020-04-07 09:20:58,844 INFO [wfs.json] - about to encode JSON
2020-04-07 09:20:59,458 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:20:59,646 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 448
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-134376.29572533985 : -65888.71838182193, 6642607.069066672 : 6705744.054430228]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-134376.29572533985,6642607.069066672,-65888.71838182193,6705744.054430228, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=448, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:21:03,883 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:21:04,161 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 447
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-98427.0058599679 : -94156.08690453367, 6660813.413741347 : 6664759.475326569]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-98427.0058599679,6660813.413741347,-94156.08690453367,6664759.475326569, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=447, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:21:14,250 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:21:14,399 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 447
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-136229.89366125537 : -119146.21783951849, 6622523.239884742 : 6638307.486225631]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-136229.89366125537,6622523.239884742,-119146.21783951849,6638307.486225631, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=447, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:21:16,240 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:21:16,396 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 447
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-145574.32036911818 : -111406.96872564439, 6616427.386879 : 6647995.879560777]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-145574.32036911818,6616427.386879,-111406.96872564439,6647995.879560777, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=447, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:21:19,960 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:21:20,160 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 2760
	Height = 1477
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-180429.60526715853 : -74946.50623361532, 6602190.990360885 : 6658639.735749488]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-180429.60526715853,6602190.990360885,-74946.50623361532,6658639.735749488, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=2760, HEIGHT=1477, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:21:23,241 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:21:23,458 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = [[id, ta_code, severity_value]]
	QueryLayers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	FeatureCount = 10
	GetMapRequest = 
GetMap Request
 version: 1.3.0
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[-146128.48882418568 : -142268.4188957843, 6618510.295899771 : 6622370.365828173]
 layers: flood:flood_warning_alert
 styles: unhighlight_fwa
	InfoFormat = application/json
	Exceptions = application/vnd.ogc.se_xml
	XPixel = 50
	YPixel = 50
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {PROPERTYNAME=id,ta_code,severity_value, FORMAT=image/png, INFO_FORMAT=application/json, CRS=EPSG:3857, I=50, STYLES=, J=50, WIDTH=101, HEIGHT=101, LAYERS=flood:flood_warning_alert, REQUEST=GetFeatureInfo, BBOX=-146128.48882418568,6618510.295899771,-142268.4188957843,6622370.365828173, VERSION=1.3.0, SERVICE=WMS, QUERY_LAYERS=flood:flood_warning_alert, TRANSPARENT=true, FEATURE_COUNT=10}
	RequestCharset = null
	Version = 1.3.0
	Request = GetFeatureInfo
2020-04-07 09:21:23,459 INFO [wfs.json] - about to encode JSON
2020-04-07 09:21:23,724 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:21:23,868 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 447
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-149979.00412405145 : -141437.166213183, 6618634.506070733 : 6626526.629241178]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-149979.00412405145,6618634.506070733,-141437.166213183,6626526.629241178, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=447, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:21:29,056 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-07 09:21:29,202 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 447
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-172059.75066993173 : -103725.04738298416, 6595521.859643003 : 6658658.845006559]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-172059.75066993173,6595521.859643003,-103725.04738298416,6658658.845006559, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=447, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-07 09:31:00,009 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 09:31:00,094 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 09:31:00,095 INFO [wfs.json] - about to encode JSON
2020-04-07 09:46:00,011 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 09:46:00,090 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 09:46:00,091 INFO [wfs.json] - about to encode JSON
2020-04-07 14:55:56,987 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 14:55:57,051 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 14:55:57,052 INFO [wfs.json] - about to encode JSON
2020-04-07 15:01:00,011 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 15:01:00,076 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 15:01:00,077 INFO [wfs.json] - about to encode JSON
2020-04-07 15:16:00,008 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 15:16:00,081 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 15:16:00,083 INFO [wfs.json] - about to encode JSON
2020-04-07 15:31:00,008 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 15:31:00,079 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 15:31:00,080 INFO [wfs.json] - about to encode JSON
2020-04-07 15:46:00,008 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-07 15:46:00,079 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-07 15:46:00,080 INFO [wfs.json] - about to encode JSON
2020-04-07 15:54:27,078 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-07 15:54:27,079 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-07 15:54:27,081 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-07 15:54:27,081 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-07 15:54:27,082 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-07 15:54:27,082 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-07 15:54:27,082 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-07 15:54:27,082 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-07 15:54:27,082 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-07 15:54:27,082 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-07 15:54:27,083 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-07 15:54:27,094 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-04-08 08:03:14,314 INFO [org.geoserver] - Loaded style 'point'
2020-04-08 08:03:14,316 INFO [org.geoserver] - Loaded style 'generic'
2020-04-08 08:03:14,317 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-04-08 08:03:14,318 INFO [org.geoserver] - Loaded style 'raster'
2020-04-08 08:03:14,318 INFO [org.geoserver] - Loaded style 'line'
2020-04-08 08:03:14,319 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-08 08:03:14,320 INFO [org.geoserver] - Loaded default workspace flood
2020-04-08 08:03:14,322 INFO [org.geoserver] - Loaded workspace 'flood'
2020-04-08 08:03:14,326 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-04-08 08:03:14,327 INFO [org.geoserver] - Loaded style 'world'
2020-04-08 08:03:14,328 INFO [org.geoserver] - Loaded style 'stations'
2020-04-08 08:03:14,329 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-04-08 08:03:14,330 INFO [org.geoserver] - Loaded style 'clustered'
2020-04-08 08:03:14,331 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-04-08 08:03:14,331 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-04-08 08:03:14,332 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-04-08 08:03:14,333 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-04-08 08:03:14,334 INFO [org.geoserver] - Loaded style 'HFM'
2020-04-08 08:03:14,335 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-04-08 08:03:14,335 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-04-08 08:03:14,336 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-04-08 08:03:14,337 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-04-08 08:03:14,338 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-04-08 08:03:14,338 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-04-08 08:03:14,576 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-04-08 08:03:14,578 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-04-08 08:03:15,579 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-04-08 08:03:15,585 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-04-08 08:03:15,896 INFO [org.geoserver] - Loaded layer 'stations'
2020-04-08 08:03:15,899 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-04-08 08:03:15,900 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-04-08 08:03:16,123 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-04-08 08:03:16,230 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-08 08:03:16,239 INFO [org.geoserver] - Loaded service 'WFSInfoImpl-9be857d:17053325c6c:-8000', enabled
2020-04-08 08:03:16,242 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-04-08 08:03:16,254 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-08 08:03:16,263 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-08 08:03:16,274 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-08 08:03:16,274 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-08 08:03:16,274 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-08 08:03:16,307 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-08 08:03:16,307 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-08 08:03:16,308 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-08 08:03:16,308 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-08 08:03:16,374 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-08 08:03:16,374 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-08 08:03:16,375 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-08 08:03:16,381 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-04-08 08:03:16,381 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-04-08 08:03:16,381 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-08 08:03:16,381 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-08 08:03:16,381 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-04-08 08:03:16,386 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-04-08 08:03:16,387 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-04-08 08:03:16,387 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-04-08 08:03:16,427 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-08 08:03:16,492 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-04-08 08:03:16,492 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-04-08 08:03:16,500 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-08 08:03:17,312 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-04-08 08:03:17,312 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-04-08 08:03:17,312 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-04-08 08:03:17,416 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-08 08:03:17,428 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-08 08:03:17,444 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-08 08:03:17,446 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-08 08:03:17,446 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-08 08:03:17,448 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-04-08 08:03:17,457 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-08 08:03:17,604 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-04-08 08:03:17,604 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-04-08 08:03:17,773 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-04-08 08:03:17,773 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-04-08 08:03:17,773 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-04-08 08:03:19,844 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-04-08 08:03:19,868 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-08 08:03:19,874 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-08 08:03:19,876 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-08 08:03:19,914 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-04-08 08:03:19,922 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-08 08:03:19,922 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-08 08:03:19,949 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-08 08:03:20,234 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-04-08 08:03:20,234 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-04-08 08:03:20,282 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-04-08 08:03:20,282 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-04-08 08:03:20,461 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-08 08:03:20,463 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-08 08:03:20,540 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-08 08:03:20,540 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-08 08:03:21,110 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 08:03:21,397 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-04-08 08:03:21,420 INFO [wfs.json] - about to encode JSON
2020-04-08 08:10:42,451 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 08:10:42,509 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    outputFormat = application/json
    resultType = results
2020-04-08 08:10:42,516 INFO [wfs.json] - about to encode JSON
2020-04-08 08:10:56,617 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 08:10:56,918 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@23ea5ed1 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((12972.383858686406 6569634.005340149, 12972.383858686406 6593260.625878892, 48093.03601087174 6593260.625878892, 48093.03601087174 6569634.005340149, 12972.383858686406 6569634.005340149)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((12972.383858686406 6569634.005340149, 12972.383858686406 6593260.625878892, 48093.03601087174 6593260.625878892, 48093.03601087174 6569634.005340149, 12972.383858686406 6569634.005340149)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((12972.383858686406 6569634.005340149, 12972.383858686406 6593260.625878892, 48093.03601087174 6593260.625878892, 48093.03601087174 6569634.005340149, 12972.383858686406 6569634.005340149)) ]
2020-04-08 08:10:56,920 INFO [wfs.json] - about to encode JSON
2020-04-08 08:11:04,583 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 08:11:04,704 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@41a9587e (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((12608.0905316365 6569388.906745073, 12608.0905316365 6593505.667396574, 48457.329337921656 6593505.667396574, 48457.329337921656 6569388.906745073, 12608.0905316365 6569388.906745073)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((12608.0905316365 6569388.906745073, 12608.0905316365 6593505.667396574, 48457.329337921656 6593505.667396574, 48457.329337921656 6569388.906745073, 12608.0905316365 6569388.906745073)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((12608.0905316365 6569388.906745073, 12608.0905316365 6593505.667396574, 48457.329337921656 6593505.667396574, 48457.329337921656 6569388.906745073, 12608.0905316365 6569388.906745073)) ]
2020-04-08 08:11:04,705 INFO [wfs.json] - about to encode JSON
2020-04-08 08:11:28,601 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 08:11:28,719 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@10e6f3e4 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-27760.459042437753 6542158.211082148, -27760.459042437753 6625501.019041221, 96127.49873456087 6625501.019041221, 96127.49873456087 6542158.211082148, -27760.459042437753 6542158.211082148)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-27760.459042437753 6542158.211082148, -27760.459042437753 6625501.019041221, 96127.49873456087 6625501.019041221, 96127.49873456087 6542158.211082148, -27760.459042437753 6542158.211082148)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-27760.459042437753 6542158.211082148, -27760.459042437753 6625501.019041221, 96127.49873456087 6625501.019041221, 96127.49873456087 6542158.211082148, -27760.459042437753 6542158.211082148)) ]
2020-04-08 08:11:28,720 INFO [wfs.json] - about to encode JSON
2020-04-08 08:11:35,574 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 08:11:35,698 INFO [geoserver.wfs] - 
Request: getFeature
    service = wfs
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@b7ec893 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [  bbox POLYGON ((-29045.470800089824 6541293.735448129, -29045.470800089824 6626365.500754756, 97412.55870976036 6626365.500754756, 97412.55870976036 6541293.735448129, -29045.470800089824 6541293.735448129)) ], abstractSortingClause: null, aliases: null, typeNames: [{http://apps.environment-agency.gov.uk/flood}flood_warning_alert]) (featureVersion: null, srsName: EPSG:3857, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [  bbox POLYGON ((-29045.470800089824 6541293.735448129, -29045.470800089824 6626365.500754756, 97412.55870976036 6626365.500754756, 97412.55870976036 6541293.735448129, -29045.470800089824 6541293.735448129)) ]
        typeNames[0] = {http://apps.environment-agency.gov.uk/flood}flood_warning_alert
        srsName = EPSG:3857
        filter = [  bbox POLYGON ((-29045.470800089824 6541293.735448129, -29045.470800089824 6626365.500754756, 97412.55870976036 6626365.500754756, 97412.55870976036 6541293.735448129, -29045.470800089824 6541293.735448129)) ]
2020-04-08 08:11:35,699 INFO [wfs.json] - about to encode JSON
2020-04-08 08:14:47,442 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-08 08:14:47,443 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-08 08:14:47,447 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-08 08:14:47,447 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-08 08:14:47,447 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-08 08:14:47,448 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-08 08:14:47,448 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-08 08:14:47,448 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-08 08:14:47,449 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-08 08:14:47,449 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-08 08:14:47,449 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-08 08:14:47,457 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2020-04-08 09:53:58,120 INFO [org.geoserver] - Loaded style 'point'
2020-04-08 09:53:58,121 INFO [org.geoserver] - Loaded style 'generic'
2020-04-08 09:53:58,122 INFO [org.geoserver] - Loaded style 'unhighlight_fwa'
2020-04-08 09:53:58,123 INFO [org.geoserver] - Loaded style 'raster'
2020-04-08 09:53:58,123 INFO [org.geoserver] - Loaded style 'line'
2020-04-08 09:53:58,124 INFO [org.geoserver] - Loaded style 'polygon'
2020-04-08 09:53:58,125 INFO [org.geoserver] - Loaded default workspace flood
2020-04-08 09:53:58,128 INFO [org.geoserver] - Loaded workspace 'flood'
2020-04-08 09:53:58,133 INFO [org.geoserver] - Loaded style 'nafraPolygon'
2020-04-08 09:53:58,135 INFO [org.geoserver] - Loaded style 'world'
2020-04-08 09:53:58,136 INFO [org.geoserver] - Loaded style 'stations'
2020-04-08 09:53:58,137 INFO [org.geoserver] - Loaded style 'PolygonGreen'
2020-04-08 09:53:58,138 INFO [org.geoserver] - Loaded style 'clustered'
2020-04-08 09:53:58,139 INFO [org.geoserver] - Loaded style 'england_cutout'
2020-04-08 09:53:58,140 INFO [org.geoserver] - Loaded style 'SolidPolygona020f0'
2020-04-08 09:53:58,140 INFO [org.geoserver] - Loaded style 'clustered_stations'
2020-04-08 09:53:58,141 INFO [org.geoserver] - Loaded style 'highlight_fwa'
2020-04-08 09:53:58,143 INFO [org.geoserver] - Loaded style 'HFM'
2020-04-08 09:53:58,144 INFO [org.geoserver] - Loaded style 'FWA_heat'
2020-04-08 09:53:58,145 INFO [org.geoserver] - Loaded style 'SolidPolygon'
2020-04-08 09:53:58,146 INFO [org.geoserver] - Loaded style 'PolygonRed'
2020-04-08 09:53:58,147 INFO [org.geoserver] - Loaded style 'nafra_heat'
2020-04-08 09:53:58,147 INFO [org.geoserver] - Loaded style 'flood_alert_warning_centroid_symbols'
2020-04-08 09:53:58,148 INFO [org.geoserver] - Loaded style 'SolidPolygonRed'
2020-04-08 09:53:58,447 INFO [org.geoserver] - Loaded store 'flooddev', enabled
2020-04-08 09:53:58,450 INFO [org.geoserver] - Loaded data store 'flooddev'
2020-04-08 09:53:59,533 INFO [org.geoserver] - Loaded feature type 'stations', enabled
2020-04-08 09:53:59,538 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-04-08 09:53:59,849 INFO [org.geoserver] - Loaded layer 'stations'
2020-04-08 09:53:59,854 INFO [org.geoserver] - Loaded feature type 'flood_warning_alert', enabled
2020-04-08 09:53:59,855 INFO [org.geoserver] - Loaded feature type 'flooddev'
2020-04-08 09:54:00,088 INFO [org.geoserver] - Loaded layer 'flood_warning_alert'
2020-04-08 09:54:00,233 INFO [org.geoserver] - Loaded service 'wcs', enabled
2020-04-08 09:54:00,246 INFO [org.geoserver] - Loaded service 'WFSInfoImpl-9be857d:17053325c6c:-8000', enabled
2020-04-08 09:54:00,251 INFO [org.geoserver] - Loaded service 'WMTSInfoImpl-5a51acd8:15a410bdb3a:-7fff', enabled
2020-04-08 09:54:00,267 INFO [org.geoserver] - Loaded service 'wms', enabled
2020-04-08 09:54:00,280 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-08 09:54:00,294 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-08 09:54:00,294 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-08 09:54:00,294 INFO [config.XMLFileResourceProvider] - Found configuration file in gwc
2020-04-08 09:54:00,338 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-08 09:54:00,339 WARN [config.XMLConfiguration] - *** GWC configuration validation error: cvc-elt.1: Cannot find the declaration of element 'gwcConfiguration'.
2020-04-08 09:54:00,339 WARN [config.XMLConfiguration] - *** Will try to use configuration anyway. Please check the order of declared elements against the schema.
2020-04-08 09:54:00,339 WARN [config.XMLConfiguration] - ********************************************************************************
2020-04-08 09:54:00,422 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2020-04-08 09:54:00,423 INFO [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
2020-04-08 09:54:00,423 INFO [gwc.layer] - Loading tile layers from gwc-layers
2020-04-08 09:54:00,444 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2020-04-08 09:54:00,444 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2020-04-08 09:54:00,444 INFO [config.XMLConfiguration] - Initializing GridSets from gwc
2020-04-08 09:54:00,445 INFO [config.XMLConfiguration] - Initializing layers from gwc
2020-04-08 09:54:00,445 INFO [layer.TileLayerDispatcher] - Configuration gwc contained no layers.
2020-04-08 09:54:00,453 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-04-08 09:54:00,453 INFO [storage.DefaultStorageFinder] - *** Found Java environment variable GEOSERVER_DATA_DIR set to /home/tedd/lfw/geoserver/data, using it as the default prefix. ***
2020-04-08 09:54:00,453 INFO [storage.DefaultStorageFinder] - ********************************************************************************************************************************
2020-04-08 09:54:00,489 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2020-04-08 09:54:00,563 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2020-04-08 09:54:00,563 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2020-04-08 09:54:00,574 INFO [org.geoserver] - GeoServer configuration lock is enabled
2020-04-08 09:54:01,532 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2020-04-08 09:54:01,532 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2020-04-08 09:54:01,532 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2020-04-08 09:54:01,628 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-08 09:54:01,642 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-08 09:54:01,648 INFO [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
2020-04-08 09:54:01,650 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2020-04-08 09:54:01,650 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2020-04-08 09:54:01,651 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500.0 MB
2020-04-08 09:54:01,663 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2020-04-08 09:54:01,840 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2020-04-08 09:54:01,840 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2020-04-08 09:54:02,034 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2020-04-08 09:54:02,034 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2020-04-08 09:54:02,034 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2020-04-08 09:54:04,375 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2020-04-08 09:54:04,394 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2020-04-08 09:54:04,401 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2020-04-08 09:54:04,403 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2020-04-08 09:54:04,440 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2020-04-08 09:54:04,449 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2020-04-08 09:54:04,449 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2020-04-08 09:54:04,472 INFO [config.XMLFileResourceProvider] - Will look for geowebcache.xml in '/home/tedd/lfw/geoserver/data/gwc'
2020-04-08 09:54:04,748 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2020-04-08 09:54:04,748 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2020-04-08 09:54:04,803 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2020-04-08 09:54:04,803 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2020-04-08 09:54:04,999 INFO [geoserver.security] - Start reloading user/groups for service named default
2020-04-08 09:54:05,002 INFO [geoserver.security] - Reloading user/groups successful for service named default
2020-04-08 09:54:05,104 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2020-04-08 09:54:05,105 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2020-04-08 09:54:05,767 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 09:54:06,165 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 09:54:06,206 INFO [wfs.json] - about to encode JSON
2020-04-08 09:55:46,480 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 09:55:46,541 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 09:55:46,548 INFO [wfs.json] - about to encode JSON
2020-04-08 09:57:59,097 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 09:57:59,154 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 09:57:59,155 INFO [wfs.json] - about to encode JSON
2020-04-08 09:59:16,528 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 09:59:16,587 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 09:59:16,589 INFO [wfs.json] - about to encode JSON
2020-04-08 10:00:25,916 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-08 10:00:26,470 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 448
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-157001.656097752 : -152721.18251378214, 6623693.68188036 : 6627639.743465581]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-157001.656097752,6623693.68188036,-152721.18251378214,6627639.743465581, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=448, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-08 10:00:40,520 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-08 10:00:40,694 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-355231.534326821 : -341950.6006622716, 7278114.076858163 : 7291395.010522712]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-355231.534326821,7278114.076858163,-341950.6006622716,7291395.010522712, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-08 10:00:43,285 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-08 10:00:43,430 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-362636.37144194747 : -336074.5041128487, 7272161.543280455 : 7298723.410609554]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-362636.37144194747,7272161.543280455,-336074.5041128487,7298723.410609554, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-08 10:00:44,300 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-08 10:00:44,451 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-407180.0496751339 : -300932.5803587389, 7236675.652899062 : 7342923.122215457]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-407180.0496751339,7236675.652899062,-300932.5803587389,7342923.122215457, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-08 10:00:49,351 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-08 10:00:49,582 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-378592.601096478 : -272345.131780083, 7161002.994896737 : 7267250.464213132]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-378592.601096478,7161002.994896737,-272345.131780083,7267250.464213132, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-08 10:00:59,564 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-08 10:00:59,795 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-381038.58600160363 : -274791.11668520863, 7138989.130750607 : 7245236.600067002]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-381038.58600160363,7138989.130750607,-274791.11668520863,7245236.600067002, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-08 10:01:00,014 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 10:01:00,122 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 10:01:00,124 INFO [wfs.json] - about to encode JSON
2020-04-08 10:01:04,628 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-08 10:01:04,773 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[17255.659135378537 : 43817.52646447728, 6568176.512773982 : 6594738.3801030805]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=17255.659135378537,6568176.512773982,43817.52646447728,6594738.3801030805, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-08 10:01:10,576 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-08 10:01:10,721 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 695
	Height = 695
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-313527.96942585555 : -310207.73600971827, 6991281.739560905 : 6994601.972977043]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-313527.96942585555,6991281.739560905,-310207.73600971827,6994601.972977043, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=695, HEIGHT=695, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-08 10:13:59,934 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-08 10:14:00,125 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 447
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-107585.11731138558 : -73417.7656679118, 6723362.789449961 : 6754931.282131738]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-107585.11731138558,6723362.789449961,-73417.7656679118,6754931.282131738, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=447, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-08 10:14:06,198 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-08 10:14:06,352 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 447
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-107585.11731138558 : -73417.7656679118, 6723362.789449961 : 6754931.282131738]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-107585.11731138558,6723362.789449961,-73417.7656679118,6754931.282131738, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=447, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-08 10:14:10,112 INFO [geoserver.wms] - 
Request: getServiceInfo
2020-04-08 10:14:10,272 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Width = 447
	Height = 413
	Tiled = false
	Palette = null
	SRS = urn:x-ogc:def:crs:EPSG:3857
	FeatureVersion = null
	Styles = [StyleImpl[ name=unhighlight_fwa]]
	Layers = [org.geoserver.wms.MapLayerInfo@d60d0045]
	MaxFeatures = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Angle = 0.0
	Crs = PROJCS["WGS 84 / Pseudo-Mercator", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic latitude", NORTH], 
    AXIS["Geodetic longitude", EAST], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Popular Visualisation Pseudo Mercator", AUTHORITY["EPSG","1024"]], 
  PARAMETER["semi_minor", 6378137.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["central_meridian", 0.0], 
  PARAMETER["scale_factor", 1.0], 
  PARAMETER["false_easting", 0.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","3857"]]
	FeatureId = null
	ViewParams = null
	Bbox = SRSEnvelope[-107585.11731138558 : -73417.7656679118, 6723362.789449961 : 6754931.282131738]
	RemoteOwsType = null
	RemoteOwsURL = null
	Env = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	ValidateSchema = false
	Sld = null
	StyleUrl = null
	TilesOrigin = null
	Interpolations = []
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	Time = []
	Filter = null
	Buffer = 0
	Format = image/png
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, CRS=EPSG:3857, BBOX=-107585.11731138558,6723362.789449961,-73417.7656679118,6754931.282131738, VERSION=1.3.0, STYLES=, SERVICE=WMS, WIDTH=447, HEIGHT=413, TRANSPARENT=true, LAYERS=flood:flood_warning_alert}
	RequestCharset = UTF-8
	Version = 1.3.0
	Request = GetMap
2020-04-08 10:16:00,014 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 10:16:00,083 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 10:16:00,084 INFO [wfs.json] - about to encode JSON
2020-04-08 10:31:00,009 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 10:31:00,079 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 10:31:00,080 INFO [wfs.json] - about to encode JSON
2020-04-08 10:46:00,007 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 10:46:00,085 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 10:46:00,087 INFO [wfs.json] - about to encode JSON
2020-04-08 11:01:00,005 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 11:01:00,178 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 11:01:00,179 INFO [wfs.json] - about to encode JSON
2020-04-08 11:16:00,005 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 11:16:00,089 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 11:16:00,090 INFO [wfs.json] - about to encode JSON
2020-04-08 11:31:00,012 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 11:31:00,093 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 11:31:00,095 INFO [wfs.json] - about to encode JSON
2020-04-08 11:46:00,008 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 11:46:00,079 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 11:46:00,080 INFO [wfs.json] - about to encode JSON
2020-04-08 12:01:00,007 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 12:01:00,170 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 12:01:00,171 INFO [wfs.json] - about to encode JSON
2020-04-08 12:16:00,005 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 12:16:00,065 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 12:16:00,066 INFO [wfs.json] - about to encode JSON
2020-04-08 12:31:00,010 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 12:31:00,086 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 12:31:00,088 INFO [wfs.json] - about to encode JSON
2020-04-08 12:46:00,010 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 12:46:00,095 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 12:46:00,097 INFO [wfs.json] - about to encode JSON
2020-04-08 13:01:00,008 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 13:01:00,199 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 13:01:00,200 INFO [wfs.json] - about to encode JSON
2020-04-08 13:16:00,012 INFO [geoserver.wfs] - 
Request: getServiceInfo
2020-04-08 13:16:00,085 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {http://apps.environment-agency.gov.uk/flood}stations
    maxFeatures = 10000
    outputFormat = application/json
    resultType = results
2020-04-08 13:16:00,087 INFO [wfs.json] - about to encode JSON
2020-04-08 13:29:05,065 INFO [georss.GeoRSSPoller] - destroy() invoked
2020-04-08 13:29:05,067 INFO [geowebcache.GeoWebCacheDispatcher] - GeoWebCacheDispatcher.destroy() was invoked, shutting down.
2020-04-08 13:29:05,071 INFO [diskquota.DiskQuotaMonitor] - Disk quota monitor shutting down...
2020-04-08 13:29:05,071 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota usage monitor...
2020-04-08 13:29:05,071 INFO [diskquota.QuotaUpdatesMonitor] - Shutting down quota usage monitor...
2020-04-08 13:29:05,072 INFO [diskquota.DiskQuotaMonitor] - Shutting down quota statistics gathering monitor...
2020-04-08 13:29:05,072 INFO [diskquota.QueuedQuotaUpdatesConsumer] - Shutting down quota update background task due to InterruptedException
2020-04-08 13:29:05,072 INFO [diskquota.QueuedUsageStatsConsumer] - Shutting down quota update background task due to interrupted exception
2020-04-08 13:29:05,072 INFO [seed.SeederThreadPoolExecutor] - Initiating shut down for running and pending seed tasks...
2020-04-08 13:29:05,073 INFO [seed.SeederThreadPoolExecutor] - Seeder thread pool executor shut down complete.
2020-04-08 13:29:05,073 INFO [storage.DefaultStorageBroker] - Destroying StorageBroker
2020-04-08 13:29:05,084 WARN [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while the singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
